{"split":"1","session.current":["/WorkoutLog.java"],"session.open":{"/WorkoutLog.java":{"scrollTop":257.5,"scrollLeft":0,"selection":{"start":{"row":45,"column":19},"end":{"row":45,"column":19}},"lastUse":1524327529495,"undo":[[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":48,"column":29},"end":{"row":48,"column":33}},"text":"user"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":48,"column":28},"end":{"row":48,"column":29}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":48,"column":25},"end":{"row":48,"column":28}},"text":"the"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":48,"column":24},"end":{"row":48,"column":25}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":48,"column":19},"end":{"row":48,"column":24}},"text":"Signs"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":48,"column":19},"end":{"row":48,"column":20}},"text":"Q"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":48,"column":20},"end":{"row":48,"column":21}},"text":"u"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":48,"column":21},"end":{"row":48,"column":22}},"text":"i"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":48,"column":22},"end":{"row":48,"column":23}},"text":"t"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":48,"column":23},"end":{"row":48,"column":24}},"text":"s"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":48,"column":24},"end":{"row":48,"column":25}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":48,"column":25},"end":{"row":48,"column":26}},"text":"t"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":48,"column":26},"end":{"row":48,"column":27}},"text":"h"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":48,"column":27},"end":{"row":48,"column":28}},"text":"e"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":48,"column":28},"end":{"row":48,"column":29}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":48,"column":29},"end":{"row":48,"column":30}},"text":"p"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":48,"column":30},"end":{"row":48,"column":31}},"text":"r"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":48,"column":31},"end":{"row":48,"column":32}},"text":"o"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":48,"column":32},"end":{"row":48,"column":33}},"text":"g"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":48,"column":33},"end":{"row":48,"column":34}},"text":"r"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":48,"column":34},"end":{"row":48,"column":35}},"text":"a"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":48,"column":35},"end":{"row":48,"column":36}},"text":"m"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":53,"column":27},"end":{"row":54,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":54,"column":0},"end":{"row":54,"column":16}},"text":"                "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":54,"column":16},"end":{"row":54,"column":17}},"text":"b"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":54,"column":17},"end":{"row":54,"column":18}},"text":"r"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":54,"column":18},"end":{"row":54,"column":19}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":54,"column":19},"end":{"row":54,"column":20}},"text":"a"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":54,"column":20},"end":{"row":54,"column":21}},"text":"k"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":54,"column":21},"end":{"row":54,"column":22}},"text":"l"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":54,"column":21},"end":{"row":54,"column":22}},"text":"l"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":54,"column":21},"end":{"row":54,"column":22}},"text":";"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":46,"column":29},"end":{"row":47,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":47,"column":0},"end":{"row":47,"column":16}},"text":"                "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":47,"column":16},"end":{"row":47,"column":22}},"text":"break;"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":43,"column":49},"end":{"row":44,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":44,"column":0},"end":{"row":44,"column":16}},"text":"                "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":44,"column":16},"end":{"row":44,"column":22}},"text":"break;"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":10,"column":23},"end":{"row":10,"column":24}},"text":"a"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":10,"column":23},"end":{"row":10,"column":24}},"text":"a"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":535,"column":0},"end":{"row":535,"column":1}},"text":"}"},{"action":"removeLines","range":{"start":{"row":0,"column":0},"end":{"row":535,"column":0}},"nl":"\n","lines":["/**"," * This is a Java Program used to input Excersizes, Weights, Reps, and Sets"," *  ...into a workout log"," *  "," *  @caleberb"," *  v1.2.4"," */","// import statments","import java.io.*;","import java.io.File.*;","import java.nio.file.*;","import java.util.*;","import java.time.*;","import java.time.format.*;","","public class WorkoutLog {","    ","    /**","     * @param args","     * Initializes the constant variables used throughout the class","     * They are not changed by any part of the code","     * @return void","     */","    public static void main(String[] args) throws Exception {","        // Create scanner objects","        Scanner scan = new Scanner(System.in);","        Scanner intScan = new Scanner(System.in);","        ","        // Converts Object LocalDate to String in format MM-DD-YYYY","        LocalDate localDate = LocalDate.now();","        DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"MM-d-yyyy\");","        String date = localDate.format(formatter);","        ","        int logSign = 0;","        println(\"Please choose an option: \");","        println(\"1) Log in\");","        println(\"2) Sign up\");","        println(\"3) Quit\");","        ","        logSign = intScan.nextInt();","        switch(logSign){","            case 1:","                // Logs the user in","                logIn(scan, intScan, date, args);","                break;","            case 2:","                // Signs the user up","                signUp(scan);","                break;","            case 2:","                // Quits the program","                break;","            default:","                // Default option, gives error, calls recursively","                println(\"Error. Please enter a valid option.\");","                main(args);","                break;","        }","        ","    }","    ","    /**","     * @param Scanner","     * @param Scanner","     * @param String","     * @param String[]args","     * Acts as a log in screen for the user, passing them to the home method","     * @return void","     */","    private static void logIn(Scanner scan, Scanner intScan, String date, String[] args) throws Exception{","        String csvFile = sysCheckDir(scan) + \"usrList.CSV\";","        String passHash = \"\";","        ","        // Prompts user for their name","        print(\"Please input your username or \\'000\\' to quit: \");","        String uName = scan.nextLine();","        if(uName.equals(\"000\")){","            main(args);","        }","        ","        if(usrCheck(csvFile, uName)){","            passHash = passCheck(csvFile, uName);","        } else {","            println(\"Error. Username does not exist. Try logging in again.\");","            logIn(scan, intScan, date, args);","        }","        ","        print(\"Please input your password: \");","        String pWord = scan.nextLine();","        ","        String decryptedPass = Protected.decryptPass(passHash);","        ","        if(pWord.equals(decryptedPass)){","            // Enter main program ... not to be confused with main method","            home(scan, intScan, uName, date, args);","        } else {","            println(\"Error. Incorrect Password. Try logging in again.\");","            logIn(scan, intScan, date, args);","        }","        ","        ","        ","    }","    ","    /**","     * @param String","     * @param String","     * Checks if the inputted username exists in the user log","     * @return boolean","     */","    private static boolean usrCheck(String csvFile, String usrName) throws Exception{","        String[][] usrListArr = CSVUtils.readFile(csvFile);","        boolean usrExists = false;        ","        for(int i = 0; i < usrListArr.length; i++){","            if(usrListArr[i][0].equals(usrName)){","                usrExists = true;","            }","        }","        return usrExists;","    }","    ","    /**","     * @param String","     * @param String","     * Retrieves the passWord hash from the usrList CSV file","     * @return String","     */","    private static String passCheck(String csvFile, String usrName) throws Exception{","        String[][] usrListArr = CSVUtils.readFile(csvFile);","        String pass = \"\";        ","        for(int i = 0; i < usrListArr.length; i++){","            if(usrListArr[i][0].equals(usrName)){","                pass = usrListArr[i][1];","            }","        }","        return pass;","    }","    ","    /**","     * @param Scanner ","     * @param Scanner","     * @param String","     * @param String","     * @param String[]args","     * Acts as the main method, an calls itself recursively until user quits","     * @return void","     */","    private static void home(Scanner scan, Scanner intScan, String name, String todayDate, String[] args) throws Exception{","        // Prompts the user whether they want to open/write current or past log","        int usrOper = promptOper(intScan);","        ","        //Follows through with the users prompt","        switch(usrOper){","            case 1: ","                // Open today","                openLog(scan, name, todayDate);","                break;","            case 2: ","                // Write today","                writeLog(scan, intScan, name, todayDate);","                break;","            case 3: ","                // Open past with given date","                print(\"Input date in MM-DD-YYYY format: \");","                String openPastDate = scan.nextLine();","                openLog(scan, name, openPastDate);","                break;","            case 4: ","                // Write past with given date","                print(\"Input date in MM-DD-YYYY format: \");","                String writePastDate = scan.nextLine();","                writeLog(scan, intScan, name, writePastDate);","                break;","            case 5:","                main(args);","                break;","            case 6:","                signUp(scan, intScan);","                break;","            default: ","                break;","        }","        ","        //Returns home after program ends if user wishes","        println(\"\\nReturn home? (y/n): \");","        String returnHome = scan.nextLine();","        returnHome = returnHome.toLowerCase();","        switch(returnHome){","            case \"y\":","                home(scan, intScan, name, todayDate, args);","                break;","            case \"n\":","                break;","        }","        ","    }","    ","    /**","     * @param Scanner","     * Lists the availible functions and asks the user for input","     * @return int","     */","    private static int promptOper(Scanner intScan){","        //Prompts the user whether they want to open/write current or past log","        println(\"Please select an option\");","        println(\"1) Open today's log\");","        println(\"2) Write today's log\");","        println(\"3) Open a past day's log\");","        println(\"4) Write a past day's log\");","        println(\"5) Log out\");","        int usrOper = intScan.nextInt();","        int oper = 0;","        switch(usrOper){","            case 1:","                oper = 1;","                break;","            case 2:","                oper = 2;","                break;","            case 3:","                oper = 3;","                break;","            case 4:","                oper = 4;","                break;","            case 5:","                oper = 4;","                break;","            default:","                println(\"Error! Invalid Option. Please enter a valid option: \");","                usrOper = promptOper(intScan);","        }","        return usrOper;","    }","    ","    ","    /**","     * @param Scanner","     * @param String","     * @param String","     * Reads the file for today and prints it out on screen","     * @return void","     */","    private static void openLog (Scanner scan, String name, String date) throws java.io.IOException{","        // Locates appropriate file path and stores it in csvFile","        String csvFile = sysCheck(scan, name, date);","        ","        // Checks if the log file exists or not","        if(checkLogExists(csvFile)){","            // If log file exists, read the file","            String arr[][] = CSVUtils.readFile(csvFile);","            println(\"\");","            for(int i = 0; i < arr.length;i++){","                for(int j = 0; j < arr[i].length; j++){","                    if(j == arr[i].length - 1){","                        print(arr[i][j] + \"\");","                    } else {","                        print(arr[i][j] + \" : \");","                    }","                }","                println(\"\");","            }","        }","        ","        // Checks if the log file exists or not","        if(!checkLogExists(csvFile)){","            // If the log file does not exist, print error and end","            println(\"Sorry. There is no log for the given date and user.\");","        }","    }","    ","    /**","     * @param Scanner","     * @param Scanner","     * @param String","     * @param String","     * Asks the user for input and writes their data into today's log","     * @return void","     */","    private static void writeLog (Scanner scan, Scanner intScan, String name, String date) throws java.io.IOException{","        // Prompts user for number of exercises","        println(\"Please input the number of excerises you will be logging for the day: \");","        int numOfEx = intScan.nextInt();","        ","        // Creates CSV file and location based on operating system","        String csvFile = sysCheck(scan, name, date);","        ","        // Checks if the log file exists or not","        if(!checkLogExists(csvFile)){","            // Creates file if it did not exist previously","            createLog(csvFile);","        }","        ","        // Selects created file as file to write to","        FileWriter writer = new FileWriter(csvFile);","        ","        // Create and add headers to the CSV file","        ArrayList<String> headers = new ArrayList<String>();","        headers.add(\"Exercise\");","        headers.add(\"Weight\");","        headers.add(\"Reps\");","        headers.add(\"Sets\");","        CSVUtils.writeLine(writer, headers);","        ","        /*","         * Continuously asks user for input","         * Adds input to ArrayList \"input\"","         * Writes \"input\" to CSV","         * Clears \"input\"","         */","        ArrayList<String> input = new ArrayList<String>();","        for(int i = 0; i < numOfEx; i++){","            // Prompts for input","            println(\"\\n\");","            print(\"Exercise: \");","            String ex = scan.nextLine();","            print(\"Weight: \");","            String we = scan.nextLine();","            print(\"Reps: \");","            String re = scan.nextLine();","            print(\"Sets: \");","            String se = scan.nextLine();","            ","            // Adds input to ArrayList","            input.add(ex);","            input.add(we);","            input.add(re);","            input.add(se);","            ","            // Writes ArrayList to CSV file","            CSVUtils.writeLine(writer, input);","            input.remove(0);","            input.remove(0);","            input.remove(0);","            input.remove(0);","        }","        ","        // Close the file writer and ends method","        writer.flush();","        writer.close();","    }","    ","    /**","     * @param Scanner","     * @param String","     * @param String","     * Asks the user for what operating system they are using in order to ","     *    Establish which file navigation system to use.","     * @return String","     */","    private static String sysCheck(Scanner scan, String name, String date){","        String csvFile = sysCheckDir(scan);","        ","        // Sets csvFile to path of full CSV log file","        csvFile = name + \" - \" + date + \".csv\";","        return csvFile;","    }","    ","    /**","     * @param Scanner","     * Determines correct path to the 'Workout' directory on the user's desktop","     * @return String","     */","    private static String sysCheckDir(Scanner scan){","        // Reads the system for the computer user for file path purposes","        String sysUsrName = System.getProperty(\"user.name\");","        ","        // Initializes variables","        String csvFile = \"\";","        String customDirStr = \"\";","        int opCode = 0;","        ","        //Checks which file navigation system the user's computer uses","        File linuxDir = new File(\"/home/\" + sysUsrName + \"/Desktop/\");","        File windowsDir = new File(\"C:/Users/\" + sysUsrName + \"/Desktop/\");","        File macDir = new File(\"/Users/\" + sysUsrName + \"/Desktop/\");","        boolean linuxDirExists = linuxDir.exists();","        boolean windowsDirExists = windowsDir.exists();","        boolean macDirExists = macDir.exists();","        ","        // Sets opCode relational to which file navigation system the computer uses","        if(linuxDirExists){","            // Use linux file navigation system","            opCode = 1;","        } else if (windowsDirExists){","            // Use windows file navigation system","            opCode = 2;","        } else if (macDirExists){","            // Use mac file navigation system","            opCode = 3;","        } else {","            // Use custom file navigation system","            opCode = 4;","            println(\"Please input the full path to your desktop folder: \");","            customDirStr = scan.nextLine();","        }","        ","        // Sets the csvFile string to contain the path of the system Desktop folder","        switch(opCode){","            case 1: ","                // linux Desktop folder","                Path filePath = linuxDir.toPath();","                csvFile = filePath.toString();","                break;","            case 2:","                // window Desktop folder","                filePath = windowsDir.toPath();","                csvFile = filePath.toString();","                break;","            case 3:","                // mac Desktop folder","                filePath = macDir.toPath();","                csvFile = filePath.toString();","                break;","            case 4:","                // custom Desktop folder","                csvFile = customDirStr;","                break;","        }","        ","        // Check if Workout folder on Desktop exists","        // If not, creates if","        String workoutDirStr = csvFile + \"/Workout/\";","        File workoutDir = new File(workoutDirStr);","        if(!workoutDir.exists()){","            new File(workoutDirStr).mkdirs();","        }","        ","        // Sets csvFile to path of full CSV file","        csvFile = workoutDirStr;","        return csvFile;","    }","    ","    /**","     * @param String","     * Checks if the given log exists","     * @return boolean","     */","    private static boolean checkLogExists(String csvFile){","        // Default if log doesn't exist","        boolean logExists = false;","        ","        //Creates File object with path of log","        File logFile = new File(csvFile);","        ","        //Checks if the log exists","        if(logFile.exists()){","            // Sets boolean to true: the file does exist","            logExists = true;","        }","        ","        return logExists;","    }","    ","    /**","     * @param String","     * Creates the given log file if it does not exist","     * @return void","     */","    private static void createLog(String csvFile) throws java.io.IOException{","        // Creates File object with path of log ","        File logFile = new File(csvFile);","        ","        // Creates an actual file based off of the File object","        logFile.createNewFile();","    }","    ","    /**","     * @param String","     * @param String","     * @param String","     * Adds user to the usrList CSV file","     * @return void","     */","    public static void addUser(String usrName, String pass, String csvFile){","        ","        // Reads CSV file into 2d array 'usrListArray'","        String[][] usrListArr = CSVUtils.readFile(csvFile);","        ","        // Encrypts password","        pass = Protected.encryptPass(pass);","        ","        // Creates ArrayList 'arrL' to hold CSV contents","        ArrayList<String> arrL = new ArrayList<String>();","        ","        // Convert 2d array 'usrListArray' to ArrayList 'arrL'","        for(int i =0; i < usrListArr.length; i++){","            for(int j = 0; j < usrListArr[i].length; j++){","                arrL.add(usrListArr[i][j]);","            }","        }","        ","        // Adds new user and pass to ArrayList 'arrL'","        arrL.add(usrName);","        arrL.add(pass);","        ","        // Writes new user list to CSV file","        FileWriter writer  = new FileWriter(csvFile);","        CSVUtils.writeLine(writer, arrL);","        ","        // Close writer","        writer.flush();","        writer.close()","    }","    ","    /**","     * @param Scanner","     * Calls the addUser method to add a user to the CSV file","     * @return void","     */","    private static void signUp(Scanner scan){","        String usrName = scan.nextLine();","        String passWord = scan.nextLine();","        String csvFile = sysCheckDir(scan) + \"usrList.CSV\";","        addUser(usrName, passWord, csvFile)","    }","    ","    ","    /**","     * @param String","     * Calls the system print method","     * @return void","     */","    private static void print(String print){","        System.out.print(print);","    }","    ","    /**","     * @param String","     * Calls the system println method","     * @return void","     */","    private static void println(String println){","        System.out.println(println);","    }"]},{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":3}},"text":"/**"},{"action":"insertText","range":{"start":{"row":0,"column":3},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":535,"column":0}},"lines":[" * This is a Java Program used to input Excersizes, Weights, Reps, and Sets"," *  ...into a workout log"," *  "," *  @caleberb"," *  v1.2.4"," */","// import statments","import java.io.*;","import java.io.File.*;","import java.nio.file.*;a","import java.util.*;","import java.time.*;","import java.time.format.*;","","public class WorkoutLog {","    ","    /**","     * @param args","     * Initializes the constant variables used throughout the class","     * They are not changed by any part of the code","     * @return void","     */","    public static void main(String[] args) throws Exception {","        // Create scanner objects","        Scanner scan = new Scanner(System.in);","        Scanner intScan = new Scanner(System.in);","        ","        // Converts Object LocalDate to String in format MM-DD-YYYY","        LocalDate localDate = LocalDate.now();","        DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"MM-d-yyyy\");","        String date = localDate.format(formatter);","        ","        int logSign = 0;","        println(\"Please choose an option: \");","        println(\"1) Log in\");","        println(\"2) Sign up\");","        println(\"3) Quit\");","        ","        logSign = intScan.nextInt();","        switch(logSign){","            case 1:","                // Logs the user in","                logIn(scan, intScan, date, args);","                break;","            case 2:","                // Signs the user up","                signUp(scan);","                break;","            case 2:","                // Quits the program","                break;","            default:","                // Default option, gives error, calls recursively","                println(\"Error. Please enter a valid option.\");","                main(args);","                break;","        }","        ","    }","    ","    /**","     * @param Scanner","     * @param Scanner","     * @param String","     * @param String[]args","     * Acts as a log in screen for the user, passing them to the home method","     * @return void","     */","    private static void logIn(Scanner scan, Scanner intScan, String date, String[] args) throws Exception{","        String csvFile = sysCheckDir(scan) + \"usrList.CSV\";","        String passHash = \"\";","        ","        // Prompts user for their name","        print(\"Please input your username or \\'000\\' to quit: \");","        String uName = scan.nextLine();","        if(uName.equals(\"000\")){","            main(args);","        }","        ","        if(usrCheck(csvFile, uName)){","            passHash = passCheck(csvFile, uName);","        } else {","            println(\"Error. Username does not exist. Try logging in again.\");","            logIn(scan, intScan, date, args);","        }","        ","        print(\"Please input your password: \");","        String pWord = scan.nextLine();","        ","        String decryptedPass = Protected.decryptPass(passHash);","        ","        if(pWord.equals(decryptedPass)){","            // Enter main program ... not to be confused with main method","            home(scan, intScan, uName, date, args);","        } else {","            println(\"Error. Incorrect Password. Try logging in again.\");","            logIn(scan, intScan, date, args);","        }","        ","        ","        ","    }","    ","    /**","     * @param String","     * @param String","     * Checks if the inputted username exists in the user log","     * @return boolean","     */","    private static boolean usrCheck(String csvFile, String usrName) throws Exception{","        String[][] usrListArr = CSVUtils.readFile(csvFile);","        boolean usrExists = false;        ","        for(int i = 0; i < usrListArr.length; i++){","            if(usrListArr[i][0].equals(usrName)){","                usrExists = true;","            }","        }","        return usrExists;","    }","    ","    /**","     * @param String","     * @param String","     * Retrieves the passWord hash from the usrList CSV file","     * @return String","     */","    private static String passCheck(String csvFile, String usrName) throws Exception{","        String[][] usrListArr = CSVUtils.readFile(csvFile);","        String pass = \"\";        ","        for(int i = 0; i < usrListArr.length; i++){","            if(usrListArr[i][0].equals(usrName)){","                pass = usrListArr[i][1];","            }","        }","        return pass;","    }","    ","    /**","     * @param Scanner ","     * @param Scanner","     * @param String","     * @param String","     * @param String[]args","     * Acts as the main method, an calls itself recursively until user quits","     * @return void","     */","    private static void home(Scanner scan, Scanner intScan, String name, String todayDate, String[] args) throws Exception{","        // Prompts the user whether they want to open/write current or past log","        int usrOper = promptOper(intScan);","        ","        //Follows through with the users prompt","        switch(usrOper){","            case 1: ","                // Open today","                openLog(scan, name, todayDate);","                break;","            case 2: ","                // Write today","                writeLog(scan, intScan, name, todayDate);","                break;","            case 3: ","                // Open past with given date","                print(\"Input date in MM-DD-YYYY format: \");","                String openPastDate = scan.nextLine();","                openLog(scan, name, openPastDate);","                break;","            case 4: ","                // Write past with given date","                print(\"Input date in MM-DD-YYYY format: \");","                String writePastDate = scan.nextLine();","                writeLog(scan, intScan, name, writePastDate);","                break;","            case 5:","                main(args);","                break;","            case 6:","                signUp(scan, intScan);","                break;","            default: ","                break;","        }","        ","        //Returns home after program ends if user wishes","        println(\"\\nReturn home? (y/n): \");","        String returnHome = scan.nextLine();","        returnHome = returnHome.toLowerCase();","        switch(returnHome){","            case \"y\":","                home(scan, intScan, name, todayDate, args);","                break;","            case \"n\":","                break;","        }","        ","    }","    ","    /**","     * @param Scanner","     * Lists the availible functions and asks the user for input","     * @return int","     */","    private static int promptOper(Scanner intScan){","        //Prompts the user whether they want to open/write current or past log","        println(\"Please select an option\");","        println(\"1) Open today's log\");","        println(\"2) Write today's log\");","        println(\"3) Open a past day's log\");","        println(\"4) Write a past day's log\");","        println(\"5) Log out\");","        int usrOper = intScan.nextInt();","        int oper = 0;","        switch(usrOper){","            case 1:","                oper = 1;","                break;","            case 2:","                oper = 2;","                break;","            case 3:","                oper = 3;","                break;","            case 4:","                oper = 4;","                break;","            case 5:","                oper = 4;","                break;","            default:","                println(\"Error! Invalid Option. Please enter a valid option: \");","                usrOper = promptOper(intScan);","        }","        return usrOper;","    }","    ","    ","    /**","     * @param Scanner","     * @param String","     * @param String","     * Reads the file for today and prints it out on screen","     * @return void","     */","    private static void openLog (Scanner scan, String name, String date) throws java.io.IOException{","        // Locates appropriate file path and stores it in csvFile","        String csvFile = sysCheck(scan, name, date);","        ","        // Checks if the log file exists or not","        if(checkLogExists(csvFile)){","            // If log file exists, read the file","            String arr[][] = CSVUtils.readFile(csvFile);","            println(\"\");","            for(int i = 0; i < arr.length;i++){","                for(int j = 0; j < arr[i].length; j++){","                    if(j == arr[i].length - 1){","                        print(arr[i][j] + \"\");","                    } else {","                        print(arr[i][j] + \" : \");","                    }","                }","                println(\"\");","            }","        }","        ","        // Checks if the log file exists or not","        if(!checkLogExists(csvFile)){","            // If the log file does not exist, print error and end","            println(\"Sorry. There is no log for the given date and user.\");","        }","    }","    ","    /**","     * @param Scanner","     * @param Scanner","     * @param String","     * @param String","     * Asks the user for input and writes their data into today's log","     * @return void","     */","    private static void writeLog (Scanner scan, Scanner intScan, String name, String date) throws java.io.IOException{","        // Prompts user for number of exercises","        println(\"Please input the number of excerises you will be logging for the day: \");","        int numOfEx = intScan.nextInt();","        ","        // Creates CSV file and location based on operating system","        String csvFile = sysCheck(scan, name, date);","        ","        // Checks if the log file exists or not","        if(!checkLogExists(csvFile)){","            // Creates file if it did not exist previously","            createLog(csvFile);","        }","        ","        // Selects created file as file to write to","        FileWriter writer = new FileWriter(csvFile);","        ","        // Create and add headers to the CSV file","        ArrayList<String> headers = new ArrayList<String>();","        headers.add(\"Exercise\");","        headers.add(\"Weight\");","        headers.add(\"Reps\");","        headers.add(\"Sets\");","        CSVUtils.writeLine(writer, headers);","        ","        /*","         * Continuously asks user for input","         * Adds input to ArrayList \"input\"","         * Writes \"input\" to CSV","         * Clears \"input\"","         */","        ArrayList<String> input = new ArrayList<String>();","        for(int i = 0; i < numOfEx; i++){","            // Prompts for input","            println(\"\\n\");","            print(\"Exercise: \");","            String ex = scan.nextLine();","            print(\"Weight: \");","            String we = scan.nextLine();","            print(\"Reps: \");","            String re = scan.nextLine();","            print(\"Sets: \");","            String se = scan.nextLine();","            ","            // Adds input to ArrayList","            input.add(ex);","            input.add(we);","            input.add(re);","            input.add(se);","            ","            // Writes ArrayList to CSV file","            CSVUtils.writeLine(writer, input);","            input.remove(0);","            input.remove(0);","            input.remove(0);","            input.remove(0);","        }","        ","        // Close the file writer and ends method","        writer.flush();","        writer.close();","    }","    ","    /**","     * @param Scanner","     * @param String","     * @param String","     * Asks the user for what operating system they are using in order to ","     *    Establish which file navigation system to use.","     * @return String","     */","    private static String sysCheck(Scanner scan, String name, String date){","        String csvFile = sysCheckDir(scan);","        ","        // Sets csvFile to path of full CSV log file","        csvFile = name + \" - \" + date + \".csv\";","        return csvFile;","    }","    ","    /**","     * @param Scanner","     * Determines correct path to the 'Workout' directory on the user's desktop","     * @return String","     */","    private static String sysCheckDir(Scanner scan){","        // Reads the system for the computer user for file path purposes","        String sysUsrName = System.getProperty(\"user.name\");","        ","        // Initializes variables","        String csvFile = \"\";","        String customDirStr = \"\";","        int opCode = 0;","        ","        //Checks which file navigation system the user's computer uses","        File linuxDir = new File(\"/home/\" + sysUsrName + \"/Desktop/\");","        File windowsDir = new File(\"C:/Users/\" + sysUsrName + \"/Desktop/\");","        File macDir = new File(\"/Users/\" + sysUsrName + \"/Desktop/\");","        boolean linuxDirExists = linuxDir.exists();","        boolean windowsDirExists = windowsDir.exists();","        boolean macDirExists = macDir.exists();","        ","        // Sets opCode relational to which file navigation system the computer uses","        if(linuxDirExists){","            // Use linux file navigation system","            opCode = 1;","        } else if (windowsDirExists){","            // Use windows file navigation system","            opCode = 2;","        } else if (macDirExists){","            // Use mac file navigation system","            opCode = 3;","        } else {","            // Use custom file navigation system","            opCode = 4;","            println(\"Please input the full path to your desktop folder: \");","            customDirStr = scan.nextLine();","        }","        ","        // Sets the csvFile string to contain the path of the system Desktop folder","        switch(opCode){","            case 1: ","                // linux Desktop folder","                Path filePath = linuxDir.toPath();","                csvFile = filePath.toString();","                break;","            case 2:","                // window Desktop folder","                filePath = windowsDir.toPath();","                csvFile = filePath.toString();","                break;","            case 3:","                // mac Desktop folder","                filePath = macDir.toPath();","                csvFile = filePath.toString();","                break;","            case 4:","                // custom Desktop folder","                csvFile = customDirStr;","                break;","        }","        ","        // Check if Workout folder on Desktop exists","        // If not, creates if","        String workoutDirStr = csvFile + \"/Workout/\";","        File workoutDir = new File(workoutDirStr);","        if(!workoutDir.exists()){","            new File(workoutDirStr).mkdirs();","        }","        ","        // Sets csvFile to path of full CSV file","        csvFile = workoutDirStr;","        return csvFile;","    }","    ","    /**","     * @param String","     * Checks if the given log exists","     * @return boolean","     */","    private static boolean checkLogExists(String csvFile){","        // Default if log doesn't exist","        boolean logExists = false;","        ","        //Creates File object with path of log","        File logFile = new File(csvFile);","        ","        //Checks if the log exists","        if(logFile.exists()){","            // Sets boolean to true: the file does exist","            logExists = true;","        }","        ","        return logExists;","    }","    ","    /**","     * @param String","     * Creates the given log file if it does not exist","     * @return void","     */","    private static void createLog(String csvFile) throws java.io.IOException{","        // Creates File object with path of log ","        File logFile = new File(csvFile);","        ","        // Creates an actual file based off of the File object","        logFile.createNewFile();","    }","    ","    /**","     * @param String","     * @param String","     * @param String","     * Adds user to the usrList CSV file","     * @return void","     */","    public static void addUser(String usrName, String pass, String csvFile){","        ","        // Reads CSV file into 2d array 'usrListArray'","        String[][] usrListArr = CSVUtils.readFile(csvFile);","        ","        // Encrypts password","        pass = Protected.encryptPass(pass);","        ","        // Creates ArrayList 'arrL' to hold CSV contents","        ArrayList<String> arrL = new ArrayList<String>();","        ","        // Convert 2d array 'usrListArray' to ArrayList 'arrL'","        for(int i =0; i < usrListArr.length; i++){","            for(int j = 0; j < usrListArr[i].length; j++){","                arrL.add(usrListArr[i][j]);","            }","        }","        ","        // Adds new user and pass to ArrayList 'arrL'","        arrL.add(usrName);","        arrL.add(pass);","        ","        // Writes new user list to CSV file","        FileWriter writer  = new FileWriter(csvFile);","        CSVUtils.writeLine(writer, arrL);","        ","        // Close writer","        writer.flush();","        writer.close()","    }","    ","    /**","     * @param Scanner","     * Calls the addUser method to add a user to the CSV file","     * @return void","     */","    private static void signUp(Scanner scan){","        String usrName = scan.nextLine();","        String passWord = scan.nextLine();","        String csvFile = sysCheckDir(scan) + \"usrList.CSV\";","        addUser(usrName, passWord, csvFile)","    }","    ","    ","    /**","     * @param String","     * Calls the system print method","     * @return void","     */","    private static void print(String print){","        System.out.print(print);","    }","    ","    /**","     * @param String","     * Calls the system println method","     * @return void","     */","    private static void println(String println){","        System.out.println(println);","    }"]},{"action":"insertText","range":{"start":{"row":535,"column":0},"end":{"row":535,"column":1}},"text":"}"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":535,"column":0},"end":{"row":535,"column":1}},"text":"}"},{"action":"removeLines","range":{"start":{"row":0,"column":0},"end":{"row":535,"column":0}},"nl":"\n","lines":["/**"," * This is a Java Program used to input Excersizes, Weights, Reps, and Sets"," *  ...into a workout log"," *  "," *  @caleberb"," *  v1.2.4"," */","// import statments","import java.io.*;","import java.io.File.*;","import java.nio.file.*;a","import java.util.*;","import java.time.*;","import java.time.format.*;","","public class WorkoutLog {","    ","    /**","     * @param args","     * Initializes the constant variables used throughout the class","     * They are not changed by any part of the code","     * @return void","     */","    public static void main(String[] args) throws Exception {","        // Create scanner objects","        Scanner scan = new Scanner(System.in);","        Scanner intScan = new Scanner(System.in);","        ","        // Converts Object LocalDate to String in format MM-DD-YYYY","        LocalDate localDate = LocalDate.now();","        DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"MM-d-yyyy\");","        String date = localDate.format(formatter);","        ","        int logSign = 0;","        println(\"Please choose an option: \");","        println(\"1) Log in\");","        println(\"2) Sign up\");","        println(\"3) Quit\");","        ","        logSign = intScan.nextInt();","        switch(logSign){","            case 1:","                // Logs the user in","                logIn(scan, intScan, date, args);","                break;","            case 2:","                // Signs the user up","                signUp(scan);","                break;","            case 2:","                // Quits the program","                break;","            default:","                // Default option, gives error, calls recursively","                println(\"Error. Please enter a valid option.\");","                main(args);","                break;","        }","        ","    }","    ","    /**","     * @param Scanner","     * @param Scanner","     * @param String","     * @param String[]args","     * Acts as a log in screen for the user, passing them to the home method","     * @return void","     */","    private static void logIn(Scanner scan, Scanner intScan, String date, String[] args) throws Exception{","        String csvFile = sysCheckDir(scan) + \"usrList.CSV\";","        String passHash = \"\";","        ","        // Prompts user for their name","        print(\"Please input your username or \\'000\\' to quit: \");","        String uName = scan.nextLine();","        if(uName.equals(\"000\")){","            main(args);","        }","        ","        if(usrCheck(csvFile, uName)){","            passHash = passCheck(csvFile, uName);","        } else {","            println(\"Error. Username does not exist. Try logging in again.\");","            logIn(scan, intScan, date, args);","        }","        ","        print(\"Please input your password: \");","        String pWord = scan.nextLine();","        ","        String decryptedPass = Protected.decryptPass(passHash);","        ","        if(pWord.equals(decryptedPass)){","            // Enter main program ... not to be confused with main method","            home(scan, intScan, uName, date, args);","        } else {","            println(\"Error. Incorrect Password. Try logging in again.\");","            logIn(scan, intScan, date, args);","        }","        ","        ","        ","    }","    ","    /**","     * @param String","     * @param String","     * Checks if the inputted username exists in the user log","     * @return boolean","     */","    private static boolean usrCheck(String csvFile, String usrName) throws Exception{","        String[][] usrListArr = CSVUtils.readFile(csvFile);","        boolean usrExists = false;        ","        for(int i = 0; i < usrListArr.length; i++){","            if(usrListArr[i][0].equals(usrName)){","                usrExists = true;","            }","        }","        return usrExists;","    }","    ","    /**","     * @param String","     * @param String","     * Retrieves the passWord hash from the usrList CSV file","     * @return String","     */","    private static String passCheck(String csvFile, String usrName) throws Exception{","        String[][] usrListArr = CSVUtils.readFile(csvFile);","        String pass = \"\";        ","        for(int i = 0; i < usrListArr.length; i++){","            if(usrListArr[i][0].equals(usrName)){","                pass = usrListArr[i][1];","            }","        }","        return pass;","    }","    ","    /**","     * @param Scanner ","     * @param Scanner","     * @param String","     * @param String","     * @param String[]args","     * Acts as the main method, an calls itself recursively until user quits","     * @return void","     */","    private static void home(Scanner scan, Scanner intScan, String name, String todayDate, String[] args) throws Exception{","        // Prompts the user whether they want to open/write current or past log","        int usrOper = promptOper(intScan);","        ","        //Follows through with the users prompt","        switch(usrOper){","            case 1: ","                // Open today","                openLog(scan, name, todayDate);","                break;","            case 2: ","                // Write today","                writeLog(scan, intScan, name, todayDate);","                break;","            case 3: ","                // Open past with given date","                print(\"Input date in MM-DD-YYYY format: \");","                String openPastDate = scan.nextLine();","                openLog(scan, name, openPastDate);","                break;","            case 4: ","                // Write past with given date","                print(\"Input date in MM-DD-YYYY format: \");","                String writePastDate = scan.nextLine();","                writeLog(scan, intScan, name, writePastDate);","                break;","            case 5:","                main(args);","                break;","            case 6:","                signUp(scan, intScan);","                break;","            default: ","                break;","        }","        ","        //Returns home after program ends if user wishes","        println(\"\\nReturn home? (y/n): \");","        String returnHome = scan.nextLine();","        returnHome = returnHome.toLowerCase();","        switch(returnHome){","            case \"y\":","                home(scan, intScan, name, todayDate, args);","                break;","            case \"n\":","                break;","        }","        ","    }","    ","    /**","     * @param Scanner","     * Lists the availible functions and asks the user for input","     * @return int","     */","    private static int promptOper(Scanner intScan){","        //Prompts the user whether they want to open/write current or past log","        println(\"Please select an option\");","        println(\"1) Open today's log\");","        println(\"2) Write today's log\");","        println(\"3) Open a past day's log\");","        println(\"4) Write a past day's log\");","        println(\"5) Log out\");","        int usrOper = intScan.nextInt();","        int oper = 0;","        switch(usrOper){","            case 1:","                oper = 1;","                break;","            case 2:","                oper = 2;","                break;","            case 3:","                oper = 3;","                break;","            case 4:","                oper = 4;","                break;","            case 5:","                oper = 4;","                break;","            default:","                println(\"Error! Invalid Option. Please enter a valid option: \");","                usrOper = promptOper(intScan);","        }","        return usrOper;","    }","    ","    ","    /**","     * @param Scanner","     * @param String","     * @param String","     * Reads the file for today and prints it out on screen","     * @return void","     */","    private static void openLog (Scanner scan, String name, String date) throws java.io.IOException{","        // Locates appropriate file path and stores it in csvFile","        String csvFile = sysCheck(scan, name, date);","        ","        // Checks if the log file exists or not","        if(checkLogExists(csvFile)){","            // If log file exists, read the file","            String arr[][] = CSVUtils.readFile(csvFile);","            println(\"\");","            for(int i = 0; i < arr.length;i++){","                for(int j = 0; j < arr[i].length; j++){","                    if(j == arr[i].length - 1){","                        print(arr[i][j] + \"\");","                    } else {","                        print(arr[i][j] + \" : \");","                    }","                }","                println(\"\");","            }","        }","        ","        // Checks if the log file exists or not","        if(!checkLogExists(csvFile)){","            // If the log file does not exist, print error and end","            println(\"Sorry. There is no log for the given date and user.\");","        }","    }","    ","    /**","     * @param Scanner","     * @param Scanner","     * @param String","     * @param String","     * Asks the user for input and writes their data into today's log","     * @return void","     */","    private static void writeLog (Scanner scan, Scanner intScan, String name, String date) throws java.io.IOException{","        // Prompts user for number of exercises","        println(\"Please input the number of excerises you will be logging for the day: \");","        int numOfEx = intScan.nextInt();","        ","        // Creates CSV file and location based on operating system","        String csvFile = sysCheck(scan, name, date);","        ","        // Checks if the log file exists or not","        if(!checkLogExists(csvFile)){","            // Creates file if it did not exist previously","            createLog(csvFile);","        }","        ","        // Selects created file as file to write to","        FileWriter writer = new FileWriter(csvFile);","        ","        // Create and add headers to the CSV file","        ArrayList<String> headers = new ArrayList<String>();","        headers.add(\"Exercise\");","        headers.add(\"Weight\");","        headers.add(\"Reps\");","        headers.add(\"Sets\");","        CSVUtils.writeLine(writer, headers);","        ","        /*","         * Continuously asks user for input","         * Adds input to ArrayList \"input\"","         * Writes \"input\" to CSV","         * Clears \"input\"","         */","        ArrayList<String> input = new ArrayList<String>();","        for(int i = 0; i < numOfEx; i++){","            // Prompts for input","            println(\"\\n\");","            print(\"Exercise: \");","            String ex = scan.nextLine();","            print(\"Weight: \");","            String we = scan.nextLine();","            print(\"Reps: \");","            String re = scan.nextLine();","            print(\"Sets: \");","            String se = scan.nextLine();","            ","            // Adds input to ArrayList","            input.add(ex);","            input.add(we);","            input.add(re);","            input.add(se);","            ","            // Writes ArrayList to CSV file","            CSVUtils.writeLine(writer, input);","            input.remove(0);","            input.remove(0);","            input.remove(0);","            input.remove(0);","        }","        ","        // Close the file writer and ends method","        writer.flush();","        writer.close();","    }","    ","    /**","     * @param Scanner","     * @param String","     * @param String","     * Asks the user for what operating system they are using in order to ","     *    Establish which file navigation system to use.","     * @return String","     */","    private static String sysCheck(Scanner scan, String name, String date){","        String csvFile = sysCheckDir(scan);","        ","        // Sets csvFile to path of full CSV log file","        csvFile = name + \" - \" + date + \".csv\";","        return csvFile;","    }","    ","    /**","     * @param Scanner","     * Determines correct path to the 'Workout' directory on the user's desktop","     * @return String","     */","    private static String sysCheckDir(Scanner scan){","        // Reads the system for the computer user for file path purposes","        String sysUsrName = System.getProperty(\"user.name\");","        ","        // Initializes variables","        String csvFile = \"\";","        String customDirStr = \"\";","        int opCode = 0;","        ","        //Checks which file navigation system the user's computer uses","        File linuxDir = new File(\"/home/\" + sysUsrName + \"/Desktop/\");","        File windowsDir = new File(\"C:/Users/\" + sysUsrName + \"/Desktop/\");","        File macDir = new File(\"/Users/\" + sysUsrName + \"/Desktop/\");","        boolean linuxDirExists = linuxDir.exists();","        boolean windowsDirExists = windowsDir.exists();","        boolean macDirExists = macDir.exists();","        ","        // Sets opCode relational to which file navigation system the computer uses","        if(linuxDirExists){","            // Use linux file navigation system","            opCode = 1;","        } else if (windowsDirExists){","            // Use windows file navigation system","            opCode = 2;","        } else if (macDirExists){","            // Use mac file navigation system","            opCode = 3;","        } else {","            // Use custom file navigation system","            opCode = 4;","            println(\"Please input the full path to your desktop folder: \");","            customDirStr = scan.nextLine();","        }","        ","        // Sets the csvFile string to contain the path of the system Desktop folder","        switch(opCode){","            case 1: ","                // linux Desktop folder","                Path filePath = linuxDir.toPath();","                csvFile = filePath.toString();","                break;","            case 2:","                // window Desktop folder","                filePath = windowsDir.toPath();","                csvFile = filePath.toString();","                break;","            case 3:","                // mac Desktop folder","                filePath = macDir.toPath();","                csvFile = filePath.toString();","                break;","            case 4:","                // custom Desktop folder","                csvFile = customDirStr;","                break;","        }","        ","        // Check if Workout folder on Desktop exists","        // If not, creates if","        String workoutDirStr = csvFile + \"/Workout/\";","        File workoutDir = new File(workoutDirStr);","        if(!workoutDir.exists()){","            new File(workoutDirStr).mkdirs();","        }","        ","        // Sets csvFile to path of full CSV file","        csvFile = workoutDirStr;","        return csvFile;","    }","    ","    /**","     * @param String","     * Checks if the given log exists","     * @return boolean","     */","    private static boolean checkLogExists(String csvFile){","        // Default if log doesn't exist","        boolean logExists = false;","        ","        //Creates File object with path of log","        File logFile = new File(csvFile);","        ","        //Checks if the log exists","        if(logFile.exists()){","            // Sets boolean to true: the file does exist","            logExists = true;","        }","        ","        return logExists;","    }","    ","    /**","     * @param String","     * Creates the given log file if it does not exist","     * @return void","     */","    private static void createLog(String csvFile) throws java.io.IOException{","        // Creates File object with path of log ","        File logFile = new File(csvFile);","        ","        // Creates an actual file based off of the File object","        logFile.createNewFile();","    }","    ","    /**","     * @param String","     * @param String","     * @param String","     * Adds user to the usrList CSV file","     * @return void","     */","    public static void addUser(String usrName, String pass, String csvFile){","        ","        // Reads CSV file into 2d array 'usrListArray'","        String[][] usrListArr = CSVUtils.readFile(csvFile);","        ","        // Encrypts password","        pass = Protected.encryptPass(pass);","        ","        // Creates ArrayList 'arrL' to hold CSV contents","        ArrayList<String> arrL = new ArrayList<String>();","        ","        // Convert 2d array 'usrListArray' to ArrayList 'arrL'","        for(int i =0; i < usrListArr.length; i++){","            for(int j = 0; j < usrListArr[i].length; j++){","                arrL.add(usrListArr[i][j]);","            }","        }","        ","        // Adds new user and pass to ArrayList 'arrL'","        arrL.add(usrName);","        arrL.add(pass);","        ","        // Writes new user list to CSV file","        FileWriter writer  = new FileWriter(csvFile);","        CSVUtils.writeLine(writer, arrL);","        ","        // Close writer","        writer.flush();","        writer.close()","    }","    ","    /**","     * @param Scanner","     * Calls the addUser method to add a user to the CSV file","     * @return void","     */","    private static void signUp(Scanner scan){","        String usrName = scan.nextLine();","        String passWord = scan.nextLine();","        String csvFile = sysCheckDir(scan) + \"usrList.CSV\";","        addUser(usrName, passWord, csvFile)","    }","    ","    ","    /**","     * @param String","     * Calls the system print method","     * @return void","     */","    private static void print(String print){","        System.out.print(print);","    }","    ","    /**","     * @param String","     * Calls the system println method","     * @return void","     */","    private static void println(String println){","        System.out.println(println);","    }"]},{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":3}},"text":"/**"},{"action":"insertText","range":{"start":{"row":0,"column":3},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":535,"column":0}},"lines":[" * This is a Java Program used to input Excersizes, Weights, Reps, and Sets"," *  ...into a workout log"," *  "," *  @caleberb"," *  v1.2.4"," */","// import statments","import java.io.*;","import java.io.File.*;","import java.nio.file.*;","import java.util.*;","import java.time.*;","import java.time.format.*;","","public class WorkoutLog {","    ","    /**","     * @param args","     * Initializes the constant variables used throughout the class","     * They are not changed by any part of the code","     * @return void","     */","    public static void main(String[] args) throws Exception {","        // Create scanner objects","        Scanner scan = new Scanner(System.in);","        Scanner intScan = new Scanner(System.in);","        ","        // Converts Object LocalDate to String in format MM-DD-YYYY","        LocalDate localDate = LocalDate.now();","        DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"MM-d-yyyy\");","        String date = localDate.format(formatter);","        ","        int logSign = 0;","        println(\"Please choose an option: \");","        println(\"1) Log in\");","        println(\"2) Sign up\");","        println(\"3) Quit\");","        ","        logSign = intScan.nextInt();","        switch(logSign){","            case 1:","                // Logs the user in","                logIn(scan, intScan, date, args);","                break;","            case 2:","                // Signs the user up","                signUp(scan);","                break;","            case 2:","                // Quits the program","                break;","            default:","                // Default option, gives error, calls recursively","                println(\"Error. Please enter a valid option.\");","                main(args);","                break;","        }","        ","    }","    ","    /**","     * @param Scanner","     * @param Scanner","     * @param String","     * @param String[]args","     * Acts as a log in screen for the user, passing them to the home method","     * @return void","     */","    private static void logIn(Scanner scan, Scanner intScan, String date, String[] args) throws Exception{","        String csvFile = sysCheckDir(scan) + \"usrList.CSV\";","        String passHash = \"\";","        ","        // Prompts user for their name","        print(\"Please input your username or \\'000\\' to quit: \");","        String uName = scan.nextLine();","        if(uName.equals(\"000\")){","            main(args);","        }","        ","        if(usrCheck(csvFile, uName)){","            passHash = passCheck(csvFile, uName);","        } else {","            println(\"Error. Username does not exist. Try logging in again.\");","            logIn(scan, intScan, date, args);","        }","        ","        print(\"Please input your password: \");","        String pWord = scan.nextLine();","        ","        String decryptedPass = Protected.decryptPass(passHash);","        ","        if(pWord.equals(decryptedPass)){","            // Enter main program ... not to be confused with main method","            home(scan, intScan, uName, date, args);","        } else {","            println(\"Error. Incorrect Password. Try logging in again.\");","            logIn(scan, intScan, date, args);","        }","        ","        ","        ","    }","    ","    /**","     * @param String","     * @param String","     * Checks if the inputted username exists in the user log","     * @return boolean","     */","    private static boolean usrCheck(String csvFile, String usrName) throws Exception{","        String[][] usrListArr = CSVUtils.readFile(csvFile);","        boolean usrExists = false;        ","        for(int i = 0; i < usrListArr.length; i++){","            if(usrListArr[i][0].equals(usrName)){","                usrExists = true;","            }","        }","        return usrExists;","    }","    ","    /**","     * @param String","     * @param String","     * Retrieves the passWord hash from the usrList CSV file","     * @return String","     */","    private static String passCheck(String csvFile, String usrName) throws Exception{","        String[][] usrListArr = CSVUtils.readFile(csvFile);","        String pass = \"\";        ","        for(int i = 0; i < usrListArr.length; i++){","            if(usrListArr[i][0].equals(usrName)){","                pass = usrListArr[i][1];","            }","        }","        return pass;","    }","    ","    /**","     * @param Scanner ","     * @param Scanner","     * @param String","     * @param String","     * @param String[]args","     * Acts as the main method, an calls itself recursively until user quits","     * @return void","     */","    private static void home(Scanner scan, Scanner intScan, String name, String todayDate, String[] args) throws Exception{","        // Prompts the user whether they want to open/write current or past log","        int usrOper = promptOper(intScan);","        ","        //Follows through with the users prompt","        switch(usrOper){","            case 1: ","                // Open today","                openLog(scan, name, todayDate);","                break;","            case 2: ","                // Write today","                writeLog(scan, intScan, name, todayDate);","                break;","            case 3: ","                // Open past with given date","                print(\"Input date in MM-DD-YYYY format: \");","                String openPastDate = scan.nextLine();","                openLog(scan, name, openPastDate);","                break;","            case 4: ","                // Write past with given date","                print(\"Input date in MM-DD-YYYY format: \");","                String writePastDate = scan.nextLine();","                writeLog(scan, intScan, name, writePastDate);","                break;","            case 5:","                main(args);","                break;","            case 6:","                signUp(scan, intScan);","                break;","            default: ","                break;","        }","        ","        //Returns home after program ends if user wishes","        println(\"\\nReturn home? (y/n): \");","        String returnHome = scan.nextLine();","        returnHome = returnHome.toLowerCase();","        switch(returnHome){","            case \"y\":","                home(scan, intScan, name, todayDate, args);","                break;","            case \"n\":","                break;","        }","        ","    }","    ","    /**","     * @param Scanner","     * Lists the availible functions and asks the user for input","     * @return int","     */","    private static int promptOper(Scanner intScan){","        //Prompts the user whether they want to open/write current or past log","        println(\"Please select an option\");","        println(\"1) Open today's log\");","        println(\"2) Write today's log\");","        println(\"3) Open a past day's log\");","        println(\"4) Write a past day's log\");","        println(\"5) Log out\");","        int usrOper = intScan.nextInt();","        int oper = 0;","        switch(usrOper){","            case 1:","                oper = 1;","                break;","            case 2:","                oper = 2;","                break;","            case 3:","                oper = 3;","                break;","            case 4:","                oper = 4;","                break;","            case 5:","                oper = 4;","                break;","            default:","                println(\"Error! Invalid Option. Please enter a valid option: \");","                usrOper = promptOper(intScan);","        }","        return usrOper;","    }","    ","    ","    /**","     * @param Scanner","     * @param String","     * @param String","     * Reads the file for today and prints it out on screen","     * @return void","     */","    private static void openLog (Scanner scan, String name, String date) throws java.io.IOException{","        // Locates appropriate file path and stores it in csvFile","        String csvFile = sysCheck(scan, name, date);","        ","        // Checks if the log file exists or not","        if(checkLogExists(csvFile)){","            // If log file exists, read the file","            String arr[][] = CSVUtils.readFile(csvFile);","            println(\"\");","            for(int i = 0; i < arr.length;i++){","                for(int j = 0; j < arr[i].length; j++){","                    if(j == arr[i].length - 1){","                        print(arr[i][j] + \"\");","                    } else {","                        print(arr[i][j] + \" : \");","                    }","                }","                println(\"\");","            }","        }","        ","        // Checks if the log file exists or not","        if(!checkLogExists(csvFile)){","            // If the log file does not exist, print error and end","            println(\"Sorry. There is no log for the given date and user.\");","        }","    }","    ","    /**","     * @param Scanner","     * @param Scanner","     * @param String","     * @param String","     * Asks the user for input and writes their data into today's log","     * @return void","     */","    private static void writeLog (Scanner scan, Scanner intScan, String name, String date) throws java.io.IOException{","        // Prompts user for number of exercises","        println(\"Please input the number of excerises you will be logging for the day: \");","        int numOfEx = intScan.nextInt();","        ","        // Creates CSV file and location based on operating system","        String csvFile = sysCheck(scan, name, date);","        ","        // Checks if the log file exists or not","        if(!checkLogExists(csvFile)){","            // Creates file if it did not exist previously","            createLog(csvFile);","        }","        ","        // Selects created file as file to write to","        FileWriter writer = new FileWriter(csvFile);","        ","        // Create and add headers to the CSV file","        ArrayList<String> headers = new ArrayList<String>();","        headers.add(\"Exercise\");","        headers.add(\"Weight\");","        headers.add(\"Reps\");","        headers.add(\"Sets\");","        CSVUtils.writeLine(writer, headers);","        ","        /*","         * Continuously asks user for input","         * Adds input to ArrayList \"input\"","         * Writes \"input\" to CSV","         * Clears \"input\"","         */","        ArrayList<String> input = new ArrayList<String>();","        for(int i = 0; i < numOfEx; i++){","            // Prompts for input","            println(\"\\n\");","            print(\"Exercise: \");","            String ex = scan.nextLine();","            print(\"Weight: \");","            String we = scan.nextLine();","            print(\"Reps: \");","            String re = scan.nextLine();","            print(\"Sets: \");","            String se = scan.nextLine();","            ","            // Adds input to ArrayList","            input.add(ex);","            input.add(we);","            input.add(re);","            input.add(se);","            ","            // Writes ArrayList to CSV file","            CSVUtils.writeLine(writer, input);","            input.remove(0);","            input.remove(0);","            input.remove(0);","            input.remove(0);","        }","        ","        // Close the file writer and ends method","        writer.flush();","        writer.close();","    }","    ","    /**","     * @param Scanner","     * @param String","     * @param String","     * Asks the user for what operating system they are using in order to ","     *    Establish which file navigation system to use.","     * @return String","     */","    private static String sysCheck(Scanner scan, String name, String date){","        String csvFile = sysCheckDir(scan);","        ","        // Sets csvFile to path of full CSV log file","        csvFile = name + \" - \" + date + \".csv\";","        return csvFile;","    }","    ","    /**","     * @param Scanner","     * Determines correct path to the 'Workout' directory on the user's desktop","     * @return String","     */","    private static String sysCheckDir(Scanner scan){","        // Reads the system for the computer user for file path purposes","        String sysUsrName = System.getProperty(\"user.name\");","        ","        // Initializes variables","        String csvFile = \"\";","        String customDirStr = \"\";","        int opCode = 0;","        ","        //Checks which file navigation system the user's computer uses","        File linuxDir = new File(\"/home/\" + sysUsrName + \"/Desktop/\");","        File windowsDir = new File(\"C:/Users/\" + sysUsrName + \"/Desktop/\");","        File macDir = new File(\"/Users/\" + sysUsrName + \"/Desktop/\");","        boolean linuxDirExists = linuxDir.exists();","        boolean windowsDirExists = windowsDir.exists();","        boolean macDirExists = macDir.exists();","        ","        // Sets opCode relational to which file navigation system the computer uses","        if(linuxDirExists){","            // Use linux file navigation system","            opCode = 1;","        } else if (windowsDirExists){","            // Use windows file navigation system","            opCode = 2;","        } else if (macDirExists){","            // Use mac file navigation system","            opCode = 3;","        } else {","            // Use custom file navigation system","            opCode = 4;","            println(\"Please input the full path to your desktop folder: \");","            customDirStr = scan.nextLine();","        }","        ","        // Sets the csvFile string to contain the path of the system Desktop folder","        switch(opCode){","            case 1: ","                // linux Desktop folder","                Path filePath = linuxDir.toPath();","                csvFile = filePath.toString();","                break;","            case 2:","                // window Desktop folder","                filePath = windowsDir.toPath();","                csvFile = filePath.toString();","                break;","            case 3:","                // mac Desktop folder","                filePath = macDir.toPath();","                csvFile = filePath.toString();","                break;","            case 4:","                // custom Desktop folder","                csvFile = customDirStr;","                break;","        }","        ","        // Check if Workout folder on Desktop exists","        // If not, creates if","        String workoutDirStr = csvFile + \"/Workout/\";","        File workoutDir = new File(workoutDirStr);","        if(!workoutDir.exists()){","            new File(workoutDirStr).mkdirs();","        }","        ","        // Sets csvFile to path of full CSV file","        csvFile = workoutDirStr;","        return csvFile;","    }","    ","    /**","     * @param String","     * Checks if the given log exists","     * @return boolean","     */","    private static boolean checkLogExists(String csvFile){","        // Default if log doesn't exist","        boolean logExists = false;","        ","        //Creates File object with path of log","        File logFile = new File(csvFile);","        ","        //Checks if the log exists","        if(logFile.exists()){","            // Sets boolean to true: the file does exist","            logExists = true;","        }","        ","        return logExists;","    }","    ","    /**","     * @param String","     * Creates the given log file if it does not exist","     * @return void","     */","    private static void createLog(String csvFile) throws java.io.IOException{","        // Creates File object with path of log ","        File logFile = new File(csvFile);","        ","        // Creates an actual file based off of the File object","        logFile.createNewFile();","    }","    ","    /**","     * @param String","     * @param String","     * @param String","     * Adds user to the usrList CSV file","     * @return void","     */","    public static void addUser(String usrName, String pass, String csvFile){","        ","        // Reads CSV file into 2d array 'usrListArray'","        String[][] usrListArr = CSVUtils.readFile(csvFile);","        ","        // Encrypts password","        pass = Protected.encryptPass(pass);","        ","        // Creates ArrayList 'arrL' to hold CSV contents","        ArrayList<String> arrL = new ArrayList<String>();","        ","        // Convert 2d array 'usrListArray' to ArrayList 'arrL'","        for(int i =0; i < usrListArr.length; i++){","            for(int j = 0; j < usrListArr[i].length; j++){","                arrL.add(usrListArr[i][j]);","            }","        }","        ","        // Adds new user and pass to ArrayList 'arrL'","        arrL.add(usrName);","        arrL.add(pass);","        ","        // Writes new user list to CSV file","        FileWriter writer  = new FileWriter(csvFile);","        CSVUtils.writeLine(writer, arrL);","        ","        // Close writer","        writer.flush();","        writer.close();","    }","    ","    /**","     * @param Scanner","     * Calls the addUser method to add a user to the CSV file","     * @return void","     */","    private static void signUp(Scanner scan){","        String usrName = scan.nextLine();","        String passWord = scan.nextLine();","        String csvFile = sysCheckDir(scan) + \"usrList.CSV\";","        addUser(usrName, passWord, csvFile)","    }","    ","    ","    /**","     * @param String","     * Calls the system print method","     * @return void","     */","    private static void print(String print){","        System.out.print(print);","    }","    ","    /**","     * @param String","     * Calls the system println method","     * @return void","     */","    private static void println(String println){","        System.out.println(println);","    }"]},{"action":"insertText","range":{"start":{"row":535,"column":0},"end":{"row":535,"column":1}},"text":"}"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":535,"column":0},"end":{"row":535,"column":1}},"text":"}"},{"action":"removeLines","range":{"start":{"row":0,"column":0},"end":{"row":535,"column":0}},"nl":"\n","lines":["/**"," * This is a Java Program used to input Excersizes, Weights, Reps, and Sets"," *  ...into a workout log"," *  "," *  @caleberb"," *  v1.2.4"," */","// import statments","import java.io.*;","import java.io.File.*;","import java.nio.file.*;","import java.util.*;","import java.time.*;","import java.time.format.*;","","public class WorkoutLog {","    ","    /**","     * @param args","     * Initializes the constant variables used throughout the class","     * They are not changed by any part of the code","     * @return void","     */","    public static void main(String[] args) throws Exception {","        // Create scanner objects","        Scanner scan = new Scanner(System.in);","        Scanner intScan = new Scanner(System.in);","        ","        // Converts Object LocalDate to String in format MM-DD-YYYY","        LocalDate localDate = LocalDate.now();","        DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"MM-d-yyyy\");","        String date = localDate.format(formatter);","        ","        int logSign = 0;","        println(\"Please choose an option: \");","        println(\"1) Log in\");","        println(\"2) Sign up\");","        println(\"3) Quit\");","        ","        logSign = intScan.nextInt();","        switch(logSign){","            case 1:","                // Logs the user in","                logIn(scan, intScan, date, args);","                break;","            case 2:","                // Signs the user up","                signUp(scan);","                break;","            case 2:","                // Quits the program","                break;","            default:","                // Default option, gives error, calls recursively","                println(\"Error. Please enter a valid option.\");","                main(args);","                break;","        }","        ","    }","    ","    /**","     * @param Scanner","     * @param Scanner","     * @param String","     * @param String[]args","     * Acts as a log in screen for the user, passing them to the home method","     * @return void","     */","    private static void logIn(Scanner scan, Scanner intScan, String date, String[] args) throws Exception{","        String csvFile = sysCheckDir(scan) + \"usrList.CSV\";","        String passHash = \"\";","        ","        // Prompts user for their name","        print(\"Please input your username or \\'000\\' to quit: \");","        String uName = scan.nextLine();","        if(uName.equals(\"000\")){","            main(args);","        }","        ","        if(usrCheck(csvFile, uName)){","            passHash = passCheck(csvFile, uName);","        } else {","            println(\"Error. Username does not exist. Try logging in again.\");","            logIn(scan, intScan, date, args);","        }","        ","        print(\"Please input your password: \");","        String pWord = scan.nextLine();","        ","        String decryptedPass = Protected.decryptPass(passHash);","        ","        if(pWord.equals(decryptedPass)){","            // Enter main program ... not to be confused with main method","            home(scan, intScan, uName, date, args);","        } else {","            println(\"Error. Incorrect Password. Try logging in again.\");","            logIn(scan, intScan, date, args);","        }","        ","        ","        ","    }","    ","    /**","     * @param String","     * @param String","     * Checks if the inputted username exists in the user log","     * @return boolean","     */","    private static boolean usrCheck(String csvFile, String usrName) throws Exception{","        String[][] usrListArr = CSVUtils.readFile(csvFile);","        boolean usrExists = false;        ","        for(int i = 0; i < usrListArr.length; i++){","            if(usrListArr[i][0].equals(usrName)){","                usrExists = true;","            }","        }","        return usrExists;","    }","    ","    /**","     * @param String","     * @param String","     * Retrieves the passWord hash from the usrList CSV file","     * @return String","     */","    private static String passCheck(String csvFile, String usrName) throws Exception{","        String[][] usrListArr = CSVUtils.readFile(csvFile);","        String pass = \"\";        ","        for(int i = 0; i < usrListArr.length; i++){","            if(usrListArr[i][0].equals(usrName)){","                pass = usrListArr[i][1];","            }","        }","        return pass;","    }","    ","    /**","     * @param Scanner ","     * @param Scanner","     * @param String","     * @param String","     * @param String[]args","     * Acts as the main method, an calls itself recursively until user quits","     * @return void","     */","    private static void home(Scanner scan, Scanner intScan, String name, String todayDate, String[] args) throws Exception{","        // Prompts the user whether they want to open/write current or past log","        int usrOper = promptOper(intScan);","        ","        //Follows through with the users prompt","        switch(usrOper){","            case 1: ","                // Open today","                openLog(scan, name, todayDate);","                break;","            case 2: ","                // Write today","                writeLog(scan, intScan, name, todayDate);","                break;","            case 3: ","                // Open past with given date","                print(\"Input date in MM-DD-YYYY format: \");","                String openPastDate = scan.nextLine();","                openLog(scan, name, openPastDate);","                break;","            case 4: ","                // Write past with given date","                print(\"Input date in MM-DD-YYYY format: \");","                String writePastDate = scan.nextLine();","                writeLog(scan, intScan, name, writePastDate);","                break;","            case 5:","                main(args);","                break;","            case 6:","                signUp(scan, intScan);","                break;","            default: ","                break;","        }","        ","        //Returns home after program ends if user wishes","        println(\"\\nReturn home? (y/n): \");","        String returnHome = scan.nextLine();","        returnHome = returnHome.toLowerCase();","        switch(returnHome){","            case \"y\":","                home(scan, intScan, name, todayDate, args);","                break;","            case \"n\":","                break;","        }","        ","    }","    ","    /**","     * @param Scanner","     * Lists the availible functions and asks the user for input","     * @return int","     */","    private static int promptOper(Scanner intScan){","        //Prompts the user whether they want to open/write current or past log","        println(\"Please select an option\");","        println(\"1) Open today's log\");","        println(\"2) Write today's log\");","        println(\"3) Open a past day's log\");","        println(\"4) Write a past day's log\");","        println(\"5) Log out\");","        int usrOper = intScan.nextInt();","        int oper = 0;","        switch(usrOper){","            case 1:","                oper = 1;","                break;","            case 2:","                oper = 2;","                break;","            case 3:","                oper = 3;","                break;","            case 4:","                oper = 4;","                break;","            case 5:","                oper = 4;","                break;","            default:","                println(\"Error! Invalid Option. Please enter a valid option: \");","                usrOper = promptOper(intScan);","        }","        return usrOper;","    }","    ","    ","    /**","     * @param Scanner","     * @param String","     * @param String","     * Reads the file for today and prints it out on screen","     * @return void","     */","    private static void openLog (Scanner scan, String name, String date) throws java.io.IOException{","        // Locates appropriate file path and stores it in csvFile","        String csvFile = sysCheck(scan, name, date);","        ","        // Checks if the log file exists or not","        if(checkLogExists(csvFile)){","            // If log file exists, read the file","            String arr[][] = CSVUtils.readFile(csvFile);","            println(\"\");","            for(int i = 0; i < arr.length;i++){","                for(int j = 0; j < arr[i].length; j++){","                    if(j == arr[i].length - 1){","                        print(arr[i][j] + \"\");","                    } else {","                        print(arr[i][j] + \" : \");","                    }","                }","                println(\"\");","            }","        }","        ","        // Checks if the log file exists or not","        if(!checkLogExists(csvFile)){","            // If the log file does not exist, print error and end","            println(\"Sorry. There is no log for the given date and user.\");","        }","    }","    ","    /**","     * @param Scanner","     * @param Scanner","     * @param String","     * @param String","     * Asks the user for input and writes their data into today's log","     * @return void","     */","    private static void writeLog (Scanner scan, Scanner intScan, String name, String date) throws java.io.IOException{","        // Prompts user for number of exercises","        println(\"Please input the number of excerises you will be logging for the day: \");","        int numOfEx = intScan.nextInt();","        ","        // Creates CSV file and location based on operating system","        String csvFile = sysCheck(scan, name, date);","        ","        // Checks if the log file exists or not","        if(!checkLogExists(csvFile)){","            // Creates file if it did not exist previously","            createLog(csvFile);","        }","        ","        // Selects created file as file to write to","        FileWriter writer = new FileWriter(csvFile);","        ","        // Create and add headers to the CSV file","        ArrayList<String> headers = new ArrayList<String>();","        headers.add(\"Exercise\");","        headers.add(\"Weight\");","        headers.add(\"Reps\");","        headers.add(\"Sets\");","        CSVUtils.writeLine(writer, headers);","        ","        /*","         * Continuously asks user for input","         * Adds input to ArrayList \"input\"","         * Writes \"input\" to CSV","         * Clears \"input\"","         */","        ArrayList<String> input = new ArrayList<String>();","        for(int i = 0; i < numOfEx; i++){","            // Prompts for input","            println(\"\\n\");","            print(\"Exercise: \");","            String ex = scan.nextLine();","            print(\"Weight: \");","            String we = scan.nextLine();","            print(\"Reps: \");","            String re = scan.nextLine();","            print(\"Sets: \");","            String se = scan.nextLine();","            ","            // Adds input to ArrayList","            input.add(ex);","            input.add(we);","            input.add(re);","            input.add(se);","            ","            // Writes ArrayList to CSV file","            CSVUtils.writeLine(writer, input);","            input.remove(0);","            input.remove(0);","            input.remove(0);","            input.remove(0);","        }","        ","        // Close the file writer and ends method","        writer.flush();","        writer.close();","    }","    ","    /**","     * @param Scanner","     * @param String","     * @param String","     * Asks the user for what operating system they are using in order to ","     *    Establish which file navigation system to use.","     * @return String","     */","    private static String sysCheck(Scanner scan, String name, String date){","        String csvFile = sysCheckDir(scan);","        ","        // Sets csvFile to path of full CSV log file","        csvFile = name + \" - \" + date + \".csv\";","        return csvFile;","    }","    ","    /**","     * @param Scanner","     * Determines correct path to the 'Workout' directory on the user's desktop","     * @return String","     */","    private static String sysCheckDir(Scanner scan){","        // Reads the system for the computer user for file path purposes","        String sysUsrName = System.getProperty(\"user.name\");","        ","        // Initializes variables","        String csvFile = \"\";","        String customDirStr = \"\";","        int opCode = 0;","        ","        //Checks which file navigation system the user's computer uses","        File linuxDir = new File(\"/home/\" + sysUsrName + \"/Desktop/\");","        File windowsDir = new File(\"C:/Users/\" + sysUsrName + \"/Desktop/\");","        File macDir = new File(\"/Users/\" + sysUsrName + \"/Desktop/\");","        boolean linuxDirExists = linuxDir.exists();","        boolean windowsDirExists = windowsDir.exists();","        boolean macDirExists = macDir.exists();","        ","        // Sets opCode relational to which file navigation system the computer uses","        if(linuxDirExists){","            // Use linux file navigation system","            opCode = 1;","        } else if (windowsDirExists){","            // Use windows file navigation system","            opCode = 2;","        } else if (macDirExists){","            // Use mac file navigation system","            opCode = 3;","        } else {","            // Use custom file navigation system","            opCode = 4;","            println(\"Please input the full path to your desktop folder: \");","            customDirStr = scan.nextLine();","        }","        ","        // Sets the csvFile string to contain the path of the system Desktop folder","        switch(opCode){","            case 1: ","                // linux Desktop folder","                Path filePath = linuxDir.toPath();","                csvFile = filePath.toString();","                break;","            case 2:","                // window Desktop folder","                filePath = windowsDir.toPath();","                csvFile = filePath.toString();","                break;","            case 3:","                // mac Desktop folder","                filePath = macDir.toPath();","                csvFile = filePath.toString();","                break;","            case 4:","                // custom Desktop folder","                csvFile = customDirStr;","                break;","        }","        ","        // Check if Workout folder on Desktop exists","        // If not, creates if","        String workoutDirStr = csvFile + \"/Workout/\";","        File workoutDir = new File(workoutDirStr);","        if(!workoutDir.exists()){","            new File(workoutDirStr).mkdirs();","        }","        ","        // Sets csvFile to path of full CSV file","        csvFile = workoutDirStr;","        return csvFile;","    }","    ","    /**","     * @param String","     * Checks if the given log exists","     * @return boolean","     */","    private static boolean checkLogExists(String csvFile){","        // Default if log doesn't exist","        boolean logExists = false;","        ","        //Creates File object with path of log","        File logFile = new File(csvFile);","        ","        //Checks if the log exists","        if(logFile.exists()){","            // Sets boolean to true: the file does exist","            logExists = true;","        }","        ","        return logExists;","    }","    ","    /**","     * @param String","     * Creates the given log file if it does not exist","     * @return void","     */","    private static void createLog(String csvFile) throws java.io.IOException{","        // Creates File object with path of log ","        File logFile = new File(csvFile);","        ","        // Creates an actual file based off of the File object","        logFile.createNewFile();","    }","    ","    /**","     * @param String","     * @param String","     * @param String","     * Adds user to the usrList CSV file","     * @return void","     */","    public static void addUser(String usrName, String pass, String csvFile){","        ","        // Reads CSV file into 2d array 'usrListArray'","        String[][] usrListArr = CSVUtils.readFile(csvFile);","        ","        // Encrypts password","        pass = Protected.encryptPass(pass);","        ","        // Creates ArrayList 'arrL' to hold CSV contents","        ArrayList<String> arrL = new ArrayList<String>();","        ","        // Convert 2d array 'usrListArray' to ArrayList 'arrL'","        for(int i =0; i < usrListArr.length; i++){","            for(int j = 0; j < usrListArr[i].length; j++){","                arrL.add(usrListArr[i][j]);","            }","        }","        ","        // Adds new user and pass to ArrayList 'arrL'","        arrL.add(usrName);","        arrL.add(pass);","        ","        // Writes new user list to CSV file","        FileWriter writer  = new FileWriter(csvFile);","        CSVUtils.writeLine(writer, arrL);","        ","        // Close writer","        writer.flush();","        writer.close();","    }","    ","    /**","     * @param Scanner","     * Calls the addUser method to add a user to the CSV file","     * @return void","     */","    private static void signUp(Scanner scan){","        String usrName = scan.nextLine();","        String passWord = scan.nextLine();","        String csvFile = sysCheckDir(scan) + \"usrList.CSV\";","        addUser(usrName, passWord, csvFile)","    }","    ","    ","    /**","     * @param String","     * Calls the system print method","     * @return void","     */","    private static void print(String print){","        System.out.print(print);","    }","    ","    /**","     * @param String","     * Calls the system println method","     * @return void","     */","    private static void println(String println){","        System.out.println(println);","    }"]},{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":3}},"text":"/**"},{"action":"insertText","range":{"start":{"row":0,"column":3},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":535,"column":0}},"lines":[" * This is a Java Program used to input Excersizes, Weights, Reps, and Sets"," *  ...into a workout log"," *  "," *  @caleberb"," *  v1.2.4"," */","// import statments","import java.io.*;","import java.io.File.*;","import java.nio.file.*;","import java.util.*;","import java.time.*;","import java.time.format.*;","","public class WorkoutLog {","    ","    /**","     * @param args","     * Initializes the constant variables used throughout the class","     * They are not changed by any part of the code","     * @return void","     */","    public static void main(String[] args) throws Exception {","        // Create scanner objects","        Scanner scan = new Scanner(System.in);","        Scanner intScan = new Scanner(System.in);","        ","        // Converts Object LocalDate to String in format MM-DD-YYYY","        LocalDate localDate = LocalDate.now();","        DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"MM-d-yyyy\");","        String date = localDate.format(formatter);","        ","        int logSign = 0;","        println(\"Please choose an option: \");","        println(\"1) Log in\");","        println(\"2) Sign up\");","        println(\"3) Quit\");","        ","        logSign = intScan.nextInt();","        switch(logSign){","            case 1:","                // Logs the user in","                logIn(scan, intScan, date, args);","                break;","            case 2:","                // Signs the user up","                signUp(scan);","                break;","            case 2:","                // Quits the program","                break;","            default:","                // Default option, gives error, calls recursively","                println(\"Error. Please enter a valid option.\");","                main(args);","                break;","        }","        ","    }","    ","    /**","     * @param Scanner","     * @param Scanner","     * @param String","     * @param String[]args","     * Acts as a log in screen for the user, passing them to the home method","     * @return void","     */","    private static void logIn(Scanner scan, Scanner intScan, String date, String[] args) throws Exception{","        String csvFile = sysCheckDir(scan) + \"usrList.CSV\";","        String passHash = \"\";","        ","        // Prompts user for their name","        print(\"Please input your username or \\'000\\' to quit: \");","        String uName = scan.nextLine();","        if(uName.equals(\"000\")){","            main(args);","        }","        ","        if(usrCheck(csvFile, uName)){","            passHash = passCheck(csvFile, uName);","        } else {","            println(\"Error. Username does not exist. Try logging in again.\");","            logIn(scan, intScan, date, args);","        }","        ","        print(\"Please input your password: \");","        String pWord = scan.nextLine();","        ","        String decryptedPass = Protected.decryptPass(passHash);","        ","        if(pWord.equals(decryptedPass)){","            // Enter main program ... not to be confused with main method","            home(scan, intScan, uName, date, args);","        } else {","            println(\"Error. Incorrect Password. Try logging in again.\");","            logIn(scan, intScan, date, args);","        }","        ","        ","        ","    }","    ","    /**","     * @param String","     * @param String","     * Checks if the inputted username exists in the user log","     * @return boolean","     */","    private static boolean usrCheck(String csvFile, String usrName) throws Exception{","        String[][] usrListArr = CSVUtils.readFile(csvFile);","        boolean usrExists = false;        ","        for(int i = 0; i < usrListArr.length; i++){","            if(usrListArr[i][0].equals(usrName)){","                usrExists = true;","            }","        }","        return usrExists;","    }","    ","    /**","     * @param String","     * @param String","     * Retrieves the passWord hash from the usrList CSV file","     * @return String","     */","    private static String passCheck(String csvFile, String usrName) throws Exception{","        String[][] usrListArr = CSVUtils.readFile(csvFile);","        String pass = \"\";        ","        for(int i = 0; i < usrListArr.length; i++){","            if(usrListArr[i][0].equals(usrName)){","                pass = usrListArr[i][1];","            }","        }","        return pass;","    }","    ","    /**","     * @param Scanner ","     * @param Scanner","     * @param String","     * @param String","     * @param String[]args","     * Acts as the main method, an calls itself recursively until user quits","     * @return void","     */","    private static void home(Scanner scan, Scanner intScan, String name, String todayDate, String[] args) throws Exception{","        // Prompts the user whether they want to open/write current or past log","        int usrOper = promptOper(intScan);","        ","        //Follows through with the users prompt","        switch(usrOper){","            case 1: ","                // Open today","                openLog(scan, name, todayDate);","                break;","            case 2: ","                // Write today","                writeLog(scan, intScan, name, todayDate);","                break;","            case 3: ","                // Open past with given date","                print(\"Input date in MM-DD-YYYY format: \");","                String openPastDate = scan.nextLine();","                openLog(scan, name, openPastDate);","                break;","            case 4: ","                // Write past with given date","                print(\"Input date in MM-DD-YYYY format: \");","                String writePastDate = scan.nextLine();","                writeLog(scan, intScan, name, writePastDate);","                break;","            case 5:","                main(args);","                break;","            case 6:","                signUp(scan, intScan);","                break;","            default: ","                break;","        }","        ","        //Returns home after program ends if user wishes","        println(\"\\nReturn home? (y/n): \");","        String returnHome = scan.nextLine();","        returnHome = returnHome.toLowerCase();","        switch(returnHome){","            case \"y\":","                home(scan, intScan, name, todayDate, args);","                break;","            case \"n\":","                break;","        }","        ","    }","    ","    /**","     * @param Scanner","     * Lists the availible functions and asks the user for input","     * @return int","     */","    private static int promptOper(Scanner intScan){","        //Prompts the user whether they want to open/write current or past log","        println(\"Please select an option\");","        println(\"1) Open today's log\");","        println(\"2) Write today's log\");","        println(\"3) Open a past day's log\");","        println(\"4) Write a past day's log\");","        println(\"5) Log out\");","        int usrOper = intScan.nextInt();","        int oper = 0;","        switch(usrOper){","            case 1:","                oper = 1;","                break;","            case 2:","                oper = 2;","                break;","            case 3:","                oper = 3;","                break;","            case 4:","                oper = 4;","                break;","            case 5:","                oper = 4;","                break;","            default:","                println(\"Error! Invalid Option. Please enter a valid option: \");","                usrOper = promptOper(intScan);","        }","        return usrOper;","    }","    ","    ","    /**","     * @param Scanner","     * @param String","     * @param String","     * Reads the file for today and prints it out on screen","     * @return void","     */","    private static void openLog (Scanner scan, String name, String date) throws java.io.IOException{","        // Locates appropriate file path and stores it in csvFile","        String csvFile = sysCheck(scan, name, date);","        ","        // Checks if the log file exists or not","        if(checkLogExists(csvFile)){","            // If log file exists, read the file","            String arr[][] = CSVUtils.readFile(csvFile);","            println(\"\");","            for(int i = 0; i < arr.length;i++){","                for(int j = 0; j < arr[i].length; j++){","                    if(j == arr[i].length - 1){","                        print(arr[i][j] + \"\");","                    } else {","                        print(arr[i][j] + \" : \");","                    }","                }","                println(\"\");","            }","        }","        ","        // Checks if the log file exists or not","        if(!checkLogExists(csvFile)){","            // If the log file does not exist, print error and end","            println(\"Sorry. There is no log for the given date and user.\");","        }","    }","    ","    /**","     * @param Scanner","     * @param Scanner","     * @param String","     * @param String","     * Asks the user for input and writes their data into today's log","     * @return void","     */","    private static void writeLog (Scanner scan, Scanner intScan, String name, String date) throws java.io.IOException{","        // Prompts user for number of exercises","        println(\"Please input the number of excerises you will be logging for the day: \");","        int numOfEx = intScan.nextInt();","        ","        // Creates CSV file and location based on operating system","        String csvFile = sysCheck(scan, name, date);","        ","        // Checks if the log file exists or not","        if(!checkLogExists(csvFile)){","            // Creates file if it did not exist previously","            createLog(csvFile);","        }","        ","        // Selects created file as file to write to","        FileWriter writer = new FileWriter(csvFile);","        ","        // Create and add headers to the CSV file","        ArrayList<String> headers = new ArrayList<String>();","        headers.add(\"Exercise\");","        headers.add(\"Weight\");","        headers.add(\"Reps\");","        headers.add(\"Sets\");","        CSVUtils.writeLine(writer, headers);","        ","        /*","         * Continuously asks user for input","         * Adds input to ArrayList \"input\"","         * Writes \"input\" to CSV","         * Clears \"input\"","         */","        ArrayList<String> input = new ArrayList<String>();","        for(int i = 0; i < numOfEx; i++){","            // Prompts for input","            println(\"\\n\");","            print(\"Exercise: \");","            String ex = scan.nextLine();","            print(\"Weight: \");","            String we = scan.nextLine();","            print(\"Reps: \");","            String re = scan.nextLine();","            print(\"Sets: \");","            String se = scan.nextLine();","            ","            // Adds input to ArrayList","            input.add(ex);","            input.add(we);","            input.add(re);","            input.add(se);","            ","            // Writes ArrayList to CSV file","            CSVUtils.writeLine(writer, input);","            input.remove(0);","            input.remove(0);","            input.remove(0);","            input.remove(0);","        }","        ","        // Close the file writer and ends method","        writer.flush();","        writer.close();","    }","    ","    /**","     * @param Scanner","     * @param String","     * @param String","     * Asks the user for what operating system they are using in order to ","     *    Establish which file navigation system to use.","     * @return String","     */","    private static String sysCheck(Scanner scan, String name, String date){","        String csvFile = sysCheckDir(scan);","        ","        // Sets csvFile to path of full CSV log file","        csvFile = name + \" - \" + date + \".csv\";","        return csvFile;","    }","    ","    /**","     * @param Scanner","     * Determines correct path to the 'Workout' directory on the user's desktop","     * @return String","     */","    private static String sysCheckDir(Scanner scan){","        // Reads the system for the computer user for file path purposes","        String sysUsrName = System.getProperty(\"user.name\");","        ","        // Initializes variables","        String csvFile = \"\";","        String customDirStr = \"\";","        int opCode = 0;","        ","        //Checks which file navigation system the user's computer uses","        File linuxDir = new File(\"/home/\" + sysUsrName + \"/Desktop/\");","        File windowsDir = new File(\"C:/Users/\" + sysUsrName + \"/Desktop/\");","        File macDir = new File(\"/Users/\" + sysUsrName + \"/Desktop/\");","        boolean linuxDirExists = linuxDir.exists();","        boolean windowsDirExists = windowsDir.exists();","        boolean macDirExists = macDir.exists();","        ","        // Sets opCode relational to which file navigation system the computer uses","        if(linuxDirExists){","            // Use linux file navigation system","            opCode = 1;","        } else if (windowsDirExists){","            // Use windows file navigation system","            opCode = 2;","        } else if (macDirExists){","            // Use mac file navigation system","            opCode = 3;","        } else {","            // Use custom file navigation system","            opCode = 4;","            println(\"Please input the full path to your desktop folder: \");","            customDirStr = scan.nextLine();","        }","        ","        // Sets the csvFile string to contain the path of the system Desktop folder","        switch(opCode){","            case 1: ","                // linux Desktop folder","                Path filePath = linuxDir.toPath();","                csvFile = filePath.toString();","                break;","            case 2:","                // window Desktop folder","                filePath = windowsDir.toPath();","                csvFile = filePath.toString();","                break;","            case 3:","                // mac Desktop folder","                filePath = macDir.toPath();","                csvFile = filePath.toString();","                break;","            case 4:","                // custom Desktop folder","                csvFile = customDirStr;","                break;","        }","        ","        // Check if Workout folder on Desktop exists","        // If not, creates if","        String workoutDirStr = csvFile + \"/Workout/\";","        File workoutDir = new File(workoutDirStr);","        if(!workoutDir.exists()){","            new File(workoutDirStr).mkdirs();","        }","        ","        // Sets csvFile to path of full CSV file","        csvFile = workoutDirStr;","        return csvFile;","    }","    ","    /**","     * @param String","     * Checks if the given log exists","     * @return boolean","     */","    private static boolean checkLogExists(String csvFile){","        // Default if log doesn't exist","        boolean logExists = false;","        ","        //Creates File object with path of log","        File logFile = new File(csvFile);","        ","        //Checks if the log exists","        if(logFile.exists()){","            // Sets boolean to true: the file does exist","            logExists = true;","        }","        ","        return logExists;","    }","    ","    /**","     * @param String","     * Creates the given log file if it does not exist","     * @return void","     */","    private static void createLog(String csvFile) throws java.io.IOException{","        // Creates File object with path of log ","        File logFile = new File(csvFile);","        ","        // Creates an actual file based off of the File object","        logFile.createNewFile();","    }","    ","    /**","     * @param String","     * @param String","     * @param String","     * Adds user to the usrList CSV file","     * @return void","     */","    public static void addUser(String usrName, String pass, String csvFile){","        ","        // Reads CSV file into 2d array 'usrListArray'","        String[][] usrListArr = CSVUtils.readFile(csvFile);","        ","        // Encrypts password","        pass = Protected.encryptPass(pass);","        ","        // Creates ArrayList 'arrL' to hold CSV contents","        ArrayList<String> arrL = new ArrayList<String>();","        ","        // Convert 2d array 'usrListArray' to ArrayList 'arrL'","        for(int i =0; i < usrListArr.length; i++){","            for(int j = 0; j < usrListArr[i].length; j++){","                arrL.add(usrListArr[i][j]);","            }","        }","        ","        // Adds new user and pass to ArrayList 'arrL'","        arrL.add(usrName);","        arrL.add(pass);","        ","        // Writes new user list to CSV file","        FileWriter writer  = new FileWriter(csvFile);","        CSVUtils.writeLine(writer, arrL);","        ","        // Close writer","        writer.flush();","        writer.close();","    }","    ","    /**","     * @param Scanner","     * Calls the addUser method to add a user to the CSV file","     * @return void","     */","    private static void signUp(Scanner scan){","        String usrName = scan.nextLine();","        String passWord = scan.nextLine();","        String csvFile = sysCheckDir(scan) + \"usrList.CSV\";","        addUser(usrName, passWord, csvFile);","    }","    ","    ","    /**","     * @param String","     * Calls the system print method","     * @return void","     */","    private static void print(String print){","        System.out.print(print);","    }","    ","    /**","     * @param String","     * Calls the system println method","     * @return void","     */","    private static void println(String println){","        System.out.println(println);","    }"]},{"action":"insertText","range":{"start":{"row":535,"column":0},"end":{"row":535,"column":1}},"text":"}"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":535,"column":0},"end":{"row":535,"column":1}},"text":"}"},{"action":"removeLines","range":{"start":{"row":0,"column":0},"end":{"row":535,"column":0}},"nl":"\n","lines":["/**"," * This is a Java Program used to input Excersizes, Weights, Reps, and Sets"," *  ...into a workout log"," *  "," *  @caleberb"," *  v1.2.4"," */","// import statments","import java.io.*;","import java.io.File.*;","import java.nio.file.*;","import java.util.*;","import java.time.*;","import java.time.format.*;","","public class WorkoutLog {","    ","    /**","     * @param args","     * Initializes the constant variables used throughout the class","     * They are not changed by any part of the code","     * @return void","     */","    public static void main(String[] args) throws Exception {","        // Create scanner objects","        Scanner scan = new Scanner(System.in);","        Scanner intScan = new Scanner(System.in);","        ","        // Converts Object LocalDate to String in format MM-DD-YYYY","        LocalDate localDate = LocalDate.now();","        DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"MM-d-yyyy\");","        String date = localDate.format(formatter);","        ","        int logSign = 0;","        println(\"Please choose an option: \");","        println(\"1) Log in\");","        println(\"2) Sign up\");","        println(\"3) Quit\");","        ","        logSign = intScan.nextInt();","        switch(logSign){","            case 1:","                // Logs the user in","                logIn(scan, intScan, date, args);","                break;","            case 2:","                // Signs the user up","                signUp(scan);","                break;","            case 2:","                // Quits the program","                break;","            default:","                // Default option, gives error, calls recursively","                println(\"Error. Please enter a valid option.\");","                main(args);","                break;","        }","        ","    }","    ","    /**","     * @param Scanner","     * @param Scanner","     * @param String","     * @param String[]args","     * Acts as a log in screen for the user, passing them to the home method","     * @return void","     */","    private static void logIn(Scanner scan, Scanner intScan, String date, String[] args) throws Exception{","        String csvFile = sysCheckDir(scan) + \"usrList.CSV\";","        String passHash = \"\";","        ","        // Prompts user for their name","        print(\"Please input your username or \\'000\\' to quit: \");","        String uName = scan.nextLine();","        if(uName.equals(\"000\")){","            main(args);","        }","        ","        if(usrCheck(csvFile, uName)){","            passHash = passCheck(csvFile, uName);","        } else {","            println(\"Error. Username does not exist. Try logging in again.\");","            logIn(scan, intScan, date, args);","        }","        ","        print(\"Please input your password: \");","        String pWord = scan.nextLine();","        ","        String decryptedPass = Protected.decryptPass(passHash);","        ","        if(pWord.equals(decryptedPass)){","            // Enter main program ... not to be confused with main method","            home(scan, intScan, uName, date, args);","        } else {","            println(\"Error. Incorrect Password. Try logging in again.\");","            logIn(scan, intScan, date, args);","        }","        ","        ","        ","    }","    ","    /**","     * @param String","     * @param String","     * Checks if the inputted username exists in the user log","     * @return boolean","     */","    private static boolean usrCheck(String csvFile, String usrName) throws Exception{","        String[][] usrListArr = CSVUtils.readFile(csvFile);","        boolean usrExists = false;        ","        for(int i = 0; i < usrListArr.length; i++){","            if(usrListArr[i][0].equals(usrName)){","                usrExists = true;","            }","        }","        return usrExists;","    }","    ","    /**","     * @param String","     * @param String","     * Retrieves the passWord hash from the usrList CSV file","     * @return String","     */","    private static String passCheck(String csvFile, String usrName) throws Exception{","        String[][] usrListArr = CSVUtils.readFile(csvFile);","        String pass = \"\";        ","        for(int i = 0; i < usrListArr.length; i++){","            if(usrListArr[i][0].equals(usrName)){","                pass = usrListArr[i][1];","            }","        }","        return pass;","    }","    ","    /**","     * @param Scanner ","     * @param Scanner","     * @param String","     * @param String","     * @param String[]args","     * Acts as the main method, an calls itself recursively until user quits","     * @return void","     */","    private static void home(Scanner scan, Scanner intScan, String name, String todayDate, String[] args) throws Exception{","        // Prompts the user whether they want to open/write current or past log","        int usrOper = promptOper(intScan);","        ","        //Follows through with the users prompt","        switch(usrOper){","            case 1: ","                // Open today","                openLog(scan, name, todayDate);","                break;","            case 2: ","                // Write today","                writeLog(scan, intScan, name, todayDate);","                break;","            case 3: ","                // Open past with given date","                print(\"Input date in MM-DD-YYYY format: \");","                String openPastDate = scan.nextLine();","                openLog(scan, name, openPastDate);","                break;","            case 4: ","                // Write past with given date","                print(\"Input date in MM-DD-YYYY format: \");","                String writePastDate = scan.nextLine();","                writeLog(scan, intScan, name, writePastDate);","                break;","            case 5:","                main(args);","                break;","            case 6:","                signUp(scan, intScan);","                break;","            default: ","                break;","        }","        ","        //Returns home after program ends if user wishes","        println(\"\\nReturn home? (y/n): \");","        String returnHome = scan.nextLine();","        returnHome = returnHome.toLowerCase();","        switch(returnHome){","            case \"y\":","                home(scan, intScan, name, todayDate, args);","                break;","            case \"n\":","                break;","        }","        ","    }","    ","    /**","     * @param Scanner","     * Lists the availible functions and asks the user for input","     * @return int","     */","    private static int promptOper(Scanner intScan){","        //Prompts the user whether they want to open/write current or past log","        println(\"Please select an option\");","        println(\"1) Open today's log\");","        println(\"2) Write today's log\");","        println(\"3) Open a past day's log\");","        println(\"4) Write a past day's log\");","        println(\"5) Log out\");","        int usrOper = intScan.nextInt();","        int oper = 0;","        switch(usrOper){","            case 1:","                oper = 1;","                break;","            case 2:","                oper = 2;","                break;","            case 3:","                oper = 3;","                break;","            case 4:","                oper = 4;","                break;","            case 5:","                oper = 4;","                break;","            default:","                println(\"Error! Invalid Option. Please enter a valid option: \");","                usrOper = promptOper(intScan);","        }","        return usrOper;","    }","    ","    ","    /**","     * @param Scanner","     * @param String","     * @param String","     * Reads the file for today and prints it out on screen","     * @return void","     */","    private static void openLog (Scanner scan, String name, String date) throws java.io.IOException{","        // Locates appropriate file path and stores it in csvFile","        String csvFile = sysCheck(scan, name, date);","        ","        // Checks if the log file exists or not","        if(checkLogExists(csvFile)){","            // If log file exists, read the file","            String arr[][] = CSVUtils.readFile(csvFile);","            println(\"\");","            for(int i = 0; i < arr.length;i++){","                for(int j = 0; j < arr[i].length; j++){","                    if(j == arr[i].length - 1){","                        print(arr[i][j] + \"\");","                    } else {","                        print(arr[i][j] + \" : \");","                    }","                }","                println(\"\");","            }","        }","        ","        // Checks if the log file exists or not","        if(!checkLogExists(csvFile)){","            // If the log file does not exist, print error and end","            println(\"Sorry. There is no log for the given date and user.\");","        }","    }","    ","    /**","     * @param Scanner","     * @param Scanner","     * @param String","     * @param String","     * Asks the user for input and writes their data into today's log","     * @return void","     */","    private static void writeLog (Scanner scan, Scanner intScan, String name, String date) throws java.io.IOException{","        // Prompts user for number of exercises","        println(\"Please input the number of excerises you will be logging for the day: \");","        int numOfEx = intScan.nextInt();","        ","        // Creates CSV file and location based on operating system","        String csvFile = sysCheck(scan, name, date);","        ","        // Checks if the log file exists or not","        if(!checkLogExists(csvFile)){","            // Creates file if it did not exist previously","            createLog(csvFile);","        }","        ","        // Selects created file as file to write to","        FileWriter writer = new FileWriter(csvFile);","        ","        // Create and add headers to the CSV file","        ArrayList<String> headers = new ArrayList<String>();","        headers.add(\"Exercise\");","        headers.add(\"Weight\");","        headers.add(\"Reps\");","        headers.add(\"Sets\");","        CSVUtils.writeLine(writer, headers);","        ","        /*","         * Continuously asks user for input","         * Adds input to ArrayList \"input\"","         * Writes \"input\" to CSV","         * Clears \"input\"","         */","        ArrayList<String> input = new ArrayList<String>();","        for(int i = 0; i < numOfEx; i++){","            // Prompts for input","            println(\"\\n\");","            print(\"Exercise: \");","            String ex = scan.nextLine();","            print(\"Weight: \");","            String we = scan.nextLine();","            print(\"Reps: \");","            String re = scan.nextLine();","            print(\"Sets: \");","            String se = scan.nextLine();","            ","            // Adds input to ArrayList","            input.add(ex);","            input.add(we);","            input.add(re);","            input.add(se);","            ","            // Writes ArrayList to CSV file","            CSVUtils.writeLine(writer, input);","            input.remove(0);","            input.remove(0);","            input.remove(0);","            input.remove(0);","        }","        ","        // Close the file writer and ends method","        writer.flush();","        writer.close();","    }","    ","    /**","     * @param Scanner","     * @param String","     * @param String","     * Asks the user for what operating system they are using in order to ","     *    Establish which file navigation system to use.","     * @return String","     */","    private static String sysCheck(Scanner scan, String name, String date){","        String csvFile = sysCheckDir(scan);","        ","        // Sets csvFile to path of full CSV log file","        csvFile = name + \" - \" + date + \".csv\";","        return csvFile;","    }","    ","    /**","     * @param Scanner","     * Determines correct path to the 'Workout' directory on the user's desktop","     * @return String","     */","    private static String sysCheckDir(Scanner scan){","        // Reads the system for the computer user for file path purposes","        String sysUsrName = System.getProperty(\"user.name\");","        ","        // Initializes variables","        String csvFile = \"\";","        String customDirStr = \"\";","        int opCode = 0;","        ","        //Checks which file navigation system the user's computer uses","        File linuxDir = new File(\"/home/\" + sysUsrName + \"/Desktop/\");","        File windowsDir = new File(\"C:/Users/\" + sysUsrName + \"/Desktop/\");","        File macDir = new File(\"/Users/\" + sysUsrName + \"/Desktop/\");","        boolean linuxDirExists = linuxDir.exists();","        boolean windowsDirExists = windowsDir.exists();","        boolean macDirExists = macDir.exists();","        ","        // Sets opCode relational to which file navigation system the computer uses","        if(linuxDirExists){","            // Use linux file navigation system","            opCode = 1;","        } else if (windowsDirExists){","            // Use windows file navigation system","            opCode = 2;","        } else if (macDirExists){","            // Use mac file navigation system","            opCode = 3;","        } else {","            // Use custom file navigation system","            opCode = 4;","            println(\"Please input the full path to your desktop folder: \");","            customDirStr = scan.nextLine();","        }","        ","        // Sets the csvFile string to contain the path of the system Desktop folder","        switch(opCode){","            case 1: ","                // linux Desktop folder","                Path filePath = linuxDir.toPath();","                csvFile = filePath.toString();","                break;","            case 2:","                // window Desktop folder","                filePath = windowsDir.toPath();","                csvFile = filePath.toString();","                break;","            case 3:","                // mac Desktop folder","                filePath = macDir.toPath();","                csvFile = filePath.toString();","                break;","            case 4:","                // custom Desktop folder","                csvFile = customDirStr;","                break;","        }","        ","        // Check if Workout folder on Desktop exists","        // If not, creates if","        String workoutDirStr = csvFile + \"/Workout/\";","        File workoutDir = new File(workoutDirStr);","        if(!workoutDir.exists()){","            new File(workoutDirStr).mkdirs();","        }","        ","        // Sets csvFile to path of full CSV file","        csvFile = workoutDirStr;","        return csvFile;","    }","    ","    /**","     * @param String","     * Checks if the given log exists","     * @return boolean","     */","    private static boolean checkLogExists(String csvFile){","        // Default if log doesn't exist","        boolean logExists = false;","        ","        //Creates File object with path of log","        File logFile = new File(csvFile);","        ","        //Checks if the log exists","        if(logFile.exists()){","            // Sets boolean to true: the file does exist","            logExists = true;","        }","        ","        return logExists;","    }","    ","    /**","     * @param String","     * Creates the given log file if it does not exist","     * @return void","     */","    private static void createLog(String csvFile) throws java.io.IOException{","        // Creates File object with path of log ","        File logFile = new File(csvFile);","        ","        // Creates an actual file based off of the File object","        logFile.createNewFile();","    }","    ","    /**","     * @param String","     * @param String","     * @param String","     * Adds user to the usrList CSV file","     * @return void","     */","    public static void addUser(String usrName, String pass, String csvFile){","        ","        // Reads CSV file into 2d array 'usrListArray'","        String[][] usrListArr = CSVUtils.readFile(csvFile);","        ","        // Encrypts password","        pass = Protected.encryptPass(pass);","        ","        // Creates ArrayList 'arrL' to hold CSV contents","        ArrayList<String> arrL = new ArrayList<String>();","        ","        // Convert 2d array 'usrListArray' to ArrayList 'arrL'","        for(int i =0; i < usrListArr.length; i++){","            for(int j = 0; j < usrListArr[i].length; j++){","                arrL.add(usrListArr[i][j]);","            }","        }","        ","        // Adds new user and pass to ArrayList 'arrL'","        arrL.add(usrName);","        arrL.add(pass);","        ","        // Writes new user list to CSV file","        FileWriter writer  = new FileWriter(csvFile);","        CSVUtils.writeLine(writer, arrL);","        ","        // Close writer","        writer.flush();","        writer.close();","    }","    ","    /**","     * @param Scanner","     * Calls the addUser method to add a user to the CSV file","     * @return void","     */","    private static void signUp(Scanner scan){","        String usrName = scan.nextLine();","        String passWord = scan.nextLine();","        String csvFile = sysCheckDir(scan) + \"usrList.CSV\";","        addUser(usrName, passWord, csvFile);","    }","    ","    ","    /**","     * @param String","     * Calls the system print method","     * @return void","     */","    private static void print(String print){","        System.out.print(print);","    }","    ","    /**","     * @param String","     * Calls the system println method","     * @return void","     */","    private static void println(String println){","        System.out.println(println);","    }"]},{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":3}},"text":"/**"},{"action":"insertText","range":{"start":{"row":0,"column":3},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":535,"column":0}},"lines":[" * This is a Java Program used to input Excersizes, Weights, Reps, and Sets"," *  ...into a workout log"," *  "," *  @caleberb"," *  v1.2.4"," */","// import statments","import java.io.*;","import java.io.File.*;","import java.nio.file.*;","import java.util.*;","import java.time.*;","import java.time.format.*;","","public class WorkoutLog {","    ","    /**","     * @param args","     * Initializes the constant variables used throughout the class","     * They are not changed by any part of the code","     * @return void","     */","    public static void main(String[] args) throws Exception {","        // Create scanner objects","        Scanner scan = new Scanner(System.in);","        Scanner intScan = new Scanner(System.in);","        ","        // Converts Object LocalDate to String in format MM-DD-YYYY","        LocalDate localDate = LocalDate.now();","        DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"MM-d-yyyy\");","        String date = localDate.format(formatter);","        ","        int logSign = 0;","        println(\"Please choose an option: \");","        println(\"1) Log in\");","        println(\"2) Sign up\");","        println(\"3) Quit\");","        ","        logSign = intScan.nextInt();","        switch(logSign){","            case 1:","                // Logs the user in","                logIn(scan, intScan, date, args);","                break;","            case 2:","                // Signs the user up","                signUp(scan);","                break;","            case 3:","                // Quits the program","                break;","            default:","                // Default option, gives error, calls recursively","                println(\"Error. Please enter a valid option.\");","                main(args);","                break;","        }","        ","    }","    ","    /**","     * @param Scanner","     * @param Scanner","     * @param String","     * @param String[]args","     * Acts as a log in screen for the user, passing them to the home method","     * @return void","     */","    private static void logIn(Scanner scan, Scanner intScan, String date, String[] args) throws Exception{","        String csvFile = sysCheckDir(scan) + \"usrList.CSV\";","        String passHash = \"\";","        ","        // Prompts user for their name","        print(\"Please input your username or \\'000\\' to quit: \");","        String uName = scan.nextLine();","        if(uName.equals(\"000\")){","            main(args);","        }","        ","        if(usrCheck(csvFile, uName)){","            passHash = passCheck(csvFile, uName);","        } else {","            println(\"Error. Username does not exist. Try logging in again.\");","            logIn(scan, intScan, date, args);","        }","        ","        print(\"Please input your password: \");","        String pWord = scan.nextLine();","        ","        String decryptedPass = Protected.decryptPass(passHash);","        ","        if(pWord.equals(decryptedPass)){","            // Enter main program ... not to be confused with main method","            home(scan, intScan, uName, date, args);","        } else {","            println(\"Error. Incorrect Password. Try logging in again.\");","            logIn(scan, intScan, date, args);","        }","        ","        ","        ","    }","    ","    /**","     * @param String","     * @param String","     * Checks if the inputted username exists in the user log","     * @return boolean","     */","    private static boolean usrCheck(String csvFile, String usrName) throws Exception{","        String[][] usrListArr = CSVUtils.readFile(csvFile);","        boolean usrExists = false;        ","        for(int i = 0; i < usrListArr.length; i++){","            if(usrListArr[i][0].equals(usrName)){","                usrExists = true;","            }","        }","        return usrExists;","    }","    ","    /**","     * @param String","     * @param String","     * Retrieves the passWord hash from the usrList CSV file","     * @return String","     */","    private static String passCheck(String csvFile, String usrName) throws Exception{","        String[][] usrListArr = CSVUtils.readFile(csvFile);","        String pass = \"\";        ","        for(int i = 0; i < usrListArr.length; i++){","            if(usrListArr[i][0].equals(usrName)){","                pass = usrListArr[i][1];","            }","        }","        return pass;","    }","    ","    /**","     * @param Scanner ","     * @param Scanner","     * @param String","     * @param String","     * @param String[]args","     * Acts as the main method, an calls itself recursively until user quits","     * @return void","     */","    private static void home(Scanner scan, Scanner intScan, String name, String todayDate, String[] args) throws Exception{","        // Prompts the user whether they want to open/write current or past log","        int usrOper = promptOper(intScan);","        ","        //Follows through with the users prompt","        switch(usrOper){","            case 1: ","                // Open today","                openLog(scan, name, todayDate);","                break;","            case 2: ","                // Write today","                writeLog(scan, intScan, name, todayDate);","                break;","            case 3: ","                // Open past with given date","                print(\"Input date in MM-DD-YYYY format: \");","                String openPastDate = scan.nextLine();","                openLog(scan, name, openPastDate);","                break;","            case 4: ","                // Write past with given date","                print(\"Input date in MM-DD-YYYY format: \");","                String writePastDate = scan.nextLine();","                writeLog(scan, intScan, name, writePastDate);","                break;","            case 5:","                main(args);","                break;","            case 6:","                signUp(scan, intScan);","                break;","            default: ","                break;","        }","        ","        //Returns home after program ends if user wishes","        println(\"\\nReturn home? (y/n): \");","        String returnHome = scan.nextLine();","        returnHome = returnHome.toLowerCase();","        switch(returnHome){","            case \"y\":","                home(scan, intScan, name, todayDate, args);","                break;","            case \"n\":","                break;","        }","        ","    }","    ","    /**","     * @param Scanner","     * Lists the availible functions and asks the user for input","     * @return int","     */","    private static int promptOper(Scanner intScan){","        //Prompts the user whether they want to open/write current or past log","        println(\"Please select an option\");","        println(\"1) Open today's log\");","        println(\"2) Write today's log\");","        println(\"3) Open a past day's log\");","        println(\"4) Write a past day's log\");","        println(\"5) Log out\");","        int usrOper = intScan.nextInt();","        int oper = 0;","        switch(usrOper){","            case 1:","                oper = 1;","                break;","            case 2:","                oper = 2;","                break;","            case 3:","                oper = 3;","                break;","            case 4:","                oper = 4;","                break;","            case 5:","                oper = 4;","                break;","            default:","                println(\"Error! Invalid Option. Please enter a valid option: \");","                usrOper = promptOper(intScan);","        }","        return usrOper;","    }","    ","    ","    /**","     * @param Scanner","     * @param String","     * @param String","     * Reads the file for today and prints it out on screen","     * @return void","     */","    private static void openLog (Scanner scan, String name, String date) throws java.io.IOException{","        // Locates appropriate file path and stores it in csvFile","        String csvFile = sysCheck(scan, name, date);","        ","        // Checks if the log file exists or not","        if(checkLogExists(csvFile)){","            // If log file exists, read the file","            String arr[][] = CSVUtils.readFile(csvFile);","            println(\"\");","            for(int i = 0; i < arr.length;i++){","                for(int j = 0; j < arr[i].length; j++){","                    if(j == arr[i].length - 1){","                        print(arr[i][j] + \"\");","                    } else {","                        print(arr[i][j] + \" : \");","                    }","                }","                println(\"\");","            }","        }","        ","        // Checks if the log file exists or not","        if(!checkLogExists(csvFile)){","            // If the log file does not exist, print error and end","            println(\"Sorry. There is no log for the given date and user.\");","        }","    }","    ","    /**","     * @param Scanner","     * @param Scanner","     * @param String","     * @param String","     * Asks the user for input and writes their data into today's log","     * @return void","     */","    private static void writeLog (Scanner scan, Scanner intScan, String name, String date) throws java.io.IOException{","        // Prompts user for number of exercises","        println(\"Please input the number of excerises you will be logging for the day: \");","        int numOfEx = intScan.nextInt();","        ","        // Creates CSV file and location based on operating system","        String csvFile = sysCheck(scan, name, date);","        ","        // Checks if the log file exists or not","        if(!checkLogExists(csvFile)){","            // Creates file if it did not exist previously","            createLog(csvFile);","        }","        ","        // Selects created file as file to write to","        FileWriter writer = new FileWriter(csvFile);","        ","        // Create and add headers to the CSV file","        ArrayList<String> headers = new ArrayList<String>();","        headers.add(\"Exercise\");","        headers.add(\"Weight\");","        headers.add(\"Reps\");","        headers.add(\"Sets\");","        CSVUtils.writeLine(writer, headers);","        ","        /*","         * Continuously asks user for input","         * Adds input to ArrayList \"input\"","         * Writes \"input\" to CSV","         * Clears \"input\"","         */","        ArrayList<String> input = new ArrayList<String>();","        for(int i = 0; i < numOfEx; i++){","            // Prompts for input","            println(\"\\n\");","            print(\"Exercise: \");","            String ex = scan.nextLine();","            print(\"Weight: \");","            String we = scan.nextLine();","            print(\"Reps: \");","            String re = scan.nextLine();","            print(\"Sets: \");","            String se = scan.nextLine();","            ","            // Adds input to ArrayList","            input.add(ex);","            input.add(we);","            input.add(re);","            input.add(se);","            ","            // Writes ArrayList to CSV file","            CSVUtils.writeLine(writer, input);","            input.remove(0);","            input.remove(0);","            input.remove(0);","            input.remove(0);","        }","        ","        // Close the file writer and ends method","        writer.flush();","        writer.close();","    }","    ","    /**","     * @param Scanner","     * @param String","     * @param String","     * Asks the user for what operating system they are using in order to ","     *    Establish which file navigation system to use.","     * @return String","     */","    private static String sysCheck(Scanner scan, String name, String date){","        String csvFile = sysCheckDir(scan);","        ","        // Sets csvFile to path of full CSV log file","        csvFile = name + \" - \" + date + \".csv\";","        return csvFile;","    }","    ","    /**","     * @param Scanner","     * Determines correct path to the 'Workout' directory on the user's desktop","     * @return String","     */","    private static String sysCheckDir(Scanner scan){","        // Reads the system for the computer user for file path purposes","        String sysUsrName = System.getProperty(\"user.name\");","        ","        // Initializes variables","        String csvFile = \"\";","        String customDirStr = \"\";","        int opCode = 0;","        ","        //Checks which file navigation system the user's computer uses","        File linuxDir = new File(\"/home/\" + sysUsrName + \"/Desktop/\");","        File windowsDir = new File(\"C:/Users/\" + sysUsrName + \"/Desktop/\");","        File macDir = new File(\"/Users/\" + sysUsrName + \"/Desktop/\");","        boolean linuxDirExists = linuxDir.exists();","        boolean windowsDirExists = windowsDir.exists();","        boolean macDirExists = macDir.exists();","        ","        // Sets opCode relational to which file navigation system the computer uses","        if(linuxDirExists){","            // Use linux file navigation system","            opCode = 1;","        } else if (windowsDirExists){","            // Use windows file navigation system","            opCode = 2;","        } else if (macDirExists){","            // Use mac file navigation system","            opCode = 3;","        } else {","            // Use custom file navigation system","            opCode = 4;","            println(\"Please input the full path to your desktop folder: \");","            customDirStr = scan.nextLine();","        }","        ","        // Sets the csvFile string to contain the path of the system Desktop folder","        switch(opCode){","            case 1: ","                // linux Desktop folder","                Path filePath = linuxDir.toPath();","                csvFile = filePath.toString();","                break;","            case 2:","                // window Desktop folder","                filePath = windowsDir.toPath();","                csvFile = filePath.toString();","                break;","            case 3:","                // mac Desktop folder","                filePath = macDir.toPath();","                csvFile = filePath.toString();","                break;","            case 4:","                // custom Desktop folder","                csvFile = customDirStr;","                break;","        }","        ","        // Check if Workout folder on Desktop exists","        // If not, creates if","        String workoutDirStr = csvFile + \"/Workout/\";","        File workoutDir = new File(workoutDirStr);","        if(!workoutDir.exists()){","            new File(workoutDirStr).mkdirs();","        }","        ","        // Sets csvFile to path of full CSV file","        csvFile = workoutDirStr;","        return csvFile;","    }","    ","    /**","     * @param String","     * Checks if the given log exists","     * @return boolean","     */","    private static boolean checkLogExists(String csvFile){","        // Default if log doesn't exist","        boolean logExists = false;","        ","        //Creates File object with path of log","        File logFile = new File(csvFile);","        ","        //Checks if the log exists","        if(logFile.exists()){","            // Sets boolean to true: the file does exist","            logExists = true;","        }","        ","        return logExists;","    }","    ","    /**","     * @param String","     * Creates the given log file if it does not exist","     * @return void","     */","    private static void createLog(String csvFile) throws java.io.IOException{","        // Creates File object with path of log ","        File logFile = new File(csvFile);","        ","        // Creates an actual file based off of the File object","        logFile.createNewFile();","    }","    ","    /**","     * @param String","     * @param String","     * @param String","     * Adds user to the usrList CSV file","     * @return void","     */","    public static void addUser(String usrName, String pass, String csvFile){","        ","        // Reads CSV file into 2d array 'usrListArray'","        String[][] usrListArr = CSVUtils.readFile(csvFile);","        ","        // Encrypts password","        pass = Protected.encryptPass(pass);","        ","        // Creates ArrayList 'arrL' to hold CSV contents","        ArrayList<String> arrL = new ArrayList<String>();","        ","        // Convert 2d array 'usrListArray' to ArrayList 'arrL'","        for(int i =0; i < usrListArr.length; i++){","            for(int j = 0; j < usrListArr[i].length; j++){","                arrL.add(usrListArr[i][j]);","            }","        }","        ","        // Adds new user and pass to ArrayList 'arrL'","        arrL.add(usrName);","        arrL.add(pass);","        ","        // Writes new user list to CSV file","        FileWriter writer  = new FileWriter(csvFile);","        CSVUtils.writeLine(writer, arrL);","        ","        // Close writer","        writer.flush();","        writer.close();","    }","    ","    /**","     * @param Scanner","     * Calls the addUser method to add a user to the CSV file","     * @return void","     */","    private static void signUp(Scanner scan){","        String usrName = scan.nextLine();","        String passWord = scan.nextLine();","        String csvFile = sysCheckDir(scan) + \"usrList.CSV\";","        addUser(usrName, passWord, csvFile);","    }","    ","    ","    /**","     * @param String","     * Calls the system print method","     * @return void","     */","    private static void print(String print){","        System.out.print(print);","    }","    ","    /**","     * @param String","     * Calls the system println method","     * @return void","     */","    private static void println(String println){","        System.out.println(println);","    }"]},{"action":"insertText","range":{"start":{"row":535,"column":0},"end":{"row":535,"column":1}},"text":"}"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":535,"column":0},"end":{"row":535,"column":1}},"text":"}"},{"action":"removeLines","range":{"start":{"row":0,"column":0},"end":{"row":535,"column":0}},"nl":"\n","lines":["/**"," * This is a Java Program used to input Excersizes, Weights, Reps, and Sets"," *  ...into a workout log"," *  "," *  @caleberb"," *  v1.2.4"," */","// import statments","import java.io.*;","import java.io.File.*;","import java.nio.file.*;","import java.util.*;","import java.time.*;","import java.time.format.*;","","public class WorkoutLog {","    ","    /**","     * @param args","     * Initializes the constant variables used throughout the class","     * They are not changed by any part of the code","     * @return void","     */","    public static void main(String[] args) throws Exception {","        // Create scanner objects","        Scanner scan = new Scanner(System.in);","        Scanner intScan = new Scanner(System.in);","        ","        // Converts Object LocalDate to String in format MM-DD-YYYY","        LocalDate localDate = LocalDate.now();","        DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"MM-d-yyyy\");","        String date = localDate.format(formatter);","        ","        int logSign = 0;","        println(\"Please choose an option: \");","        println(\"1) Log in\");","        println(\"2) Sign up\");","        println(\"3) Quit\");","        ","        logSign = intScan.nextInt();","        switch(logSign){","            case 1:","                // Logs the user in","                logIn(scan, intScan, date, args);","                break;","            case 2:","                // Signs the user up","                signUp(scan);","                break;","            case 3:","                // Quits the program","                break;","            default:","                // Default option, gives error, calls recursively","                println(\"Error. Please enter a valid option.\");","                main(args);","                break;","        }","        ","    }","    ","    /**","     * @param Scanner","     * @param Scanner","     * @param String","     * @param String[]args","     * Acts as a log in screen for the user, passing them to the home method","     * @return void","     */","    private static void logIn(Scanner scan, Scanner intScan, String date, String[] args) throws Exception{","        String csvFile = sysCheckDir(scan) + \"usrList.CSV\";","        String passHash = \"\";","        ","        // Prompts user for their name","        print(\"Please input your username or \\'000\\' to quit: \");","        String uName = scan.nextLine();","        if(uName.equals(\"000\")){","            main(args);","        }","        ","        if(usrCheck(csvFile, uName)){","            passHash = passCheck(csvFile, uName);","        } else {","            println(\"Error. Username does not exist. Try logging in again.\");","            logIn(scan, intScan, date, args);","        }","        ","        print(\"Please input your password: \");","        String pWord = scan.nextLine();","        ","        String decryptedPass = Protected.decryptPass(passHash);","        ","        if(pWord.equals(decryptedPass)){","            // Enter main program ... not to be confused with main method","            home(scan, intScan, uName, date, args);","        } else {","            println(\"Error. Incorrect Password. Try logging in again.\");","            logIn(scan, intScan, date, args);","        }","        ","        ","        ","    }","    ","    /**","     * @param String","     * @param String","     * Checks if the inputted username exists in the user log","     * @return boolean","     */","    private static boolean usrCheck(String csvFile, String usrName) throws Exception{","        String[][] usrListArr = CSVUtils.readFile(csvFile);","        boolean usrExists = false;        ","        for(int i = 0; i < usrListArr.length; i++){","            if(usrListArr[i][0].equals(usrName)){","                usrExists = true;","            }","        }","        return usrExists;","    }","    ","    /**","     * @param String","     * @param String","     * Retrieves the passWord hash from the usrList CSV file","     * @return String","     */","    private static String passCheck(String csvFile, String usrName) throws Exception{","        String[][] usrListArr = CSVUtils.readFile(csvFile);","        String pass = \"\";        ","        for(int i = 0; i < usrListArr.length; i++){","            if(usrListArr[i][0].equals(usrName)){","                pass = usrListArr[i][1];","            }","        }","        return pass;","    }","    ","    /**","     * @param Scanner ","     * @param Scanner","     * @param String","     * @param String","     * @param String[]args","     * Acts as the main method, an calls itself recursively until user quits","     * @return void","     */","    private static void home(Scanner scan, Scanner intScan, String name, String todayDate, String[] args) throws Exception{","        // Prompts the user whether they want to open/write current or past log","        int usrOper = promptOper(intScan);","        ","        //Follows through with the users prompt","        switch(usrOper){","            case 1: ","                // Open today","                openLog(scan, name, todayDate);","                break;","            case 2: ","                // Write today","                writeLog(scan, intScan, name, todayDate);","                break;","            case 3: ","                // Open past with given date","                print(\"Input date in MM-DD-YYYY format: \");","                String openPastDate = scan.nextLine();","                openLog(scan, name, openPastDate);","                break;","            case 4: ","                // Write past with given date","                print(\"Input date in MM-DD-YYYY format: \");","                String writePastDate = scan.nextLine();","                writeLog(scan, intScan, name, writePastDate);","                break;","            case 5:","                main(args);","                break;","            case 6:","                signUp(scan, intScan);","                break;","            default: ","                break;","        }","        ","        //Returns home after program ends if user wishes","        println(\"\\nReturn home? (y/n): \");","        String returnHome = scan.nextLine();","        returnHome = returnHome.toLowerCase();","        switch(returnHome){","            case \"y\":","                home(scan, intScan, name, todayDate, args);","                break;","            case \"n\":","                break;","        }","        ","    }","    ","    /**","     * @param Scanner","     * Lists the availible functions and asks the user for input","     * @return int","     */","    private static int promptOper(Scanner intScan){","        //Prompts the user whether they want to open/write current or past log","        println(\"Please select an option\");","        println(\"1) Open today's log\");","        println(\"2) Write today's log\");","        println(\"3) Open a past day's log\");","        println(\"4) Write a past day's log\");","        println(\"5) Log out\");","        int usrOper = intScan.nextInt();","        int oper = 0;","        switch(usrOper){","            case 1:","                oper = 1;","                break;","            case 2:","                oper = 2;","                break;","            case 3:","                oper = 3;","                break;","            case 4:","                oper = 4;","                break;","            case 5:","                oper = 4;","                break;","            default:","                println(\"Error! Invalid Option. Please enter a valid option: \");","                usrOper = promptOper(intScan);","        }","        return usrOper;","    }","    ","    ","    /**","     * @param Scanner","     * @param String","     * @param String","     * Reads the file for today and prints it out on screen","     * @return void","     */","    private static void openLog (Scanner scan, String name, String date) throws java.io.IOException{","        // Locates appropriate file path and stores it in csvFile","        String csvFile = sysCheck(scan, name, date);","        ","        // Checks if the log file exists or not","        if(checkLogExists(csvFile)){","            // If log file exists, read the file","            String arr[][] = CSVUtils.readFile(csvFile);","            println(\"\");","            for(int i = 0; i < arr.length;i++){","                for(int j = 0; j < arr[i].length; j++){","                    if(j == arr[i].length - 1){","                        print(arr[i][j] + \"\");","                    } else {","                        print(arr[i][j] + \" : \");","                    }","                }","                println(\"\");","            }","        }","        ","        // Checks if the log file exists or not","        if(!checkLogExists(csvFile)){","            // If the log file does not exist, print error and end","            println(\"Sorry. There is no log for the given date and user.\");","        }","    }","    ","    /**","     * @param Scanner","     * @param Scanner","     * @param String","     * @param String","     * Asks the user for input and writes their data into today's log","     * @return void","     */","    private static void writeLog (Scanner scan, Scanner intScan, String name, String date) throws java.io.IOException{","        // Prompts user for number of exercises","        println(\"Please input the number of excerises you will be logging for the day: \");","        int numOfEx = intScan.nextInt();","        ","        // Creates CSV file and location based on operating system","        String csvFile = sysCheck(scan, name, date);","        ","        // Checks if the log file exists or not","        if(!checkLogExists(csvFile)){","            // Creates file if it did not exist previously","            createLog(csvFile);","        }","        ","        // Selects created file as file to write to","        FileWriter writer = new FileWriter(csvFile);","        ","        // Create and add headers to the CSV file","        ArrayList<String> headers = new ArrayList<String>();","        headers.add(\"Exercise\");","        headers.add(\"Weight\");","        headers.add(\"Reps\");","        headers.add(\"Sets\");","        CSVUtils.writeLine(writer, headers);","        ","        /*","         * Continuously asks user for input","         * Adds input to ArrayList \"input\"","         * Writes \"input\" to CSV","         * Clears \"input\"","         */","        ArrayList<String> input = new ArrayList<String>();","        for(int i = 0; i < numOfEx; i++){","            // Prompts for input","            println(\"\\n\");","            print(\"Exercise: \");","            String ex = scan.nextLine();","            print(\"Weight: \");","            String we = scan.nextLine();","            print(\"Reps: \");","            String re = scan.nextLine();","            print(\"Sets: \");","            String se = scan.nextLine();","            ","            // Adds input to ArrayList","            input.add(ex);","            input.add(we);","            input.add(re);","            input.add(se);","            ","            // Writes ArrayList to CSV file","            CSVUtils.writeLine(writer, input);","            input.remove(0);","            input.remove(0);","            input.remove(0);","            input.remove(0);","        }","        ","        // Close the file writer and ends method","        writer.flush();","        writer.close();","    }","    ","    /**","     * @param Scanner","     * @param String","     * @param String","     * Asks the user for what operating system they are using in order to ","     *    Establish which file navigation system to use.","     * @return String","     */","    private static String sysCheck(Scanner scan, String name, String date){","        String csvFile = sysCheckDir(scan);","        ","        // Sets csvFile to path of full CSV log file","        csvFile = name + \" - \" + date + \".csv\";","        return csvFile;","    }","    ","    /**","     * @param Scanner","     * Determines correct path to the 'Workout' directory on the user's desktop","     * @return String","     */","    private static String sysCheckDir(Scanner scan){","        // Reads the system for the computer user for file path purposes","        String sysUsrName = System.getProperty(\"user.name\");","        ","        // Initializes variables","        String csvFile = \"\";","        String customDirStr = \"\";","        int opCode = 0;","        ","        //Checks which file navigation system the user's computer uses","        File linuxDir = new File(\"/home/\" + sysUsrName + \"/Desktop/\");","        File windowsDir = new File(\"C:/Users/\" + sysUsrName + \"/Desktop/\");","        File macDir = new File(\"/Users/\" + sysUsrName + \"/Desktop/\");","        boolean linuxDirExists = linuxDir.exists();","        boolean windowsDirExists = windowsDir.exists();","        boolean macDirExists = macDir.exists();","        ","        // Sets opCode relational to which file navigation system the computer uses","        if(linuxDirExists){","            // Use linux file navigation system","            opCode = 1;","        } else if (windowsDirExists){","            // Use windows file navigation system","            opCode = 2;","        } else if (macDirExists){","            // Use mac file navigation system","            opCode = 3;","        } else {","            // Use custom file navigation system","            opCode = 4;","            println(\"Please input the full path to your desktop folder: \");","            customDirStr = scan.nextLine();","        }","        ","        // Sets the csvFile string to contain the path of the system Desktop folder","        switch(opCode){","            case 1: ","                // linux Desktop folder","                Path filePath = linuxDir.toPath();","                csvFile = filePath.toString();","                break;","            case 2:","                // window Desktop folder","                filePath = windowsDir.toPath();","                csvFile = filePath.toString();","                break;","            case 3:","                // mac Desktop folder","                filePath = macDir.toPath();","                csvFile = filePath.toString();","                break;","            case 4:","                // custom Desktop folder","                csvFile = customDirStr;","                break;","        }","        ","        // Check if Workout folder on Desktop exists","        // If not, creates if","        String workoutDirStr = csvFile + \"/Workout/\";","        File workoutDir = new File(workoutDirStr);","        if(!workoutDir.exists()){","            new File(workoutDirStr).mkdirs();","        }","        ","        // Sets csvFile to path of full CSV file","        csvFile = workoutDirStr;","        return csvFile;","    }","    ","    /**","     * @param String","     * Checks if the given log exists","     * @return boolean","     */","    private static boolean checkLogExists(String csvFile){","        // Default if log doesn't exist","        boolean logExists = false;","        ","        //Creates File object with path of log","        File logFile = new File(csvFile);","        ","        //Checks if the log exists","        if(logFile.exists()){","            // Sets boolean to true: the file does exist","            logExists = true;","        }","        ","        return logExists;","    }","    ","    /**","     * @param String","     * Creates the given log file if it does not exist","     * @return void","     */","    private static void createLog(String csvFile) throws java.io.IOException{","        // Creates File object with path of log ","        File logFile = new File(csvFile);","        ","        // Creates an actual file based off of the File object","        logFile.createNewFile();","    }","    ","    /**","     * @param String","     * @param String","     * @param String","     * Adds user to the usrList CSV file","     * @return void","     */","    public static void addUser(String usrName, String pass, String csvFile){","        ","        // Reads CSV file into 2d array 'usrListArray'","        String[][] usrListArr = CSVUtils.readFile(csvFile);","        ","        // Encrypts password","        pass = Protected.encryptPass(pass);","        ","        // Creates ArrayList 'arrL' to hold CSV contents","        ArrayList<String> arrL = new ArrayList<String>();","        ","        // Convert 2d array 'usrListArray' to ArrayList 'arrL'","        for(int i =0; i < usrListArr.length; i++){","            for(int j = 0; j < usrListArr[i].length; j++){","                arrL.add(usrListArr[i][j]);","            }","        }","        ","        // Adds new user and pass to ArrayList 'arrL'","        arrL.add(usrName);","        arrL.add(pass);","        ","        // Writes new user list to CSV file","        FileWriter writer  = new FileWriter(csvFile);","        CSVUtils.writeLine(writer, arrL);","        ","        // Close writer","        writer.flush();","        writer.close();","    }","    ","    /**","     * @param Scanner","     * Calls the addUser method to add a user to the CSV file","     * @return void","     */","    private static void signUp(Scanner scan){","        String usrName = scan.nextLine();","        String passWord = scan.nextLine();","        String csvFile = sysCheckDir(scan) + \"usrList.CSV\";","        addUser(usrName, passWord, csvFile);","    }","    ","    ","    /**","     * @param String","     * Calls the system print method","     * @return void","     */","    private static void print(String print){","        System.out.print(print);","    }","    ","    /**","     * @param String","     * Calls the system println method","     * @return void","     */","    private static void println(String println){","        System.out.println(println);","    }"]},{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":3}},"text":"/**"},{"action":"insertText","range":{"start":{"row":0,"column":3},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":535,"column":0}},"lines":[" * This is a Java Program used to input Excersizes, Weights, Reps, and Sets"," *  ...into a workout log"," *  "," *  @caleberb"," *  v1.2.4"," */","// import statments","import java.io.*;","import java.io.File.*;","import java.nio.file.*;","import java.util.*;","import java.time.*;","import java.time.format.*;","","public class WorkoutLog {","    ","    /**","     * @param args","     * Initializes the constant variables used throughout the class","     * They are not changed by any part of the code","     * @return void","     */","    public static void main(String[] args) throws Exception {","        // Create scanner objects","        Scanner scan = new Scanner(System.in);","        Scanner intScan = new Scanner(System.in);","        ","        // Converts Object LocalDate to String in format MM-DD-YYYY","        LocalDate localDate = LocalDate.now();","        DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"MM-d-yyyy\");","        String date = localDate.format(formatter);","        ","        int logSign = 0;","        println(\"Please choose an option: \");","        println(\"1) Log in\");","        println(\"2) Sign up\");","        println(\"3) Quit\");","        ","        logSign = intScan.nextInt();","        switch(logSign){","            case 1:","                // Logs the user in","                logIn(scan, intScan, date, args);","                break;","            case 2:","                // Signs the user up","                signUp(scan);","                break;","            case 3:","                // Quits the program","                break;","            default:","                // Default option, gives error, calls recursively","                println(\"Error. Please enter a valid option.\");","                main(args);","                break;","        }","        ","    }","    ","    /**","     * @param Scanner","     * @param Scanner","     * @param String","     * @param String[]args","     * Acts as a log in screen for the user, passing them to the home method","     * @return void","     */","    private static void logIn(Scanner scan, Scanner intScan, String date, String[] args) throws Exception{","        String csvFile = sysCheckDir(scan) + \"usrList.CSV\";","        String passHash = \"\";","        ","        // Prompts user for their name","        print(\"Please input your username or \\'000\\' to quit: \");","        String uName = scan.nextLine();","        if(uName.equals(\"000\")){","            main(args);","        }","        ","        if(usrCheck(csvFile, uName)){","            passHash = passCheck(csvFile, uName);","        } else {","            println(\"Error. Username does not exist. Try logging in again.\");","            logIn(scan, intScan, date, args);","        }","        ","        print(\"Please input your password: \");","        String pWord = scan.nextLine();","        ","        String decryptedPass = Protected.decryptPass(passHash);","        ","        if(pWord.equals(decryptedPass)){","            // Enter main program ... not to be confused with main method","            home(scan, intScan, uName, date, args);","        } else {","            println(\"Error. Incorrect Password. Try logging in again.\");","            logIn(scan, intScan, date, args);","        }","        ","        ","        ","    }","    ","    /**","     * @param String","     * @param String","     * Checks if the inputted username exists in the user log","     * @return boolean","     */","    private static boolean usrCheck(String csvFile, String usrName) throws Exception{","        String[][] usrListArr = CSVUtils.readFile(csvFile);","        boolean usrExists = false;        ","        for(int i = 0; i < usrListArr.length; i++){","            if(usrListArr[i][0].equals(usrName)){","                usrExists = true;","            }","        }","        return usrExists;","    }","    ","    /**","     * @param String","     * @param String","     * Retrieves the passWord hash from the usrList CSV file","     * @return String","     */","    private static String passCheck(String csvFile, String usrName) throws Exception{","        String[][] usrListArr = CSVUtils.readFile(csvFile);","        String pass = \"\";        ","        for(int i = 0; i < usrListArr.length; i++){","            if(usrListArr[i][0].equals(usrName)){","                pass = usrListArr[i][1];","            }","        }","        return pass;","    }","    ","    /**","     * @param Scanner ","     * @param Scanner","     * @param String","     * @param String","     * @param String[]args","     * Acts as the main method, an calls itself recursively until user quits","     * @return void","     */","    private static void home(Scanner scan, Scanner intScan, String name, String todayDate, String[] args) throws Exception{","        // Prompts the user whether they want to open/write current or past log","        int usrOper = promptOper(intScan);","        ","        //Follows through with the users prompt","        switch(usrOper){","            case 1: ","                // Open today","                openLog(scan, name, todayDate);","                break;","            case 2: ","                // Write today","                writeLog(scan, intScan, name, todayDate);","                break;","            case 3: ","                // Open past with given date","                print(\"Input date in MM-DD-YYYY format: \");","                String openPastDate = scan.nextLine();","                openLog(scan, name, openPastDate);","                break;","            case 4: ","                // Write past with given date","                print(\"Input date in MM-DD-YYYY format: \");","                String writePastDate = scan.nextLine();","                writeLog(scan, intScan, name, writePastDate);","                break;","            case 5:","                main(args);","                break;","            case 6:","                signUp(scan);","                break;","            default: ","                break;","        }","        ","        //Returns home after program ends if user wishes","        println(\"\\nReturn home? (y/n): \");","        String returnHome = scan.nextLine();","        returnHome = returnHome.toLowerCase();","        switch(returnHome){","            case \"y\":","                home(scan, intScan, name, todayDate, args);","                break;","            case \"n\":","                break;","        }","        ","    }","    ","    /**","     * @param Scanner","     * Lists the availible functions and asks the user for input","     * @return int","     */","    private static int promptOper(Scanner intScan){","        //Prompts the user whether they want to open/write current or past log","        println(\"Please select an option\");","        println(\"1) Open today's log\");","        println(\"2) Write today's log\");","        println(\"3) Open a past day's log\");","        println(\"4) Write a past day's log\");","        println(\"5) Log out\");","        int usrOper = intScan.nextInt();","        int oper = 0;","        switch(usrOper){","            case 1:","                oper = 1;","                break;","            case 2:","                oper = 2;","                break;","            case 3:","                oper = 3;","                break;","            case 4:","                oper = 4;","                break;","            case 5:","                oper = 4;","                break;","            default:","                println(\"Error! Invalid Option. Please enter a valid option: \");","                usrOper = promptOper(intScan);","        }","        return usrOper;","    }","    ","    ","    /**","     * @param Scanner","     * @param String","     * @param String","     * Reads the file for today and prints it out on screen","     * @return void","     */","    private static void openLog (Scanner scan, String name, String date) throws java.io.IOException{","        // Locates appropriate file path and stores it in csvFile","        String csvFile = sysCheck(scan, name, date);","        ","        // Checks if the log file exists or not","        if(checkLogExists(csvFile)){","            // If log file exists, read the file","            String arr[][] = CSVUtils.readFile(csvFile);","            println(\"\");","            for(int i = 0; i < arr.length;i++){","                for(int j = 0; j < arr[i].length; j++){","                    if(j == arr[i].length - 1){","                        print(arr[i][j] + \"\");","                    } else {","                        print(arr[i][j] + \" : \");","                    }","                }","                println(\"\");","            }","        }","        ","        // Checks if the log file exists or not","        if(!checkLogExists(csvFile)){","            // If the log file does not exist, print error and end","            println(\"Sorry. There is no log for the given date and user.\");","        }","    }","    ","    /**","     * @param Scanner","     * @param Scanner","     * @param String","     * @param String","     * Asks the user for input and writes their data into today's log","     * @return void","     */","    private static void writeLog (Scanner scan, Scanner intScan, String name, String date) throws java.io.IOException{","        // Prompts user for number of exercises","        println(\"Please input the number of excerises you will be logging for the day: \");","        int numOfEx = intScan.nextInt();","        ","        // Creates CSV file and location based on operating system","        String csvFile = sysCheck(scan, name, date);","        ","        // Checks if the log file exists or not","        if(!checkLogExists(csvFile)){","            // Creates file if it did not exist previously","            createLog(csvFile);","        }","        ","        // Selects created file as file to write to","        FileWriter writer = new FileWriter(csvFile);","        ","        // Create and add headers to the CSV file","        ArrayList<String> headers = new ArrayList<String>();","        headers.add(\"Exercise\");","        headers.add(\"Weight\");","        headers.add(\"Reps\");","        headers.add(\"Sets\");","        CSVUtils.writeLine(writer, headers);","        ","        /*","         * Continuously asks user for input","         * Adds input to ArrayList \"input\"","         * Writes \"input\" to CSV","         * Clears \"input\"","         */","        ArrayList<String> input = new ArrayList<String>();","        for(int i = 0; i < numOfEx; i++){","            // Prompts for input","            println(\"\\n\");","            print(\"Exercise: \");","            String ex = scan.nextLine();","            print(\"Weight: \");","            String we = scan.nextLine();","            print(\"Reps: \");","            String re = scan.nextLine();","            print(\"Sets: \");","            String se = scan.nextLine();","            ","            // Adds input to ArrayList","            input.add(ex);","            input.add(we);","            input.add(re);","            input.add(se);","            ","            // Writes ArrayList to CSV file","            CSVUtils.writeLine(writer, input);","            input.remove(0);","            input.remove(0);","            input.remove(0);","            input.remove(0);","        }","        ","        // Close the file writer and ends method","        writer.flush();","        writer.close();","    }","    ","    /**","     * @param Scanner","     * @param String","     * @param String","     * Asks the user for what operating system they are using in order to ","     *    Establish which file navigation system to use.","     * @return String","     */","    private static String sysCheck(Scanner scan, String name, String date){","        String csvFile = sysCheckDir(scan);","        ","        // Sets csvFile to path of full CSV log file","        csvFile = name + \" - \" + date + \".csv\";","        return csvFile;","    }","    ","    /**","     * @param Scanner","     * Determines correct path to the 'Workout' directory on the user's desktop","     * @return String","     */","    private static String sysCheckDir(Scanner scan){","        // Reads the system for the computer user for file path purposes","        String sysUsrName = System.getProperty(\"user.name\");","        ","        // Initializes variables","        String csvFile = \"\";","        String customDirStr = \"\";","        int opCode = 0;","        ","        //Checks which file navigation system the user's computer uses","        File linuxDir = new File(\"/home/\" + sysUsrName + \"/Desktop/\");","        File windowsDir = new File(\"C:/Users/\" + sysUsrName + \"/Desktop/\");","        File macDir = new File(\"/Users/\" + sysUsrName + \"/Desktop/\");","        boolean linuxDirExists = linuxDir.exists();","        boolean windowsDirExists = windowsDir.exists();","        boolean macDirExists = macDir.exists();","        ","        // Sets opCode relational to which file navigation system the computer uses","        if(linuxDirExists){","            // Use linux file navigation system","            opCode = 1;","        } else if (windowsDirExists){","            // Use windows file navigation system","            opCode = 2;","        } else if (macDirExists){","            // Use mac file navigation system","            opCode = 3;","        } else {","            // Use custom file navigation system","            opCode = 4;","            println(\"Please input the full path to your desktop folder: \");","            customDirStr = scan.nextLine();","        }","        ","        // Sets the csvFile string to contain the path of the system Desktop folder","        switch(opCode){","            case 1: ","                // linux Desktop folder","                Path filePath = linuxDir.toPath();","                csvFile = filePath.toString();","                break;","            case 2:","                // window Desktop folder","                filePath = windowsDir.toPath();","                csvFile = filePath.toString();","                break;","            case 3:","                // mac Desktop folder","                filePath = macDir.toPath();","                csvFile = filePath.toString();","                break;","            case 4:","                // custom Desktop folder","                csvFile = customDirStr;","                break;","        }","        ","        // Check if Workout folder on Desktop exists","        // If not, creates if","        String workoutDirStr = csvFile + \"/Workout/\";","        File workoutDir = new File(workoutDirStr);","        if(!workoutDir.exists()){","            new File(workoutDirStr).mkdirs();","        }","        ","        // Sets csvFile to path of full CSV file","        csvFile = workoutDirStr;","        return csvFile;","    }","    ","    /**","     * @param String","     * Checks if the given log exists","     * @return boolean","     */","    private static boolean checkLogExists(String csvFile){","        // Default if log doesn't exist","        boolean logExists = false;","        ","        //Creates File object with path of log","        File logFile = new File(csvFile);","        ","        //Checks if the log exists","        if(logFile.exists()){","            // Sets boolean to true: the file does exist","            logExists = true;","        }","        ","        return logExists;","    }","    ","    /**","     * @param String","     * Creates the given log file if it does not exist","     * @return void","     */","    private static void createLog(String csvFile) throws java.io.IOException{","        // Creates File object with path of log ","        File logFile = new File(csvFile);","        ","        // Creates an actual file based off of the File object","        logFile.createNewFile();","    }","    ","    /**","     * @param String","     * @param String","     * @param String","     * Adds user to the usrList CSV file","     * @return void","     */","    public static void addUser(String usrName, String pass, String csvFile){","        ","        // Reads CSV file into 2d array 'usrListArray'","        String[][] usrListArr = CSVUtils.readFile(csvFile);","        ","        // Encrypts password","        pass = Protected.encryptPass(pass);","        ","        // Creates ArrayList 'arrL' to hold CSV contents","        ArrayList<String> arrL = new ArrayList<String>();","        ","        // Convert 2d array 'usrListArray' to ArrayList 'arrL'","        for(int i =0; i < usrListArr.length; i++){","            for(int j = 0; j < usrListArr[i].length; j++){","                arrL.add(usrListArr[i][j]);","            }","        }","        ","        // Adds new user and pass to ArrayList 'arrL'","        arrL.add(usrName);","        arrL.add(pass);","        ","        // Writes new user list to CSV file","        FileWriter writer  = new FileWriter(csvFile);","        CSVUtils.writeLine(writer, arrL);","        ","        // Close writer","        writer.flush();","        writer.close();","    }","    ","    /**","     * @param Scanner","     * Calls the addUser method to add a user to the CSV file","     * @return void","     */","    private static void signUp(Scanner scan){","        String usrName = scan.nextLine();","        String passWord = scan.nextLine();","        String csvFile = sysCheckDir(scan) + \"usrList.CSV\";","        addUser(usrName, passWord, csvFile);","    }","    ","    ","    /**","     * @param String","     * Calls the system print method","     * @return void","     */","    private static void print(String print){","        System.out.print(print);","    }","    ","    /**","     * @param String","     * Calls the system println method","     * @return void","     */","    private static void println(String println){","        System.out.println(println);","    }"]},{"action":"insertText","range":{"start":{"row":535,"column":0},"end":{"row":535,"column":1}},"text":"}"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":535,"column":0},"end":{"row":535,"column":1}},"text":"}"},{"action":"removeLines","range":{"start":{"row":0,"column":0},"end":{"row":535,"column":0}},"nl":"\n","lines":["/**"," * This is a Java Program used to input Excersizes, Weights, Reps, and Sets"," *  ...into a workout log"," *  "," *  @caleberb"," *  v1.2.4"," */","// import statments","import java.io.*;","import java.io.File.*;","import java.nio.file.*;","import java.util.*;","import java.time.*;","import java.time.format.*;","","public class WorkoutLog {","    ","    /**","     * @param args","     * Initializes the constant variables used throughout the class","     * They are not changed by any part of the code","     * @return void","     */","    public static void main(String[] args) throws Exception {","        // Create scanner objects","        Scanner scan = new Scanner(System.in);","        Scanner intScan = new Scanner(System.in);","        ","        // Converts Object LocalDate to String in format MM-DD-YYYY","        LocalDate localDate = LocalDate.now();","        DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"MM-d-yyyy\");","        String date = localDate.format(formatter);","        ","        int logSign = 0;","        println(\"Please choose an option: \");","        println(\"1) Log in\");","        println(\"2) Sign up\");","        println(\"3) Quit\");","        ","        logSign = intScan.nextInt();","        switch(logSign){","            case 1:","                // Logs the user in","                logIn(scan, intScan, date, args);","                break;","            case 2:","                // Signs the user up","                signUp(scan);","                break;","            case 3:","                // Quits the program","                break;","            default:","                // Default option, gives error, calls recursively","                println(\"Error. Please enter a valid option.\");","                main(args);","                break;","        }","        ","    }","    ","    /**","     * @param Scanner","     * @param Scanner","     * @param String","     * @param String[]args","     * Acts as a log in screen for the user, passing them to the home method","     * @return void","     */","    private static void logIn(Scanner scan, Scanner intScan, String date, String[] args) throws Exception{","        String csvFile = sysCheckDir(scan) + \"usrList.CSV\";","        String passHash = \"\";","        ","        // Prompts user for their name","        print(\"Please input your username or \\'000\\' to quit: \");","        String uName = scan.nextLine();","        if(uName.equals(\"000\")){","            main(args);","        }","        ","        if(usrCheck(csvFile, uName)){","            passHash = passCheck(csvFile, uName);","        } else {","            println(\"Error. Username does not exist. Try logging in again.\");","            logIn(scan, intScan, date, args);","        }","        ","        print(\"Please input your password: \");","        String pWord = scan.nextLine();","        ","        String decryptedPass = Protected.decryptPass(passHash);","        ","        if(pWord.equals(decryptedPass)){","            // Enter main program ... not to be confused with main method","            home(scan, intScan, uName, date, args);","        } else {","            println(\"Error. Incorrect Password. Try logging in again.\");","            logIn(scan, intScan, date, args);","        }","        ","        ","        ","    }","    ","    /**","     * @param String","     * @param String","     * Checks if the inputted username exists in the user log","     * @return boolean","     */","    private static boolean usrCheck(String csvFile, String usrName) throws Exception{","        String[][] usrListArr = CSVUtils.readFile(csvFile);","        boolean usrExists = false;        ","        for(int i = 0; i < usrListArr.length; i++){","            if(usrListArr[i][0].equals(usrName)){","                usrExists = true;","            }","        }","        return usrExists;","    }","    ","    /**","     * @param String","     * @param String","     * Retrieves the passWord hash from the usrList CSV file","     * @return String","     */","    private static String passCheck(String csvFile, String usrName) throws Exception{","        String[][] usrListArr = CSVUtils.readFile(csvFile);","        String pass = \"\";        ","        for(int i = 0; i < usrListArr.length; i++){","            if(usrListArr[i][0].equals(usrName)){","                pass = usrListArr[i][1];","            }","        }","        return pass;","    }","    ","    /**","     * @param Scanner ","     * @param Scanner","     * @param String","     * @param String","     * @param String[]args","     * Acts as the main method, an calls itself recursively until user quits","     * @return void","     */","    private static void home(Scanner scan, Scanner intScan, String name, String todayDate, String[] args) throws Exception{","        // Prompts the user whether they want to open/write current or past log","        int usrOper = promptOper(intScan);","        ","        //Follows through with the users prompt","        switch(usrOper){","            case 1: ","                // Open today","                openLog(scan, name, todayDate);","                break;","            case 2: ","                // Write today","                writeLog(scan, intScan, name, todayDate);","                break;","            case 3: ","                // Open past with given date","                print(\"Input date in MM-DD-YYYY format: \");","                String openPastDate = scan.nextLine();","                openLog(scan, name, openPastDate);","                break;","            case 4: ","                // Write past with given date","                print(\"Input date in MM-DD-YYYY format: \");","                String writePastDate = scan.nextLine();","                writeLog(scan, intScan, name, writePastDate);","                break;","            case 5:","                main(args);","                break;","            case 6:","                signUp(scan);","                break;","            default: ","                break;","        }","        ","        //Returns home after program ends if user wishes","        println(\"\\nReturn home? (y/n): \");","        String returnHome = scan.nextLine();","        returnHome = returnHome.toLowerCase();","        switch(returnHome){","            case \"y\":","                home(scan, intScan, name, todayDate, args);","                break;","            case \"n\":","                break;","        }","        ","    }","    ","    /**","     * @param Scanner","     * Lists the availible functions and asks the user for input","     * @return int","     */","    private static int promptOper(Scanner intScan){","        //Prompts the user whether they want to open/write current or past log","        println(\"Please select an option\");","        println(\"1) Open today's log\");","        println(\"2) Write today's log\");","        println(\"3) Open a past day's log\");","        println(\"4) Write a past day's log\");","        println(\"5) Log out\");","        int usrOper = intScan.nextInt();","        int oper = 0;","        switch(usrOper){","            case 1:","                oper = 1;","                break;","            case 2:","                oper = 2;","                break;","            case 3:","                oper = 3;","                break;","            case 4:","                oper = 4;","                break;","            case 5:","                oper = 4;","                break;","            default:","                println(\"Error! Invalid Option. Please enter a valid option: \");","                usrOper = promptOper(intScan);","        }","        return usrOper;","    }","    ","    ","    /**","     * @param Scanner","     * @param String","     * @param String","     * Reads the file for today and prints it out on screen","     * @return void","     */","    private static void openLog (Scanner scan, String name, String date) throws java.io.IOException{","        // Locates appropriate file path and stores it in csvFile","        String csvFile = sysCheck(scan, name, date);","        ","        // Checks if the log file exists or not","        if(checkLogExists(csvFile)){","            // If log file exists, read the file","            String arr[][] = CSVUtils.readFile(csvFile);","            println(\"\");","            for(int i = 0; i < arr.length;i++){","                for(int j = 0; j < arr[i].length; j++){","                    if(j == arr[i].length - 1){","                        print(arr[i][j] + \"\");","                    } else {","                        print(arr[i][j] + \" : \");","                    }","                }","                println(\"\");","            }","        }","        ","        // Checks if the log file exists or not","        if(!checkLogExists(csvFile)){","            // If the log file does not exist, print error and end","            println(\"Sorry. There is no log for the given date and user.\");","        }","    }","    ","    /**","     * @param Scanner","     * @param Scanner","     * @param String","     * @param String","     * Asks the user for input and writes their data into today's log","     * @return void","     */","    private static void writeLog (Scanner scan, Scanner intScan, String name, String date) throws java.io.IOException{","        // Prompts user for number of exercises","        println(\"Please input the number of excerises you will be logging for the day: \");","        int numOfEx = intScan.nextInt();","        ","        // Creates CSV file and location based on operating system","        String csvFile = sysCheck(scan, name, date);","        ","        // Checks if the log file exists or not","        if(!checkLogExists(csvFile)){","            // Creates file if it did not exist previously","            createLog(csvFile);","        }","        ","        // Selects created file as file to write to","        FileWriter writer = new FileWriter(csvFile);","        ","        // Create and add headers to the CSV file","        ArrayList<String> headers = new ArrayList<String>();","        headers.add(\"Exercise\");","        headers.add(\"Weight\");","        headers.add(\"Reps\");","        headers.add(\"Sets\");","        CSVUtils.writeLine(writer, headers);","        ","        /*","         * Continuously asks user for input","         * Adds input to ArrayList \"input\"","         * Writes \"input\" to CSV","         * Clears \"input\"","         */","        ArrayList<String> input = new ArrayList<String>();","        for(int i = 0; i < numOfEx; i++){","            // Prompts for input","            println(\"\\n\");","            print(\"Exercise: \");","            String ex = scan.nextLine();","            print(\"Weight: \");","            String we = scan.nextLine();","            print(\"Reps: \");","            String re = scan.nextLine();","            print(\"Sets: \");","            String se = scan.nextLine();","            ","            // Adds input to ArrayList","            input.add(ex);","            input.add(we);","            input.add(re);","            input.add(se);","            ","            // Writes ArrayList to CSV file","            CSVUtils.writeLine(writer, input);","            input.remove(0);","            input.remove(0);","            input.remove(0);","            input.remove(0);","        }","        ","        // Close the file writer and ends method","        writer.flush();","        writer.close();","    }","    ","    /**","     * @param Scanner","     * @param String","     * @param String","     * Asks the user for what operating system they are using in order to ","     *    Establish which file navigation system to use.","     * @return String","     */","    private static String sysCheck(Scanner scan, String name, String date){","        String csvFile = sysCheckDir(scan);","        ","        // Sets csvFile to path of full CSV log file","        csvFile = name + \" - \" + date + \".csv\";","        return csvFile;","    }","    ","    /**","     * @param Scanner","     * Determines correct path to the 'Workout' directory on the user's desktop","     * @return String","     */","    private static String sysCheckDir(Scanner scan){","        // Reads the system for the computer user for file path purposes","        String sysUsrName = System.getProperty(\"user.name\");","        ","        // Initializes variables","        String csvFile = \"\";","        String customDirStr = \"\";","        int opCode = 0;","        ","        //Checks which file navigation system the user's computer uses","        File linuxDir = new File(\"/home/\" + sysUsrName + \"/Desktop/\");","        File windowsDir = new File(\"C:/Users/\" + sysUsrName + \"/Desktop/\");","        File macDir = new File(\"/Users/\" + sysUsrName + \"/Desktop/\");","        boolean linuxDirExists = linuxDir.exists();","        boolean windowsDirExists = windowsDir.exists();","        boolean macDirExists = macDir.exists();","        ","        // Sets opCode relational to which file navigation system the computer uses","        if(linuxDirExists){","            // Use linux file navigation system","            opCode = 1;","        } else if (windowsDirExists){","            // Use windows file navigation system","            opCode = 2;","        } else if (macDirExists){","            // Use mac file navigation system","            opCode = 3;","        } else {","            // Use custom file navigation system","            opCode = 4;","            println(\"Please input the full path to your desktop folder: \");","            customDirStr = scan.nextLine();","        }","        ","        // Sets the csvFile string to contain the path of the system Desktop folder","        switch(opCode){","            case 1: ","                // linux Desktop folder","                Path filePath = linuxDir.toPath();","                csvFile = filePath.toString();","                break;","            case 2:","                // window Desktop folder","                filePath = windowsDir.toPath();","                csvFile = filePath.toString();","                break;","            case 3:","                // mac Desktop folder","                filePath = macDir.toPath();","                csvFile = filePath.toString();","                break;","            case 4:","                // custom Desktop folder","                csvFile = customDirStr;","                break;","        }","        ","        // Check if Workout folder on Desktop exists","        // If not, creates if","        String workoutDirStr = csvFile + \"/Workout/\";","        File workoutDir = new File(workoutDirStr);","        if(!workoutDir.exists()){","            new File(workoutDirStr).mkdirs();","        }","        ","        // Sets csvFile to path of full CSV file","        csvFile = workoutDirStr;","        return csvFile;","    }","    ","    /**","     * @param String","     * Checks if the given log exists","     * @return boolean","     */","    private static boolean checkLogExists(String csvFile){","        // Default if log doesn't exist","        boolean logExists = false;","        ","        //Creates File object with path of log","        File logFile = new File(csvFile);","        ","        //Checks if the log exists","        if(logFile.exists()){","            // Sets boolean to true: the file does exist","            logExists = true;","        }","        ","        return logExists;","    }","    ","    /**","     * @param String","     * Creates the given log file if it does not exist","     * @return void","     */","    private static void createLog(String csvFile) throws java.io.IOException{","        // Creates File object with path of log ","        File logFile = new File(csvFile);","        ","        // Creates an actual file based off of the File object","        logFile.createNewFile();","    }","    ","    /**","     * @param String","     * @param String","     * @param String","     * Adds user to the usrList CSV file","     * @return void","     */","    public static void addUser(String usrName, String pass, String csvFile){","        ","        // Reads CSV file into 2d array 'usrListArray'","        String[][] usrListArr = CSVUtils.readFile(csvFile);","        ","        // Encrypts password","        pass = Protected.encryptPass(pass);","        ","        // Creates ArrayList 'arrL' to hold CSV contents","        ArrayList<String> arrL = new ArrayList<String>();","        ","        // Convert 2d array 'usrListArray' to ArrayList 'arrL'","        for(int i =0; i < usrListArr.length; i++){","            for(int j = 0; j < usrListArr[i].length; j++){","                arrL.add(usrListArr[i][j]);","            }","        }","        ","        // Adds new user and pass to ArrayList 'arrL'","        arrL.add(usrName);","        arrL.add(pass);","        ","        // Writes new user list to CSV file","        FileWriter writer  = new FileWriter(csvFile);","        CSVUtils.writeLine(writer, arrL);","        ","        // Close writer","        writer.flush();","        writer.close();","    }","    ","    /**","     * @param Scanner","     * Calls the addUser method to add a user to the CSV file","     * @return void","     */","    private static void signUp(Scanner scan){","        String usrName = scan.nextLine();","        String passWord = scan.nextLine();","        String csvFile = sysCheckDir(scan) + \"usrList.CSV\";","        addUser(usrName, passWord, csvFile);","    }","    ","    ","    /**","     * @param String","     * Calls the system print method","     * @return void","     */","    private static void print(String print){","        System.out.print(print);","    }","    ","    /**","     * @param String","     * Calls the system println method","     * @return void","     */","    private static void println(String println){","        System.out.println(println);","    }"]},{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":3}},"text":"/**"},{"action":"insertText","range":{"start":{"row":0,"column":3},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":535,"column":0}},"lines":[" * This is a Java Program used to input Excersizes, Weights, Reps, and Sets"," *  ...into a workout log"," *  "," *  @caleberb"," *  v1.2.4"," */","// import statments","import java.io.*;","import java.io.File.*;","import java.nio.file.*;","import java.util.*;","import java.time.*;","import java.time.format.*;","","public class WorkoutLog {","    ","    /**","     * @param args","     * Initializes the constant variables used throughout the class","     * They are not changed by any part of the code","     * @return void","     */","    public static void main(String[] args) throws Exception {","        // Create scanner objects","        Scanner scan = new Scanner(System.in);","        Scanner intScan = new Scanner(System.in);","        ","        // Converts Object LocalDate to String in format MM-DD-YYYY","        LocalDate localDate = LocalDate.now();","        DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"MM-d-yyyy\");","        String date = localDate.format(formatter);","        ","        int logSign = 0;","        println(\"Please choose an option: \");","        println(\"1) Log in\");","        println(\"2) Sign up\");","        println(\"3) Quit\");","        ","        logSign = intScan.nextInt();","        switch(logSign){","            case 1:","                // Logs the user in","                logIn(scan, intScan, date, args);","                break;","            case 2:","                // Signs the user up","                signUp(scan);","                break;","            case 3:","                // Quits the program","                break;","            default:","                // Default option, gives error, calls recursively","                println(\"Error. Please enter a valid option.\");","                main(args);","                break;","        }","        ","    }","    ","    /**","     * @param Scanner","     * @param Scanner","     * @param String","     * @param String[]args","     * Acts as a log in screen for the user, passing them to the home method","     * @return void","     */","    private static void logIn(Scanner scan, Scanner intScan, String date, String[] args) throws Exception{","        String csvFile = sysCheckDir(scan) + \"usrList.CSV\";","        String passHash = \"\";","        ","        // Prompts user for their name","        print(\"Please input your username or \\'000\\' to quit: \");","        String uName = scan.nextLine();","        if(uName.equals(\"000\")){","            main(args);","        }","        ","        if(usrCheck(csvFile, uName)){","            passHash = passCheck(csvFile, uName);","        } else {","            println(\"Error. Username does not exist. Try logging in again.\");","            logIn(scan, intScan, date, args);","        }","        ","        print(\"Please input your password: \");","        String pWord = scan.nextLine();","        ","        String decryptedPass = Protected.decryptPass(passHash);","        ","        if(pWord.equals(decryptedPass)){","            // Enter main program ... not to be confused with main method","            home(scan, intScan, uName, date, args);","        } else {","            println(\"Error. Incorrect Password. Try logging in again.\");","            logIn(scan, intScan, date, args);","        }","        ","        ","        ","    }","    ","    /**","     * @param String","     * @param String","     * Checks if the inputted username exists in the user log","     * @return boolean","     */","    private static boolean usrCheck(String csvFile, String usrName) throws Exception{","        String[][] usrListArr = CSVUtils.readFile(csvFile);","        boolean usrExists = false;        ","        for(int i = 0; i < usrListArr.length; i++){","            if(usrListArr[i][0].equals(usrName)){","                usrExists = true;","            }","        }","        return usrExists;","    }","    ","    /**","     * @param String","     * @param String","     * Retrieves the passWord hash from the usrList CSV file","     * @return String","     */","    private static String passCheck(String csvFile, String usrName) throws Exception{","        String[][] usrListArr = CSVUtils.readFile(csvFile);","        String pass = \"\";        ","        for(int i = 0; i < usrListArr.length; i++){","            if(usrListArr[i][0].equals(usrName)){","                pass = usrListArr[i][1];","            }","        }","        return pass;","    }","    ","    /**","     * @param Scanner ","     * @param Scanner","     * @param String","     * @param String","     * @param String[]args","     * Acts as the main method, an calls itself recursively until user quits","     * @return void","     */","    private static void home(Scanner scan, Scanner intScan, String name, String todayDate, String[] args) throws Exception{","        // Prompts the user whether they want to open/write current or past log","        int usrOper = promptOper(intScan);","        ","        //Follows through with the users prompt","        switch(usrOper){","            case 1: ","                // Open today","                openLog(scan, name, todayDate);","                break;","            case 2: ","                // Write today","                writeLog(scan, intScan, name, todayDate);","                break;","            case 3: ","                // Open past with given date","                print(\"Input date in MM-DD-YYYY format: \");","                String openPastDate = scan.nextLine();","                openLog(scan, name, openPastDate);","                break;","            case 4: ","                // Write past with given date","                print(\"Input date in MM-DD-YYYY format: \");","                String writePastDate = scan.nextLine();","                writeLog(scan, intScan, name, writePastDate);","                break;","            case 5:","                main(args);","                break;","            case 6:","                signUp(scan);","                break;","            default: ","                break;","        }","        ","        //Returns home after program ends if user wishes","        println(\"\\nReturn home? (y/n): \");","        String returnHome = scan.nextLine();","        returnHome = returnHome.toLowerCase();","        switch(returnHome){","            case \"y\":","                home(scan, intScan, name, todayDate, args);","                break;","            case \"n\":","                break;","        }","        ","    }","    ","    /**","     * @param Scanner","     * Lists the availible functions and asks the user for input","     * @return int","     */","    private static int promptOper(Scanner intScan){","        //Prompts the user whether they want to open/write current or past log","        println(\"Please select an option\");","        println(\"1) Open today's log\");","        println(\"2) Write today's log\");","        println(\"3) Open a past day's log\");","        println(\"4) Write a past day's log\");","        println(\"5) Log out\");","        int usrOper = intScan.nextInt();","        int oper = 0;","        switch(usrOper){","            case 1:","                oper = 1;","                break;","            case 2:","                oper = 2;","                break;","            case 3:","                oper = 3;","                break;","            case 4:","                oper = 4;","                break;","            case 5:","                oper = 4;","                break;","            default:","                println(\"Error! Invalid Option. Please enter a valid option: \");","                usrOper = promptOper(intScan);","        }","        return usrOper;","    }","    ","    ","    /**","     * @param Scanner","     * @param String","     * @param String","     * Reads the file for today and prints it out on screen","     * @return void","     */","    private static void openLog (Scanner scan, String name, String date) throws java.io.IOException{","        // Locates appropriate file path and stores it in csvFile","        String csvFile = sysCheck(scan, name, date);","        ","        // Checks if the log file exists or not","        if(checkLogExists(csvFile)){","            // If log file exists, read the file","            String arr[][] = CSVUtils.readFile(csvFile);","            println(\"\");","            for(int i = 0; i < arr.length;i++){","                for(int j = 0; j < arr[i].length; j++){","                    if(j == arr[i].length - 1){","                        print(arr[i][j] + \"\");","                    } else {","                        print(arr[i][j] + \" : \");","                    }","                }","                println(\"\");","            }","        }","        ","        // Checks if the log file exists or not","        if(!checkLogExists(csvFile)){","            // If the log file does not exist, print error and end","            println(\"Sorry. There is no log for the given date and user.\");","        }","    }","    ","    /**","     * @param Scanner","     * @param Scanner","     * @param String","     * @param String","     * Asks the user for input and writes their data into today's log","     * @return void","     */","    private static void writeLog (Scanner scan, Scanner intScan, String name, String date) throws java.io.IOException{","        // Prompts user for number of exercises","        println(\"Please input the number of excerises you will be logging for the day: \");","        int numOfEx = intScan.nextInt();","        ","        // Creates CSV file and location based on operating system","        String csvFile = sysCheck(scan, name, date);","        ","        // Checks if the log file exists or not","        if(!checkLogExists(csvFile)){","            // Creates file if it did not exist previously","            createLog(csvFile);","        }","        ","        // Selects created file as file to write to","        FileWriter writer = new FileWriter(csvFile);","        ","        // Create and add headers to the CSV file","        ArrayList<String> headers = new ArrayList<String>();","        headers.add(\"Exercise\");","        headers.add(\"Weight\");","        headers.add(\"Reps\");","        headers.add(\"Sets\");","        CSVUtils.writeLine(writer, headers);","        ","        /*","         * Continuously asks user for input","         * Adds input to ArrayList \"input\"","         * Writes \"input\" to CSV","         * Clears \"input\"","         */","        ArrayList<String> input = new ArrayList<String>();","        for(int i = 0; i < numOfEx; i++){","            // Prompts for input","            println(\"\\n\");","            print(\"Exercise: \");","            String ex = scan.nextLine();","            print(\"Weight: \");","            String we = scan.nextLine();","            print(\"Reps: \");","            String re = scan.nextLine();","            print(\"Sets: \");","            String se = scan.nextLine();","            ","            // Adds input to ArrayList","            input.add(ex);","            input.add(we);","            input.add(re);","            input.add(se);","            ","            // Writes ArrayList to CSV file","            CSVUtils.writeLine(writer, input);","            input.remove(0);","            input.remove(0);","            input.remove(0);","            input.remove(0);","        }","        ","        // Close the file writer and ends method","        writer.flush();","        writer.close();","    }","    ","    /**","     * @param Scanner","     * @param String","     * @param String","     * Asks the user for what operating system they are using in order to ","     *    Establish which file navigation system to use.","     * @return String","     */","    private static String sysCheck(Scanner scan, String name, String date){","        String csvFile = sysCheckDir(scan);","        ","        // Sets csvFile to path of full CSV log file","        csvFile = name + \" - \" + date + \".csv\";","        return csvFile;","    }","    ","    /**","     * @param Scanner","     * Determines correct path to the 'Workout' directory on the user's desktop","     * @return String","     */","    private static String sysCheckDir(Scanner scan){","        // Reads the system for the computer user for file path purposes","        String sysUsrName = System.getProperty(\"user.name\");","        ","        // Initializes variables","        String csvFile = \"\";","        String customDirStr = \"\";","        int opCode = 0;","        ","        //Checks which file navigation system the user's computer uses","        File linuxDir = new File(\"/home/\" + sysUsrName + \"/Desktop/\");","        File windowsDir = new File(\"C:/Users/\" + sysUsrName + \"/Desktop/\");","        File macDir = new File(\"/Users/\" + sysUsrName + \"/Desktop/\");","        boolean linuxDirExists = linuxDir.exists();","        boolean windowsDirExists = windowsDir.exists();","        boolean macDirExists = macDir.exists();","        ","        // Sets opCode relational to which file navigation system the computer uses","        if(linuxDirExists){","            // Use linux file navigation system","            opCode = 1;","        } else if (windowsDirExists){","            // Use windows file navigation system","            opCode = 2;","        } else if (macDirExists){","            // Use mac file navigation system","            opCode = 3;","        } else {","            // Use custom file navigation system","            opCode = 4;","            println(\"Please input the full path to your desktop folder: \");","            customDirStr = scan.nextLine();","        }","        ","        // Sets the csvFile string to contain the path of the system Desktop folder","        switch(opCode){","            case 1: ","                // linux Desktop folder","                Path filePath = linuxDir.toPath();","                csvFile = filePath.toString();","                break;","            case 2:","                // window Desktop folder","                filePath = windowsDir.toPath();","                csvFile = filePath.toString();","                break;","            case 3:","                // mac Desktop folder","                filePath = macDir.toPath();","                csvFile = filePath.toString();","                break;","            case 4:","                // custom Desktop folder","                csvFile = customDirStr;","                break;","        }","        ","        // Check if Workout folder on Desktop exists","        // If not, creates if","        String workoutDirStr = csvFile + \"/Workout/\";","        File workoutDir = new File(workoutDirStr);","        if(!workoutDir.exists()){","            new File(workoutDirStr).mkdirs();","        }","        ","        // Sets csvFile to path of full CSV file","        csvFile = workoutDirStr;","        return csvFile;","    }","    ","    /**","     * @param String","     * Checks if the given log exists","     * @return boolean","     */","    private static boolean checkLogExists(String csvFile){","        // Default if log doesn't exist","        boolean logExists = false;","        ","        //Creates File object with path of log","        File logFile = new File(csvFile);","        ","        //Checks if the log exists","        if(logFile.exists()){","            // Sets boolean to true: the file does exist","            logExists = true;","        }","        ","        return logExists;","    }","    ","    /**","     * @param String","     * Creates the given log file if it does not exist","     * @return void","     */","    private static void createLog(String csvFile) throws java.io.IOException{","        // Creates File object with path of log ","        File logFile = new File(csvFile);","        ","        // Creates an actual file based off of the File object","        logFile.createNewFile();","    }","    ","    /**","     * @param String","     * @param String","     * @param String","     * Adds user to the usrList CSV file","     * @return void","     */","    public static void addUser(String usrName, String pass, String csvFile) throws Exception{","        ","        // Reads CSV file into 2d array 'usrListArray'","        String[][] usrListArr = CSVUtils.readFile(csvFile);","        ","        // Encrypts password","        pass = Protected.encryptPass(pass);","        ","        // Creates ArrayList 'arrL' to hold CSV contents","        ArrayList<String> arrL = new ArrayList<String>();","        ","        // Convert 2d array 'usrListArray' to ArrayList 'arrL'","        for(int i =0; i < usrListArr.length; i++){","            for(int j = 0; j < usrListArr[i].length; j++){","                arrL.add(usrListArr[i][j]);","            }","        }","        ","        // Adds new user and pass to ArrayList 'arrL'","        arrL.add(usrName);","        arrL.add(pass);","        ","        // Writes new user list to CSV file","        FileWriter writer  = new FileWriter(csvFile);","        CSVUtils.writeLine(writer, arrL);","        ","        // Close writer","        writer.flush();","        writer.close();","    }","    ","    /**","     * @param Scanner","     * Calls the addUser method to add a user to the CSV file","     * @return void","     */","    private static void signUp(Scanner scan){","        String usrName = scan.nextLine();","        String passWord = scan.nextLine();","        String csvFile = sysCheckDir(scan) + \"usrList.CSV\";","        addUser(usrName, passWord, csvFile);","    }","    ","    ","    /**","     * @param String","     * Calls the system print method","     * @return void","     */","    private static void print(String print){","        System.out.print(print);","    }","    ","    /**","     * @param String","     * Calls the system println method","     * @return void","     */","    private static void println(String println){","        System.out.println(println);","    }"]},{"action":"insertText","range":{"start":{"row":535,"column":0},"end":{"row":535,"column":1}},"text":"}"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":535,"column":0},"end":{"row":535,"column":1}},"text":"}"},{"action":"removeLines","range":{"start":{"row":0,"column":0},"end":{"row":535,"column":0}},"nl":"\n","lines":["/**"," * This is a Java Program used to input Excersizes, Weights, Reps, and Sets"," *  ...into a workout log"," *  "," *  @caleberb"," *  v1.2.4"," */","// import statments","import java.io.*;","import java.io.File.*;","import java.nio.file.*;","import java.util.*;","import java.time.*;","import java.time.format.*;","","public class WorkoutLog {","    ","    /**","     * @param args","     * Initializes the constant variables used throughout the class","     * They are not changed by any part of the code","     * @return void","     */","    public static void main(String[] args) throws Exception {","        // Create scanner objects","        Scanner scan = new Scanner(System.in);","        Scanner intScan = new Scanner(System.in);","        ","        // Converts Object LocalDate to String in format MM-DD-YYYY","        LocalDate localDate = LocalDate.now();","        DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"MM-d-yyyy\");","        String date = localDate.format(formatter);","        ","        int logSign = 0;","        println(\"Please choose an option: \");","        println(\"1) Log in\");","        println(\"2) Sign up\");","        println(\"3) Quit\");","        ","        logSign = intScan.nextInt();","        switch(logSign){","            case 1:","                // Logs the user in","                logIn(scan, intScan, date, args);","                break;","            case 2:","                // Signs the user up","                signUp(scan);","                break;","            case 3:","                // Quits the program","                break;","            default:","                // Default option, gives error, calls recursively","                println(\"Error. Please enter a valid option.\");","                main(args);","                break;","        }","        ","    }","    ","    /**","     * @param Scanner","     * @param Scanner","     * @param String","     * @param String[]args","     * Acts as a log in screen for the user, passing them to the home method","     * @return void","     */","    private static void logIn(Scanner scan, Scanner intScan, String date, String[] args) throws Exception{","        String csvFile = sysCheckDir(scan) + \"usrList.CSV\";","        String passHash = \"\";","        ","        // Prompts user for their name","        print(\"Please input your username or \\'000\\' to quit: \");","        String uName = scan.nextLine();","        if(uName.equals(\"000\")){","            main(args);","        }","        ","        if(usrCheck(csvFile, uName)){","            passHash = passCheck(csvFile, uName);","        } else {","            println(\"Error. Username does not exist. Try logging in again.\");","            logIn(scan, intScan, date, args);","        }","        ","        print(\"Please input your password: \");","        String pWord = scan.nextLine();","        ","        String decryptedPass = Protected.decryptPass(passHash);","        ","        if(pWord.equals(decryptedPass)){","            // Enter main program ... not to be confused with main method","            home(scan, intScan, uName, date, args);","        } else {","            println(\"Error. Incorrect Password. Try logging in again.\");","            logIn(scan, intScan, date, args);","        }","        ","        ","        ","    }","    ","    /**","     * @param String","     * @param String","     * Checks if the inputted username exists in the user log","     * @return boolean","     */","    private static boolean usrCheck(String csvFile, String usrName) throws Exception{","        String[][] usrListArr = CSVUtils.readFile(csvFile);","        boolean usrExists = false;        ","        for(int i = 0; i < usrListArr.length; i++){","            if(usrListArr[i][0].equals(usrName)){","                usrExists = true;","            }","        }","        return usrExists;","    }","    ","    /**","     * @param String","     * @param String","     * Retrieves the passWord hash from the usrList CSV file","     * @return String","     */","    private static String passCheck(String csvFile, String usrName) throws Exception{","        String[][] usrListArr = CSVUtils.readFile(csvFile);","        String pass = \"\";        ","        for(int i = 0; i < usrListArr.length; i++){","            if(usrListArr[i][0].equals(usrName)){","                pass = usrListArr[i][1];","            }","        }","        return pass;","    }","    ","    /**","     * @param Scanner ","     * @param Scanner","     * @param String","     * @param String","     * @param String[]args","     * Acts as the main method, an calls itself recursively until user quits","     * @return void","     */","    private static void home(Scanner scan, Scanner intScan, String name, String todayDate, String[] args) throws Exception{","        // Prompts the user whether they want to open/write current or past log","        int usrOper = promptOper(intScan);","        ","        //Follows through with the users prompt","        switch(usrOper){","            case 1: ","                // Open today","                openLog(scan, name, todayDate);","                break;","            case 2: ","                // Write today","                writeLog(scan, intScan, name, todayDate);","                break;","            case 3: ","                // Open past with given date","                print(\"Input date in MM-DD-YYYY format: \");","                String openPastDate = scan.nextLine();","                openLog(scan, name, openPastDate);","                break;","            case 4: ","                // Write past with given date","                print(\"Input date in MM-DD-YYYY format: \");","                String writePastDate = scan.nextLine();","                writeLog(scan, intScan, name, writePastDate);","                break;","            case 5:","                main(args);","                break;","            case 6:","                signUp(scan);","                break;","            default: ","                break;","        }","        ","        //Returns home after program ends if user wishes","        println(\"\\nReturn home? (y/n): \");","        String returnHome = scan.nextLine();","        returnHome = returnHome.toLowerCase();","        switch(returnHome){","            case \"y\":","                home(scan, intScan, name, todayDate, args);","                break;","            case \"n\":","                break;","        }","        ","    }","    ","    /**","     * @param Scanner","     * Lists the availible functions and asks the user for input","     * @return int","     */","    private static int promptOper(Scanner intScan){","        //Prompts the user whether they want to open/write current or past log","        println(\"Please select an option\");","        println(\"1) Open today's log\");","        println(\"2) Write today's log\");","        println(\"3) Open a past day's log\");","        println(\"4) Write a past day's log\");","        println(\"5) Log out\");","        int usrOper = intScan.nextInt();","        int oper = 0;","        switch(usrOper){","            case 1:","                oper = 1;","                break;","            case 2:","                oper = 2;","                break;","            case 3:","                oper = 3;","                break;","            case 4:","                oper = 4;","                break;","            case 5:","                oper = 4;","                break;","            default:","                println(\"Error! Invalid Option. Please enter a valid option: \");","                usrOper = promptOper(intScan);","        }","        return usrOper;","    }","    ","    ","    /**","     * @param Scanner","     * @param String","     * @param String","     * Reads the file for today and prints it out on screen","     * @return void","     */","    private static void openLog (Scanner scan, String name, String date) throws java.io.IOException{","        // Locates appropriate file path and stores it in csvFile","        String csvFile = sysCheck(scan, name, date);","        ","        // Checks if the log file exists or not","        if(checkLogExists(csvFile)){","            // If log file exists, read the file","            String arr[][] = CSVUtils.readFile(csvFile);","            println(\"\");","            for(int i = 0; i < arr.length;i++){","                for(int j = 0; j < arr[i].length; j++){","                    if(j == arr[i].length - 1){","                        print(arr[i][j] + \"\");","                    } else {","                        print(arr[i][j] + \" : \");","                    }","                }","                println(\"\");","            }","        }","        ","        // Checks if the log file exists or not","        if(!checkLogExists(csvFile)){","            // If the log file does not exist, print error and end","            println(\"Sorry. There is no log for the given date and user.\");","        }","    }","    ","    /**","     * @param Scanner","     * @param Scanner","     * @param String","     * @param String","     * Asks the user for input and writes their data into today's log","     * @return void","     */","    private static void writeLog (Scanner scan, Scanner intScan, String name, String date) throws java.io.IOException{","        // Prompts user for number of exercises","        println(\"Please input the number of excerises you will be logging for the day: \");","        int numOfEx = intScan.nextInt();","        ","        // Creates CSV file and location based on operating system","        String csvFile = sysCheck(scan, name, date);","        ","        // Checks if the log file exists or not","        if(!checkLogExists(csvFile)){","            // Creates file if it did not exist previously","            createLog(csvFile);","        }","        ","        // Selects created file as file to write to","        FileWriter writer = new FileWriter(csvFile);","        ","        // Create and add headers to the CSV file","        ArrayList<String> headers = new ArrayList<String>();","        headers.add(\"Exercise\");","        headers.add(\"Weight\");","        headers.add(\"Reps\");","        headers.add(\"Sets\");","        CSVUtils.writeLine(writer, headers);","        ","        /*","         * Continuously asks user for input","         * Adds input to ArrayList \"input\"","         * Writes \"input\" to CSV","         * Clears \"input\"","         */","        ArrayList<String> input = new ArrayList<String>();","        for(int i = 0; i < numOfEx; i++){","            // Prompts for input","            println(\"\\n\");","            print(\"Exercise: \");","            String ex = scan.nextLine();","            print(\"Weight: \");","            String we = scan.nextLine();","            print(\"Reps: \");","            String re = scan.nextLine();","            print(\"Sets: \");","            String se = scan.nextLine();","            ","            // Adds input to ArrayList","            input.add(ex);","            input.add(we);","            input.add(re);","            input.add(se);","            ","            // Writes ArrayList to CSV file","            CSVUtils.writeLine(writer, input);","            input.remove(0);","            input.remove(0);","            input.remove(0);","            input.remove(0);","        }","        ","        // Close the file writer and ends method","        writer.flush();","        writer.close();","    }","    ","    /**","     * @param Scanner","     * @param String","     * @param String","     * Asks the user for what operating system they are using in order to ","     *    Establish which file navigation system to use.","     * @return String","     */","    private static String sysCheck(Scanner scan, String name, String date){","        String csvFile = sysCheckDir(scan);","        ","        // Sets csvFile to path of full CSV log file","        csvFile = name + \" - \" + date + \".csv\";","        return csvFile;","    }","    ","    /**","     * @param Scanner","     * Determines correct path to the 'Workout' directory on the user's desktop","     * @return String","     */","    private static String sysCheckDir(Scanner scan){","        // Reads the system for the computer user for file path purposes","        String sysUsrName = System.getProperty(\"user.name\");","        ","        // Initializes variables","        String csvFile = \"\";","        String customDirStr = \"\";","        int opCode = 0;","        ","        //Checks which file navigation system the user's computer uses","        File linuxDir = new File(\"/home/\" + sysUsrName + \"/Desktop/\");","        File windowsDir = new File(\"C:/Users/\" + sysUsrName + \"/Desktop/\");","        File macDir = new File(\"/Users/\" + sysUsrName + \"/Desktop/\");","        boolean linuxDirExists = linuxDir.exists();","        boolean windowsDirExists = windowsDir.exists();","        boolean macDirExists = macDir.exists();","        ","        // Sets opCode relational to which file navigation system the computer uses","        if(linuxDirExists){","            // Use linux file navigation system","            opCode = 1;","        } else if (windowsDirExists){","            // Use windows file navigation system","            opCode = 2;","        } else if (macDirExists){","            // Use mac file navigation system","            opCode = 3;","        } else {","            // Use custom file navigation system","            opCode = 4;","            println(\"Please input the full path to your desktop folder: \");","            customDirStr = scan.nextLine();","        }","        ","        // Sets the csvFile string to contain the path of the system Desktop folder","        switch(opCode){","            case 1: ","                // linux Desktop folder","                Path filePath = linuxDir.toPath();","                csvFile = filePath.toString();","                break;","            case 2:","                // window Desktop folder","                filePath = windowsDir.toPath();","                csvFile = filePath.toString();","                break;","            case 3:","                // mac Desktop folder","                filePath = macDir.toPath();","                csvFile = filePath.toString();","                break;","            case 4:","                // custom Desktop folder","                csvFile = customDirStr;","                break;","        }","        ","        // Check if Workout folder on Desktop exists","        // If not, creates if","        String workoutDirStr = csvFile + \"/Workout/\";","        File workoutDir = new File(workoutDirStr);","        if(!workoutDir.exists()){","            new File(workoutDirStr).mkdirs();","        }","        ","        // Sets csvFile to path of full CSV file","        csvFile = workoutDirStr;","        return csvFile;","    }","    ","    /**","     * @param String","     * Checks if the given log exists","     * @return boolean","     */","    private static boolean checkLogExists(String csvFile){","        // Default if log doesn't exist","        boolean logExists = false;","        ","        //Creates File object with path of log","        File logFile = new File(csvFile);","        ","        //Checks if the log exists","        if(logFile.exists()){","            // Sets boolean to true: the file does exist","            logExists = true;","        }","        ","        return logExists;","    }","    ","    /**","     * @param String","     * Creates the given log file if it does not exist","     * @return void","     */","    private static void createLog(String csvFile) throws java.io.IOException{","        // Creates File object with path of log ","        File logFile = new File(csvFile);","        ","        // Creates an actual file based off of the File object","        logFile.createNewFile();","    }","    ","    /**","     * @param String","     * @param String","     * @param String","     * Adds user to the usrList CSV file","     * @return void","     */","    public static void addUser(String usrName, String pass, String csvFile) throws Exception{","        ","        // Reads CSV file into 2d array 'usrListArray'","        String[][] usrListArr = CSVUtils.readFile(csvFile);","        ","        // Encrypts password","        pass = Protected.encryptPass(pass);","        ","        // Creates ArrayList 'arrL' to hold CSV contents","        ArrayList<String> arrL = new ArrayList<String>();","        ","        // Convert 2d array 'usrListArray' to ArrayList 'arrL'","        for(int i =0; i < usrListArr.length; i++){","            for(int j = 0; j < usrListArr[i].length; j++){","                arrL.add(usrListArr[i][j]);","            }","        }","        ","        // Adds new user and pass to ArrayList 'arrL'","        arrL.add(usrName);","        arrL.add(pass);","        ","        // Writes new user list to CSV file","        FileWriter writer  = new FileWriter(csvFile);","        CSVUtils.writeLine(writer, arrL);","        ","        // Close writer","        writer.flush();","        writer.close();","    }","    ","    /**","     * @param Scanner","     * Calls the addUser method to add a user to the CSV file","     * @return void","     */","    private static void signUp(Scanner scan){","        String usrName = scan.nextLine();","        String passWord = scan.nextLine();","        String csvFile = sysCheckDir(scan) + \"usrList.CSV\";","        addUser(usrName, passWord, csvFile);","    }","    ","    ","    /**","     * @param String","     * Calls the system print method","     * @return void","     */","    private static void print(String print){","        System.out.print(print);","    }","    ","    /**","     * @param String","     * Calls the system println method","     * @return void","     */","    private static void println(String println){","        System.out.println(println);","    }"]},{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":3}},"text":"/**"},{"action":"insertText","range":{"start":{"row":0,"column":3},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":535,"column":0}},"lines":[" * This is a Java Program used to input Excersizes, Weights, Reps, and Sets"," *  ...into a workout log"," *  "," *  @caleberb"," *  v1.2.4"," */","// import statments","import java.io.*;","import java.io.File.*;","import java.nio.file.*;","import java.util.*;","import java.time.*;","import java.time.format.*;","","public class WorkoutLog {","    ","    /**","     * @param args","     * Initializes the constant variables used throughout the class","     * They are not changed by any part of the code","     * @return void","     */","    public static void main(String[] args) throws Exception {","        // Create scanner objects","        Scanner scan = new Scanner(System.in);","        Scanner intScan = new Scanner(System.in);","        ","        // Converts Object LocalDate to String in format MM-DD-YYYY","        LocalDate localDate = LocalDate.now();","        DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"MM-d-yyyy\");","        String date = localDate.format(formatter);","        ","        int logSign = 0;","        println(\"Please choose an option: \");","        println(\"1) Log in\");","        println(\"2) Sign up\");","        println(\"3) Quit\");","        ","        logSign = intScan.nextInt();","        switch(logSign){","            case 1:","                // Logs the user in","                logIn(scan, intScan, date, args);","                break;","            case 2:","                // Signs the user up","                signUp(scan);","                break;","            case 3:","                // Quits the program","                break;","            default:","                // Default option, gives error, calls recursively","                println(\"Error. Please enter a valid option.\");","                main(args);","                break;","        }","        ","    }","    ","    /**","     * @param Scanner","     * @param Scanner","     * @param String","     * @param String[]args","     * Acts as a log in screen for the user, passing them to the home method","     * @return void","     */","    private static void logIn(Scanner scan, Scanner intScan, String date, String[] args) throws Exception{","        String csvFile = sysCheckDir(scan) + \"usrList.CSV\";","        String passHash = \"\";","        ","        // Prompts user for their name","        print(\"Please input your username or \\'000\\' to quit: \");","        String uName = scan.nextLine();","        if(uName.equals(\"000\")){","            main(args);","        }","        ","        if(usrCheck(csvFile, uName)){","            passHash = passCheck(csvFile, uName);","        } else {","            println(\"Error. Username does not exist. Try logging in again.\");","            logIn(scan, intScan, date, args);","        }","        ","        print(\"Please input your password: \");","        String pWord = scan.nextLine();","        ","        String decryptedPass = Protected.decryptPass(passHash);","        ","        if(pWord.equals(decryptedPass)){","            // Enter main program ... not to be confused with main method","            home(scan, intScan, uName, date, args);","        } else {","            println(\"Error. Incorrect Password. Try logging in again.\");","            logIn(scan, intScan, date, args);","        }","        ","        ","        ","    }","    ","    /**","     * @param String","     * @param String","     * Checks if the inputted username exists in the user log","     * @return boolean","     */","    private static boolean usrCheck(String csvFile, String usrName) throws Exception{","        String[][] usrListArr = CSVUtils.readFile(csvFile);","        boolean usrExists = false;        ","        for(int i = 0; i < usrListArr.length; i++){","            if(usrListArr[i][0].equals(usrName)){","                usrExists = true;","            }","        }","        return usrExists;","    }","    ","    /**","     * @param String","     * @param String","     * Retrieves the passWord hash from the usrList CSV file","     * @return String","     */","    private static String passCheck(String csvFile, String usrName) throws Exception{","        String[][] usrListArr = CSVUtils.readFile(csvFile);","        String pass = \"\";        ","        for(int i = 0; i < usrListArr.length; i++){","            if(usrListArr[i][0].equals(usrName)){","                pass = usrListArr[i][1];","            }","        }","        return pass;","    }","    ","    /**","     * @param Scanner ","     * @param Scanner","     * @param String","     * @param String","     * @param String[]args","     * Acts as the main method, an calls itself recursively until user quits","     * @return void","     */","    private static void home(Scanner scan, Scanner intScan, String name, String todayDate, String[] args) throws Exception{","        // Prompts the user whether they want to open/write current or past log","        int usrOper = promptOper(intScan);","        ","        //Follows through with the users prompt","        switch(usrOper){","            case 1: ","                // Open today","                openLog(scan, name, todayDate);","                break;","            case 2: ","                // Write today","                writeLog(scan, intScan, name, todayDate);","                break;","            case 3: ","                // Open past with given date","                print(\"Input date in MM-DD-YYYY format: \");","                String openPastDate = scan.nextLine();","                openLog(scan, name, openPastDate);","                break;","            case 4: ","                // Write past with given date","                print(\"Input date in MM-DD-YYYY format: \");","                String writePastDate = scan.nextLine();","                writeLog(scan, intScan, name, writePastDate);","                break;","            case 5:","                main(args);","                break;","            case 6:","                signUp(scan);","                break;","            default: ","                break;","        }","        ","        //Returns home after program ends if user wishes","        println(\"\\nReturn home? (y/n): \");","        String returnHome = scan.nextLine();","        returnHome = returnHome.toLowerCase();","        switch(returnHome){","            case \"y\":","                home(scan, intScan, name, todayDate, args);","                break;","            case \"n\":","                break;","        }","        ","    }","    ","    /**","     * @param Scanner","     * Lists the availible functions and asks the user for input","     * @return int","     */","    private static int promptOper(Scanner intScan){","        //Prompts the user whether they want to open/write current or past log","        println(\"Please select an option\");","        println(\"1) Open today's log\");","        println(\"2) Write today's log\");","        println(\"3) Open a past day's log\");","        println(\"4) Write a past day's log\");","        println(\"5) Log out\");","        int usrOper = intScan.nextInt();","        int oper = 0;","        switch(usrOper){","            case 1:","                oper = 1;","                break;","            case 2:","                oper = 2;","                break;","            case 3:","                oper = 3;","                break;","            case 4:","                oper = 4;","                break;","            case 5:","                oper = 4;","                break;","            default:","                println(\"Error! Invalid Option. Please enter a valid option: \");","                usrOper = promptOper(intScan);","        }","        return usrOper;","    }","    ","    ","    /**","     * @param Scanner","     * @param String","     * @param String","     * Reads the file for today and prints it out on screen","     * @return void","     */","    private static void openLog (Scanner scan, String name, String date) throws java.io.IOException{","        // Locates appropriate file path and stores it in csvFile","        String csvFile = sysCheck(scan, name, date);","        ","        // Checks if the log file exists or not","        if(checkLogExists(csvFile)){","            // If log file exists, read the file","            String arr[][] = CSVUtils.readFile(csvFile);","            println(\"\");","            for(int i = 0; i < arr.length;i++){","                for(int j = 0; j < arr[i].length; j++){","                    if(j == arr[i].length - 1){","                        print(arr[i][j] + \"\");","                    } else {","                        print(arr[i][j] + \" : \");","                    }","                }","                println(\"\");","            }","        }","        ","        // Checks if the log file exists or not","        if(!checkLogExists(csvFile)){","            // If the log file does not exist, print error and end","            println(\"Sorry. There is no log for the given date and user.\");","        }","    }","    ","    /**","     * @param Scanner","     * @param Scanner","     * @param String","     * @param String","     * Asks the user for input and writes their data into today's log","     * @return void","     */","    private static void writeLog (Scanner scan, Scanner intScan, String name, String date) throws java.io.IOException{","        // Prompts user for number of exercises","        println(\"Please input the number of excerises you will be logging for the day: \");","        int numOfEx = intScan.nextInt();","        ","        // Creates CSV file and location based on operating system","        String csvFile = sysCheck(scan, name, date);","        ","        // Checks if the log file exists or not","        if(!checkLogExists(csvFile)){","            // Creates file if it did not exist previously","            createLog(csvFile);","        }","        ","        // Selects created file as file to write to","        FileWriter writer = new FileWriter(csvFile);","        ","        // Create and add headers to the CSV file","        ArrayList<String> headers = new ArrayList<String>();","        headers.add(\"Exercise\");","        headers.add(\"Weight\");","        headers.add(\"Reps\");","        headers.add(\"Sets\");","        CSVUtils.writeLine(writer, headers);","        ","        /*","         * Continuously asks user for input","         * Adds input to ArrayList \"input\"","         * Writes \"input\" to CSV","         * Clears \"input\"","         */","        ArrayList<String> input = new ArrayList<String>();","        for(int i = 0; i < numOfEx; i++){","            // Prompts for input","            println(\"\\n\");","            print(\"Exercise: \");","            String ex = scan.nextLine();","            print(\"Weight: \");","            String we = scan.nextLine();","            print(\"Reps: \");","            String re = scan.nextLine();","            print(\"Sets: \");","            String se = scan.nextLine();","            ","            // Adds input to ArrayList","            input.add(ex);","            input.add(we);","            input.add(re);","            input.add(se);","            ","            // Writes ArrayList to CSV file","            CSVUtils.writeLine(writer, input);","            input.remove(0);","            input.remove(0);","            input.remove(0);","            input.remove(0);","        }","        ","        // Close the file writer and ends method","        writer.flush();","        writer.close();","    }","    ","    /**","     * @param Scanner","     * @param String","     * @param String","     * Asks the user for what operating system they are using in order to ","     *    Establish which file navigation system to use.","     * @return String","     */","    private static String sysCheck(Scanner scan, String name, String date){","        String csvFile = sysCheckDir(scan);","        ","        // Sets csvFile to path of full CSV log file","        csvFile = name + \" - \" + date + \".csv\";","        return csvFile;","    }","    ","    /**","     * @param Scanner","     * Determines correct path to the 'Workout' directory on the user's desktop","     * @return String","     */","    private static String sysCheckDir(Scanner scan){","        // Reads the system for the computer user for file path purposes","        String sysUsrName = System.getProperty(\"user.name\");","        ","        // Initializes variables","        String csvFile = \"\";","        String customDirStr = \"\";","        int opCode = 0;","        ","        //Checks which file navigation system the user's computer uses","        File linuxDir = new File(\"/home/\" + sysUsrName + \"/Desktop/\");","        File windowsDir = new File(\"C:/Users/\" + sysUsrName + \"/Desktop/\");","        File macDir = new File(\"/Users/\" + sysUsrName + \"/Desktop/\");","        boolean linuxDirExists = linuxDir.exists();","        boolean windowsDirExists = windowsDir.exists();","        boolean macDirExists = macDir.exists();","        ","        // Sets opCode relational to which file navigation system the computer uses","        if(linuxDirExists){","            // Use linux file navigation system","            opCode = 1;","        } else if (windowsDirExists){","            // Use windows file navigation system","            opCode = 2;","        } else if (macDirExists){","            // Use mac file navigation system","            opCode = 3;","        } else {","            // Use custom file navigation system","            opCode = 4;","            println(\"Please input the full path to your desktop folder: \");","            customDirStr = scan.nextLine();","        }","        ","        // Sets the csvFile string to contain the path of the system Desktop folder","        switch(opCode){","            case 1: ","                // linux Desktop folder","                Path filePath = linuxDir.toPath();","                csvFile = filePath.toString();","                break;","            case 2:","                // window Desktop folder","                filePath = windowsDir.toPath();","                csvFile = filePath.toString();","                break;","            case 3:","                // mac Desktop folder","                filePath = macDir.toPath();","                csvFile = filePath.toString();","                break;","            case 4:","                // custom Desktop folder","                csvFile = customDirStr;","                break;","        }","        ","        // Check if Workout folder on Desktop exists","        // If not, creates if","        String workoutDirStr = csvFile + \"/Workout/\";","        File workoutDir = new File(workoutDirStr);","        if(!workoutDir.exists()){","            new File(workoutDirStr).mkdirs();","        }","        ","        // Sets csvFile to path of full CSV file","        csvFile = workoutDirStr;","        return csvFile;","    }","    ","    /**","     * @param String","     * Checks if the given log exists","     * @return boolean","     */","    private static boolean checkLogExists(String csvFile){","        // Default if log doesn't exist","        boolean logExists = false;","        ","        //Creates File object with path of log","        File logFile = new File(csvFile);","        ","        //Checks if the log exists","        if(logFile.exists()){","            // Sets boolean to true: the file does exist","            logExists = true;","        }","        ","        return logExists;","    }","    ","    /**","     * @param String","     * Creates the given log file if it does not exist","     * @return void","     */","    private static void createLog(String csvFile) throws java.io.IOException{","        // Creates File object with path of log ","        File logFile = new File(csvFile);","        ","        // Creates an actual file based off of the File object","        logFile.createNewFile();","    }","    ","    /**","     * @param String","     * @param String","     * @param String","     * Adds user to the usrList CSV file","     * @return void","     */","    public static void addUser(String usrName, String pass, String csvFile) throws Exception{","        ","        // Reads CSV file into 2d array 'usrListArray'","        String[][] usrListArr = CSVUtils.readFile(csvFile);","        ","        // Encrypts password","        pass = Protected.encryptPass(pass);","        ","        // Creates ArrayList 'arrL' to hold CSV contents","        ArrayList<String> arrL = new ArrayList<String>();","        ","        // Convert 2d array 'usrListArray' to ArrayList 'arrL'","        for(int i =0; i < usrListArr.length; i++){","            for(int j = 0; j < usrListArr[i].length; j++){","                arrL.add(usrListArr[i][j]);","            }","        }","        ","        // Adds new user and pass to ArrayList 'arrL'","        arrL.add(usrName);","        arrL.add(pass);","        ","        // Writes new user list to CSV file","        FileWriter writer  = new FileWriter(csvFile);","        CSVUtils.writeLine(writer, arrL);","        ","        // Close writer","        writer.flush();","        writer.close();","    }","    ","    /**","     * @param Scanner","     * Calls the addUser method to add a user to the CSV file","     * @return void","     */","    private static void signUp(Scanner scan) throws Exception{","        String usrName = scan.nextLine();","        String passWord = scan.nextLine();","        String csvFile = sysCheckDir(scan) + \"usrList.CSV\";","        addUser(usrName, passWord, csvFile);","    }","    ","    ","    /**","     * @param String","     * Calls the system print method","     * @return void","     */","    private static void print(String print){","        System.out.print(print);","    }","    ","    /**","     * @param String","     * Calls the system println method","     * @return void","     */","    private static void println(String println){","        System.out.println(println);","    }"]},{"action":"insertText","range":{"start":{"row":535,"column":0},"end":{"row":535,"column":1}},"text":"}"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":535,"column":0},"end":{"row":535,"column":1}},"text":"}"},{"action":"removeLines","range":{"start":{"row":0,"column":0},"end":{"row":535,"column":0}},"nl":"\n","lines":["/**"," * This is a Java Program used to input Excersizes, Weights, Reps, and Sets"," *  ...into a workout log"," *  "," *  @caleberb"," *  v1.2.4"," */","// import statments","import java.io.*;","import java.io.File.*;","import java.nio.file.*;","import java.util.*;","import java.time.*;","import java.time.format.*;","","public class WorkoutLog {","    ","    /**","     * @param args","     * Initializes the constant variables used throughout the class","     * They are not changed by any part of the code","     * @return void","     */","    public static void main(String[] args) throws Exception {","        // Create scanner objects","        Scanner scan = new Scanner(System.in);","        Scanner intScan = new Scanner(System.in);","        ","        // Converts Object LocalDate to String in format MM-DD-YYYY","        LocalDate localDate = LocalDate.now();","        DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"MM-d-yyyy\");","        String date = localDate.format(formatter);","        ","        int logSign = 0;","        println(\"Please choose an option: \");","        println(\"1) Log in\");","        println(\"2) Sign up\");","        println(\"3) Quit\");","        ","        logSign = intScan.nextInt();","        switch(logSign){","            case 1:","                // Logs the user in","                logIn(scan, intScan, date, args);","                break;","            case 2:","                // Signs the user up","                signUp(scan);","                break;","            case 3:","                // Quits the program","                break;","            default:","                // Default option, gives error, calls recursively","                println(\"Error. Please enter a valid option.\");","                main(args);","                break;","        }","        ","    }","    ","    /**","     * @param Scanner","     * @param Scanner","     * @param String","     * @param String[]args","     * Acts as a log in screen for the user, passing them to the home method","     * @return void","     */","    private static void logIn(Scanner scan, Scanner intScan, String date, String[] args) throws Exception{","        String csvFile = sysCheckDir(scan) + \"usrList.CSV\";","        String passHash = \"\";","        ","        // Prompts user for their name","        print(\"Please input your username or \\'000\\' to quit: \");","        String uName = scan.nextLine();","        if(uName.equals(\"000\")){","            main(args);","        }","        ","        if(usrCheck(csvFile, uName)){","            passHash = passCheck(csvFile, uName);","        } else {","            println(\"Error. Username does not exist. Try logging in again.\");","            logIn(scan, intScan, date, args);","        }","        ","        print(\"Please input your password: \");","        String pWord = scan.nextLine();","        ","        String decryptedPass = Protected.decryptPass(passHash);","        ","        if(pWord.equals(decryptedPass)){","            // Enter main program ... not to be confused with main method","            home(scan, intScan, uName, date, args);","        } else {","            println(\"Error. Incorrect Password. Try logging in again.\");","            logIn(scan, intScan, date, args);","        }","        ","        ","        ","    }","    ","    /**","     * @param String","     * @param String","     * Checks if the inputted username exists in the user log","     * @return boolean","     */","    private static boolean usrCheck(String csvFile, String usrName) throws Exception{","        String[][] usrListArr = CSVUtils.readFile(csvFile);","        boolean usrExists = false;        ","        for(int i = 0; i < usrListArr.length; i++){","            if(usrListArr[i][0].equals(usrName)){","                usrExists = true;","            }","        }","        return usrExists;","    }","    ","    /**","     * @param String","     * @param String","     * Retrieves the passWord hash from the usrList CSV file","     * @return String","     */","    private static String passCheck(String csvFile, String usrName) throws Exception{","        String[][] usrListArr = CSVUtils.readFile(csvFile);","        String pass = \"\";        ","        for(int i = 0; i < usrListArr.length; i++){","            if(usrListArr[i][0].equals(usrName)){","                pass = usrListArr[i][1];","            }","        }","        return pass;","    }","    ","    /**","     * @param Scanner ","     * @param Scanner","     * @param String","     * @param String","     * @param String[]args","     * Acts as the main method, an calls itself recursively until user quits","     * @return void","     */","    private static void home(Scanner scan, Scanner intScan, String name, String todayDate, String[] args) throws Exception{","        // Prompts the user whether they want to open/write current or past log","        int usrOper = promptOper(intScan);","        ","        //Follows through with the users prompt","        switch(usrOper){","            case 1: ","                // Open today","                openLog(scan, name, todayDate);","                break;","            case 2: ","                // Write today","                writeLog(scan, intScan, name, todayDate);","                break;","            case 3: ","                // Open past with given date","                print(\"Input date in MM-DD-YYYY format: \");","                String openPastDate = scan.nextLine();","                openLog(scan, name, openPastDate);","                break;","            case 4: ","                // Write past with given date","                print(\"Input date in MM-DD-YYYY format: \");","                String writePastDate = scan.nextLine();","                writeLog(scan, intScan, name, writePastDate);","                break;","            case 5:","                main(args);","                break;","            case 6:","                signUp(scan);","                break;","            default: ","                break;","        }","        ","        //Returns home after program ends if user wishes","        println(\"\\nReturn home? (y/n): \");","        String returnHome = scan.nextLine();","        returnHome = returnHome.toLowerCase();","        switch(returnHome){","            case \"y\":","                home(scan, intScan, name, todayDate, args);","                break;","            case \"n\":","                break;","        }","        ","    }","    ","    /**","     * @param Scanner","     * Lists the availible functions and asks the user for input","     * @return int","     */","    private static int promptOper(Scanner intScan){","        //Prompts the user whether they want to open/write current or past log","        println(\"Please select an option\");","        println(\"1) Open today's log\");","        println(\"2) Write today's log\");","        println(\"3) Open a past day's log\");","        println(\"4) Write a past day's log\");","        println(\"5) Log out\");","        int usrOper = intScan.nextInt();","        int oper = 0;","        switch(usrOper){","            case 1:","                oper = 1;","                break;","            case 2:","                oper = 2;","                break;","            case 3:","                oper = 3;","                break;","            case 4:","                oper = 4;","                break;","            case 5:","                oper = 4;","                break;","            default:","                println(\"Error! Invalid Option. Please enter a valid option: \");","                usrOper = promptOper(intScan);","        }","        return usrOper;","    }","    ","    ","    /**","     * @param Scanner","     * @param String","     * @param String","     * Reads the file for today and prints it out on screen","     * @return void","     */","    private static void openLog (Scanner scan, String name, String date) throws java.io.IOException{","        // Locates appropriate file path and stores it in csvFile","        String csvFile = sysCheck(scan, name, date);","        ","        // Checks if the log file exists or not","        if(checkLogExists(csvFile)){","            // If log file exists, read the file","            String arr[][] = CSVUtils.readFile(csvFile);","            println(\"\");","            for(int i = 0; i < arr.length;i++){","                for(int j = 0; j < arr[i].length; j++){","                    if(j == arr[i].length - 1){","                        print(arr[i][j] + \"\");","                    } else {","                        print(arr[i][j] + \" : \");","                    }","                }","                println(\"\");","            }","        }","        ","        // Checks if the log file exists or not","        if(!checkLogExists(csvFile)){","            // If the log file does not exist, print error and end","            println(\"Sorry. There is no log for the given date and user.\");","        }","    }","    ","    /**","     * @param Scanner","     * @param Scanner","     * @param String","     * @param String","     * Asks the user for input and writes their data into today's log","     * @return void","     */","    private static void writeLog (Scanner scan, Scanner intScan, String name, String date) throws java.io.IOException{","        // Prompts user for number of exercises","        println(\"Please input the number of excerises you will be logging for the day: \");","        int numOfEx = intScan.nextInt();","        ","        // Creates CSV file and location based on operating system","        String csvFile = sysCheck(scan, name, date);","        ","        // Checks if the log file exists or not","        if(!checkLogExists(csvFile)){","            // Creates file if it did not exist previously","            createLog(csvFile);","        }","        ","        // Selects created file as file to write to","        FileWriter writer = new FileWriter(csvFile);","        ","        // Create and add headers to the CSV file","        ArrayList<String> headers = new ArrayList<String>();","        headers.add(\"Exercise\");","        headers.add(\"Weight\");","        headers.add(\"Reps\");","        headers.add(\"Sets\");","        CSVUtils.writeLine(writer, headers);","        ","        /*","         * Continuously asks user for input","         * Adds input to ArrayList \"input\"","         * Writes \"input\" to CSV","         * Clears \"input\"","         */","        ArrayList<String> input = new ArrayList<String>();","        for(int i = 0; i < numOfEx; i++){","            // Prompts for input","            println(\"\\n\");","            print(\"Exercise: \");","            String ex = scan.nextLine();","            print(\"Weight: \");","            String we = scan.nextLine();","            print(\"Reps: \");","            String re = scan.nextLine();","            print(\"Sets: \");","            String se = scan.nextLine();","            ","            // Adds input to ArrayList","            input.add(ex);","            input.add(we);","            input.add(re);","            input.add(se);","            ","            // Writes ArrayList to CSV file","            CSVUtils.writeLine(writer, input);","            input.remove(0);","            input.remove(0);","            input.remove(0);","            input.remove(0);","        }","        ","        // Close the file writer and ends method","        writer.flush();","        writer.close();","    }","    ","    /**","     * @param Scanner","     * @param String","     * @param String","     * Asks the user for what operating system they are using in order to ","     *    Establish which file navigation system to use.","     * @return String","     */","    private static String sysCheck(Scanner scan, String name, String date){","        String csvFile = sysCheckDir(scan);","        ","        // Sets csvFile to path of full CSV log file","        csvFile = name + \" - \" + date + \".csv\";","        return csvFile;","    }","    ","    /**","     * @param Scanner","     * Determines correct path to the 'Workout' directory on the user's desktop","     * @return String","     */","    private static String sysCheckDir(Scanner scan){","        // Reads the system for the computer user for file path purposes","        String sysUsrName = System.getProperty(\"user.name\");","        ","        // Initializes variables","        String csvFile = \"\";","        String customDirStr = \"\";","        int opCode = 0;","        ","        //Checks which file navigation system the user's computer uses","        File linuxDir = new File(\"/home/\" + sysUsrName + \"/Desktop/\");","        File windowsDir = new File(\"C:/Users/\" + sysUsrName + \"/Desktop/\");","        File macDir = new File(\"/Users/\" + sysUsrName + \"/Desktop/\");","        boolean linuxDirExists = linuxDir.exists();","        boolean windowsDirExists = windowsDir.exists();","        boolean macDirExists = macDir.exists();","        ","        // Sets opCode relational to which file navigation system the computer uses","        if(linuxDirExists){","            // Use linux file navigation system","            opCode = 1;","        } else if (windowsDirExists){","            // Use windows file navigation system","            opCode = 2;","        } else if (macDirExists){","            // Use mac file navigation system","            opCode = 3;","        } else {","            // Use custom file navigation system","            opCode = 4;","            println(\"Please input the full path to your desktop folder: \");","            customDirStr = scan.nextLine();","        }","        ","        // Sets the csvFile string to contain the path of the system Desktop folder","        switch(opCode){","            case 1: ","                // linux Desktop folder","                Path filePath = linuxDir.toPath();","                csvFile = filePath.toString();","                break;","            case 2:","                // window Desktop folder","                filePath = windowsDir.toPath();","                csvFile = filePath.toString();","                break;","            case 3:","                // mac Desktop folder","                filePath = macDir.toPath();","                csvFile = filePath.toString();","                break;","            case 4:","                // custom Desktop folder","                csvFile = customDirStr;","                break;","        }","        ","        // Check if Workout folder on Desktop exists","        // If not, creates if","        String workoutDirStr = csvFile + \"/Workout/\";","        File workoutDir = new File(workoutDirStr);","        if(!workoutDir.exists()){","            new File(workoutDirStr).mkdirs();","        }","        ","        // Sets csvFile to path of full CSV file","        csvFile = workoutDirStr;","        return csvFile;","    }","    ","    /**","     * @param String","     * Checks if the given log exists","     * @return boolean","     */","    private static boolean checkLogExists(String csvFile){","        // Default if log doesn't exist","        boolean logExists = false;","        ","        //Creates File object with path of log","        File logFile = new File(csvFile);","        ","        //Checks if the log exists","        if(logFile.exists()){","            // Sets boolean to true: the file does exist","            logExists = true;","        }","        ","        return logExists;","    }","    ","    /**","     * @param String","     * Creates the given log file if it does not exist","     * @return void","     */","    private static void createLog(String csvFile) throws java.io.IOException{","        // Creates File object with path of log ","        File logFile = new File(csvFile);","        ","        // Creates an actual file based off of the File object","        logFile.createNewFile();","    }","    ","    /**","     * @param String","     * @param String","     * @param String","     * Adds user to the usrList CSV file","     * @return void","     */","    public static void addUser(String usrName, String pass, String csvFile) throws Exception{","        ","        // Reads CSV file into 2d array 'usrListArray'","        String[][] usrListArr = CSVUtils.readFile(csvFile);","        ","        // Encrypts password","        pass = Protected.encryptPass(pass);","        ","        // Creates ArrayList 'arrL' to hold CSV contents","        ArrayList<String> arrL = new ArrayList<String>();","        ","        // Convert 2d array 'usrListArray' to ArrayList 'arrL'","        for(int i =0; i < usrListArr.length; i++){","            for(int j = 0; j < usrListArr[i].length; j++){","                arrL.add(usrListArr[i][j]);","            }","        }","        ","        // Adds new user and pass to ArrayList 'arrL'","        arrL.add(usrName);","        arrL.add(pass);","        ","        // Writes new user list to CSV file","        FileWriter writer  = new FileWriter(csvFile);","        CSVUtils.writeLine(writer, arrL);","        ","        // Close writer","        writer.flush();","        writer.close();","    }","    ","    /**","     * @param Scanner","     * Calls the addUser method to add a user to the CSV file","     * @return void","     */","    private static void signUp(Scanner scan) throws Exception{","        String usrName = scan.nextLine();","        String passWord = scan.nextLine();","        String csvFile = sysCheckDir(scan) + \"usrList.CSV\";","        addUser(usrName, passWord, csvFile);","    }","    ","    ","    /**","     * @param String","     * Calls the system print method","     * @return void","     */","    private static void print(String print){","        System.out.print(print);","    }","    ","    /**","     * @param String","     * Calls the system println method","     * @return void","     */","    private static void println(String println){","        System.out.println(println);","    }"]},{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":3}},"text":"/**"},{"action":"insertText","range":{"start":{"row":0,"column":3},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":535,"column":0}},"lines":[" * This is a Java Program used to input Excersizes, Weights, Reps, and Sets"," *  ...into a workout log"," *  "," *  @caleberb"," *  v1.2.4"," */","// import statments","import java.io.*;","import java.io.File.*;","import java.nio.file.*;","import java.util.*;","import java.time.*;","import java.time.format.*;","","public class WorkoutLog {","    ","    /**","     * @param args","     * Initializes the constant variables used throughout the class","     * They are not changed by any part of the code","     * @return void","     */","    public static void main(String[] args) throws Exception {","        // Create scanner objects","        Scanner scan = new Scanner(System.in);","        Scanner intScan = new Scanner(System.in);","        ","        // Converts Object LocalDate to String in format MM-DD-YYYY","        LocalDate localDate = LocalDate.now();","        DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"MM-d-yyyy\");","        String date = localDate.format(formatter);","        ","        int logSign = 0;","        println(\"Please choose an option: \");","        println(\"1) Log in\");","        println(\"2) Sign up\");","        println(\"3) Quit\");","        ","        logSign = intScan.nextInt();","        switch(logSign){","            case 1:","                // Logs the user in","                logIn(scan, intScan, date, args);","                break;","            case 2:","                // Signs the user up","                signUp(scan);","                break;","            case 3:","                // Quits the program","                break;","            default:","                // Default option, gives error, calls recursively","                println(\"Error. Please enter a valid option.\");","                main(args);","                break;","        }","        ","    }","    ","    /**","     * @param Scanner","     * @param Scanner","     * @param String","     * @param String[]args","     * Acts as a log in screen for the user, passing them to the home method","     * @return void","     */","    private static void logIn(Scanner scan, Scanner intScan, String date, String[] args) throws Exception{","        String csvFile = sysCheckDir(scan) + \"usrList.CSV\";","        String passHash = \"\";","        ","        // Prompts user for their name","        print(\"Please input your username or \\'000\\' to quit: \");","        String uName = scan.nextLine();","        if(uName.equals(\"000\")){","            main(args);","        }","        ","        if(usrCheck(csvFile, uName)){","            passHash = passCheck(csvFile, uName);","        } else {","            println(\"Error. Username does not exist. Try logging in again.\");","            logIn(scan, intScan, date, args);","        }","        ","        print(\"Please input your password: \");","        String pWord = scan.nextLine();","        ","        String decryptedPass = Protected.decryptPass(passHash);","        ","        if(pWord.equals(decryptedPass)){","            // Enter main program ... not to be confused with main method","            home(scan, intScan, uName, date, args);","        } else {","            println(\"Error. Incorrect Password. Try logging in again.\");","            logIn(scan, intScan, date, args);","        }","        ","        ","        ","    }","    ","    /**","     * @param String","     * @param String","     * Checks if the inputted username exists in the user log","     * @return boolean","     */","    private static boolean usrCheck(String csvFile, String usrName) throws Exception{","        String[][] usrListArr = CSVUtils.readFile(csvFile);","        boolean usrExists = false;        ","        for(int i = 0; i < usrListArr.length; i++){","            if(usrListArr[i][0].equals(usrName)){","                usrExists = true;","            }","        }","        return usrExists;","    }","    ","    /**","     * @param String","     * @param String","     * Retrieves the passWord hash from the usrList CSV file","     * @return String","     */","    private static String passCheck(String csvFile, String usrName) throws Exception{","        String[][] usrListArr = CSVUtils.readFile(csvFile);","        String pass = \"\";        ","        for(int i = 0; i < usrListArr.length; i++){","            if(usrListArr[i][0].equals(usrName)){","                pass = usrListArr[i][1];","            }","        }","        return pass;","    }","    ","    /**","     * @param Scanner ","     * @param Scanner","     * @param String","     * @param String","     * @param String[]args","     * Acts as the main method, an calls itself recursively until user quits","     * @return void","     */","    private static void home(Scanner scan, Scanner intScan, String name, String todayDate, String[] args) throws Exception{","        // Prompts the user whether they want to open/write current or past log","        int usrOper = promptOper(intScan);","        ","        //Follows through with the users prompt","        switch(usrOper){","            case 1: ","                // Open today","                openLog(scan, name, todayDate);","                break;","            case 2: ","                // Write today","                writeLog(scan, intScan, name, todayDate);","                break;","            case 3: ","                // Open past with given date","                print(\"Input date in MM-DD-YYYY format: \");","                String openPastDate = scan.nextLine();","                openLog(scan, name, openPastDate);","                break;","            case 4: ","                // Write past with given date","                print(\"Input date in MM-DD-YYYY format: \");","                String writePastDate = scan.nextLine();","                writeLog(scan, intScan, name, writePastDate);","                break;","            case 5:","                main(args);","                break;","            case 6:","                signUp(scan);","                break;","            default: ","                break;","        }","        ","        //Returns home after program ends if user wishes","        println(\"\\nReturn home? (y/n): \");","        String returnHome = scan.nextLine();","        returnHome = returnHome.toLowerCase();","        switch(returnHome){","            case \"y\":","                home(scan, intScan, name, todayDate, args);","                break;","            case \"n\":","                break;","        }","        ","    }","    ","    /**","     * @param Scanner","     * Lists the availible functions and asks the user for input","     * @return int","     */","    private static int promptOper(Scanner intScan){","        //Prompts the user whether they want to open/write current or past log","        println(\"Please select an option\");","        println(\"1) Open today's log\");","        println(\"2) Write today's log\");","        println(\"3) Open a past day's log\");","        println(\"4) Write a past day's log\");","        println(\"5) Log out\");","        int usrOper = intScan.nextInt();","        int oper = 0;","        switch(usrOper){","            case 1:","                oper = 1;","                break;","            case 2:","                oper = 2;","                break;","            case 3:","                oper = 3;","                break;","            case 4:","                oper = 4;","                break;","            case 5:","                oper = 4;","                break;","            default:","                println(\"Error! Invalid Option. Please enter a valid option: \");","                usrOper = promptOper(intScan);","        }","        return usrOper;","    }","    ","    ","    /**","     * @param Scanner","     * @param String","     * @param String","     * Reads the file for today and prints it out on screen","     * @return void","     */","    private static void openLog (Scanner scan, String name, String date) throws java.io.IOException{","        // Locates appropriate file path and stores it in csvFile","        String csvFile = sysCheck(scan, name, date);","        ","        // Checks if the log file exists or not","        if(checkLogExists(csvFile)){","            // If log file exists, read the file","            String arr[][] = CSVUtils.readFile(csvFile);","            println(\"\");","            for(int i = 0; i < arr.length;i++){","                for(int j = 0; j < arr[i].length; j++){","                    if(j == arr[i].length - 1){","                        print(arr[i][j] + \"\");","                    } else {","                        print(arr[i][j] + \" : \");","                    }","                }","                println(\"\");","            }","        }","        ","        // Checks if the log file exists or not","        if(!checkLogExists(csvFile)){","            // If the log file does not exist, print error and end","            println(\"Sorry. There is no log for the given date and user.\");","        }","    }","    ","    /**","     * @param Scanner","     * @param Scanner","     * @param String","     * @param String","     * Asks the user for input and writes their data into today's log","     * @return void","     */","    private static void writeLog (Scanner scan, Scanner intScan, String name, String date) throws java.io.IOException{","        // Prompts user for number of exercises","        println(\"Please input the number of excerises you will be logging for the day: \");","        int numOfEx = intScan.nextInt();","        ","        // Creates CSV file and location based on operating system","        String csvFile = sysCheck(scan, name, date);","        ","        // Checks if the log file exists or not","        if(!checkLogExists(csvFile)){","            // Creates file if it did not exist previously","            createLog(csvFile);","        }","        ","        // Selects created file as file to write to","        FileWriter writer = new FileWriter(csvFile);","        ","        // Create and add headers to the CSV file","        ArrayList<String> headers = new ArrayList<String>();","        headers.add(\"Exercise\");","        headers.add(\"Weight\");","        headers.add(\"Reps\");","        headers.add(\"Sets\");","        CSVUtils.writeLine(writer, headers);","        ","        /*","         * Continuously asks user for input","         * Adds input to ArrayList \"input\"","         * Writes \"input\" to CSV","         * Clears \"input\"","         */","        ArrayList<String> input = new ArrayList<String>();","        for(int i = 0; i < numOfEx; i++){","            // Prompts for input","            println(\"\\n\");","            print(\"Exercise: \");","            String ex = scan.nextLine();","            print(\"Weight: \");","            String we = scan.nextLine();","            print(\"Reps: \");","            String re = scan.nextLine();","            print(\"Sets: \");","            String se = scan.nextLine();","            ","            // Adds input to ArrayList","            input.add(ex);","            input.add(we);","            input.add(re);","            input.add(se);","            ","            // Writes ArrayList to CSV file","            CSVUtils.writeLine(writer, input);","            input.remove(0);","            input.remove(0);","            input.remove(0);","            input.remove(0);","        }","        ","        // Close the file writer and ends method","        writer.flush();","        writer.close();","    }","    ","    /**","     * @param Scanner","     * @param String","     * @param String","     * Asks the user for what operating system they are using in order to ","     *    Establish which file navigation system to use.","     * @return String","     */","    private static String sysCheck(Scanner scan, String name, String date){","        String csvFile = sysCheckDir(scan);","        ","        // Sets csvFile to path of full CSV log file","        csvFile = name + \" - \" + date + \".csv\";","        return csvFile;","    }","    ","    /**","     * @param Scanner","     * Determines correct path to the 'Workout' directory on the user's desktop","     * @return String","     */","    private static String sysCheckDir(Scanner scan){","        // Reads the system for the computer user for file path purposes","        String sysUsrName = System.getProperty(\"user.name\");","        ","        // Initializes variables","        String csvFile = \"\";","        String customDirStr = \"\";","        int opCode = 0;","        ","        //Checks which file navigation system the user's computer uses","        File linuxDir = new File(\"/home/\" + sysUsrName + \"/Desktop/\");","        File windowsDir = new File(\"C:/Users/\" + sysUsrName + \"/Desktop/\");","        File macDir = new File(\"/Users/\" + sysUsrName + \"/Desktop/\");","        boolean linuxDirExists = linuxDir.exists();","        boolean windowsDirExists = windowsDir.exists();","        boolean macDirExists = macDir.exists();","        ","        // Sets opCode relational to which file navigation system the computer uses","        if(linuxDirExists){","            // Use linux file navigation system","            opCode = 1;","        } else if (windowsDirExists){","            // Use windows file navigation system","            opCode = 2;","        } else if (macDirExists){","            // Use mac file navigation system","            opCode = 3;","        } else {","            // Use custom file navigation system","            opCode = 4;","            println(\"Please input the full path to your desktop folder: \");","            customDirStr = scan.nextLine();","        }","        ","        // Sets the csvFile string to contain the path of the system Desktop folder","        switch(opCode){","            case 1: ","                // linux Desktop folder","                Path filePath = linuxDir.toPath();","                csvFile = filePath.toString();","                break;","            case 2:","                // window Desktop folder","                filePath = windowsDir.toPath();","                csvFile = filePath.toString();","                break;","            case 3:","                // mac Desktop folder","                filePath = macDir.toPath();","                csvFile = filePath.toString();","                break;","            case 4:","                // custom Desktop folder","                csvFile = customDirStr;","                break;","        }","        ","        // Check if Workout folder on Desktop exists","        // If not, creates if","        String workoutDirStr = csvFile + \"/Workout/\";","        File workoutDir = new File(workoutDirStr);","        if(!workoutDir.exists()){","            new File(workoutDirStr).mkdirs();","        }","        ","        // Sets csvFile to path of full CSV file","        csvFile = workoutDirStr;","        return csvFile;","    }","    ","    /**","     * @param String","     * Checks if the given log exists","     * @return boolean","     */","    private static boolean checkLogExists(String csvFile){","        // Default if log doesn't exist","        boolean logExists = false;","        ","        //Creates File object with path of log","        File logFile = new File(csvFile);","        ","        //Checks if the log exists","        if(logFile.exists()){","            // Sets boolean to true: the file does exist","            logExists = true;","        }","        ","        return logExists;","    }","    ","    /**","     * @param String","     * Creates the given log file if it does not exist","     * @return void","     */","    private static void createLog(String csvFile) throws java.io.IOException{","        // Creates File object with path of log ","        File logFile = new File(csvFile);","        ","        // Creates an actual file based off of the File object","        logFile.createNewFile();","    }","    ","    /**","     * @param String","     * @param String","     * @param String","     * Adds user to the usrList CSV file","     * @return void","     */","    private static void addUser(String usrName, String pass, String csvFile) throws Exception{","        ","        // Reads CSV file into 2d array 'usrListArray'","        String[][] usrListArr = CSVUtils.readFile(csvFile);","        ","        // Encrypts password","        pass = Protected.encryptPass(pass);","        ","        // Creates ArrayList 'arrL' to hold CSV contents","        ArrayList<String> arrL = new ArrayList<String>();","        ","        // Convert 2d array 'usrListArray' to ArrayList 'arrL'","        for(int i =0; i < usrListArr.length; i++){","            for(int j = 0; j < usrListArr[i].length; j++){","                arrL.add(usrListArr[i][j]);","            }","        }","        ","        // Adds new user and pass to ArrayList 'arrL'","        arrL.add(usrName);","        arrL.add(pass);","        ","        // Writes new user list to CSV file","        FileWriter writer  = new FileWriter(csvFile);","        CSVUtils.writeLine(writer, arrL);","        ","        // Close writer","        writer.flush();","        writer.close();","    }","    ","    /**","     * @param Scanner","     * Calls the addUser method to add a user to the CSV file","     * @return void","     */","    private static void signUp(Scanner scan) throws Exception{","        String usrName = scan.nextLine();","        String passWord = scan.nextLine();","        String csvFile = sysCheckDir(scan) + \"usrList.CSV\";","        addUser(usrName, passWord, csvFile);","    }","    ","    ","    /**","     * @param String","     * Calls the system print method","     * @return void","     */","    private static void print(String print){","        System.out.print(print);","    }","    ","    /**","     * @param String","     * Calls the system println method","     * @return void","     */","    private static void println(String println){","        System.out.println(println);","    }"]},{"action":"insertText","range":{"start":{"row":535,"column":0},"end":{"row":535,"column":1}},"text":"}"}]}]],"redo":[]},"/tester.java":{"scrollTop":587,"scrollLeft":0,"selection":{"start":{"row":22,"column":4},"end":{"row":54,"column":5}},"lastUse":1524319613447,"undo":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":43,"column":36},"end":{"row":43,"column":37}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":43,"column":37},"end":{"row":43,"column":38}},"text":"A"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":43,"column":38},"end":{"row":43,"column":39}},"text":"r"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":43,"column":39},"end":{"row":43,"column":40}},"text":"r"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":43,"column":40},"end":{"row":43,"column":41}},"text":"a"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":43,"column":41},"end":{"row":43,"column":42}},"text":"y"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":43,"column":42},"end":{"row":43,"column":43}},"text":"L"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":43,"column":43},"end":{"row":43,"column":44}},"text":"i"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":43,"column":44},"end":{"row":43,"column":45}},"text":"s"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":43,"column":45},"end":{"row":43,"column":46}},"text":"t"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":43,"column":46},"end":{"row":43,"column":47}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":43,"column":47},"end":{"row":43,"column":49}},"text":"''"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":43,"column":48},"end":{"row":43,"column":49}},"text":"a"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":43,"column":49},"end":{"row":43,"column":50}},"text":"r"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":43,"column":50},"end":{"row":43,"column":51}},"text":"r"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":43,"column":51},"end":{"row":43,"column":52}},"text":"L"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":46,"column":8},"end":{"row":47,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":47,"column":0},"end":{"row":47,"column":8}},"text":"        "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":47,"column":8},"end":{"row":47,"column":9}},"text":"/"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":47,"column":9},"end":{"row":47,"column":10}},"text":"/"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":47,"column":10},"end":{"row":47,"column":11}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":47,"column":11},"end":{"row":47,"column":12}},"text":"T"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":47,"column":12},"end":{"row":47,"column":13}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":47,"column":13},"end":{"row":47,"column":14}},"text":"s"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":47,"column":14},"end":{"row":47,"column":15}},"text":"t"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":49,"column":0},"end":{"row":49,"column":8}},"text":"        "},{"action":"removeLines","range":{"start":{"row":47,"column":0},"end":{"row":49,"column":0}},"nl":"\n","lines":["        // Test","        System.out.println(arrL);"]},{"action":"removeText","range":{"start":{"row":46,"column":8},"end":{"row":47,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":48,"column":4},"end":{"row":48,"column":8}},"text":"    "}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":48,"column":0},"end":{"row":48,"column":4}},"text":"    "}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":47,"column":53},"end":{"row":48,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":46,"column":8},"end":{"row":47,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":47,"column":0},"end":{"row":47,"column":8}},"text":"        "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":47,"column":8},"end":{"row":47,"column":9}},"text":"/"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":47,"column":9},"end":{"row":47,"column":10}},"text":"/"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":47,"column":10},"end":{"row":47,"column":11}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":47,"column":11},"end":{"row":47,"column":12}},"text":"W"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":47,"column":12},"end":{"row":47,"column":13}},"text":"r"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":47,"column":13},"end":{"row":47,"column":14}},"text":"i"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":47,"column":14},"end":{"row":47,"column":15}},"text":"t"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":47,"column":15},"end":{"row":47,"column":16}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":47,"column":16},"end":{"row":47,"column":17}},"text":"s"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":47,"column":17},"end":{"row":47,"column":18}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":47,"column":18},"end":{"row":47,"column":19}},"text":"n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":47,"column":19},"end":{"row":47,"column":20}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":47,"column":20},"end":{"row":47,"column":21}},"text":"w"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":47,"column":21},"end":{"row":47,"column":22}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":47,"column":22},"end":{"row":47,"column":23}},"text":"u"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":47,"column":23},"end":{"row":47,"column":24}},"text":"s"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":47,"column":24},"end":{"row":47,"column":25}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":47,"column":25},"end":{"row":47,"column":26}},"text":"r"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":47,"column":26},"end":{"row":47,"column":27}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":47,"column":27},"end":{"row":47,"column":28}},"text":"l"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":47,"column":28},"end":{"row":47,"column":29}},"text":"i"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":47,"column":29},"end":{"row":47,"column":30}},"text":"s"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":47,"column":30},"end":{"row":47,"column":31}},"text":"t"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":47,"column":31},"end":{"row":47,"column":32}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":47,"column":32},"end":{"row":47,"column":33}},"text":"t"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":47,"column":33},"end":{"row":47,"column":34}},"text":"o"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":47,"column":34},"end":{"row":47,"column":35}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":47,"column":35},"end":{"row":47,"column":36}},"text":"C"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":47,"column":36},"end":{"row":47,"column":37}},"text":"S"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":47,"column":37},"end":{"row":47,"column":38}},"text":"V"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":47,"column":38},"end":{"row":47,"column":39}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":47,"column":39},"end":{"row":47,"column":40}},"text":"f"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":47,"column":40},"end":{"row":47,"column":41}},"text":"i"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":47,"column":41},"end":{"row":47,"column":42}},"text":"l"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":47,"column":42},"end":{"row":47,"column":43}},"text":"e"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":50,"column":8},"end":{"row":51,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":51,"column":0},"end":{"row":51,"column":8}},"text":"        "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":51,"column":8},"end":{"row":51,"column":9}},"text":"/"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":51,"column":9},"end":{"row":51,"column":10}},"text":"/"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":51,"column":10},"end":{"row":51,"column":11}},"text":"C"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":51,"column":11},"end":{"row":51,"column":12}},"text":"l"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":51,"column":12},"end":{"row":51,"column":13}},"text":"o"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":51,"column":12},"end":{"row":51,"column":13}},"text":"o"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":51,"column":11},"end":{"row":51,"column":12}},"text":"l"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":51,"column":10},"end":{"row":51,"column":11}},"text":"C"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":51,"column":10},"end":{"row":51,"column":11}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":51,"column":11},"end":{"row":51,"column":12}},"text":"C"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":51,"column":12},"end":{"row":51,"column":13}},"text":"l"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":51,"column":13},"end":{"row":51,"column":14}},"text":"o"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":51,"column":14},"end":{"row":51,"column":15}},"text":"s"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":51,"column":15},"end":{"row":51,"column":16}},"text":"e"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":51,"column":16},"end":{"row":51,"column":17}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":51,"column":17},"end":{"row":51,"column":18}},"text":"w"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":51,"column":18},"end":{"row":51,"column":19}},"text":"r"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":51,"column":19},"end":{"row":51,"column":20}},"text":"i"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":51,"column":20},"end":{"row":51,"column":21}},"text":"t"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":51,"column":21},"end":{"row":51,"column":22}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":51,"column":22},"end":{"row":51,"column":23}},"text":"r"}]}]],"redo":[]},"/CSVUtils.java":{"scrollTop":0,"scrollLeft":0,"selection":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"lastUse":1524318739009,"undo":[],"redo":[]}},"window":{"width":1366,"height":687,"top":0,"left":0,"isMaximized":true}}